}else if(A.parFree$op[i] == "~"){
colNum <- which(A.parFree$rhs[i] == colnames(A))
rowNum <- which(A.parFree$lhs[i] == rownames(A))
A[rowNum,colNum] = i
}
}
}else{
A = A
}
# A of free parameters
A_fixed <- A > 10000
parA_fixed = A.parT[A.parT$free == 0,]
for(gg in 1:nrow(parA_fixed)){
coll = which(parA_fixed$lhs[gg] == colnames(A_fixed))
roww = which(parA_fixed$rhs[gg] == rownames(A_fixed))
A_fixed[roww,coll] = T
}
# A_est
A_est = A_init
if(nrow(A.pars) > 0){
for(i in 1:nrow(A.pars)){
if(A.pars$op[i] == "=~"){
colNum <- which(A.pars$lhs[i] == colnames(A_est))
rowNum <- which(A.pars$rhs[i] == rownames(A_est))
A_est[rowNum,colNum] = A.pars$est[i]
}else if(A.pars$op[i] == "~1"){
A_est[which(rownames(A_est)==A.pars$lhs[i]),which(colnames(A_est) == "1")] = A.pars$est[i]
}else if(A.pars$op[i] == "~"){
colNum <- which(A.pars$rhs[i] == colnames(A_est))
rowNum <- which(A.pars$lhs[i] == rownames(A_est))
A_est[rowNum,colNum] = A.pars$est[i]
}
}
}else{
A_est = A_est
}
# create F
F <- A_init[1:(nvar + ifelse(any(pars$op == "~1"),1,0)),]
varNames <- model@pta$vnames$ov.model[[1]]
f.names <- colnames(A)[1:(length(varNames) + ifelse(any(pars$op == "~1"),1,0))]
for(ii in 1:length(f.names)){
#Numm = which(colnames(F)[ii] == f.names[ii])
F[ii,ii] = 1
}
# create S
covars <- pars[pars$op == "~~",]
covarT <- parT[parT$op == "~~",]
S_init <- matrix(0, nrow = nvar + nfac2, ncol = nvar + nfac2)
colnames(S_init) <- colnames(A); rownames(S_init) <- rownames(A)
# S_est -- equality doesn't effect
S_est <- as.matrix(S_init)
for(jj in 1:nrow(covars)){
col1 = which(colnames(S_est) == covars$lhs[jj])
row1 = which(rownames(S_est) == covars$rhs[jj])
S_est[row1,col1] = covars$est[jj]
}
if(any(S_est[lower.tri(S_est)] != 0)){
S_est <- S_est + t(S_est) - diag(diag(S_est))
}
S_est[rownames(S_est) == "1",colnames(S_est) == "1"] <- 1
# S
S <- S_init
covarT.free <- covarT[covarT$free > 0, ]
# any equality?
if(any(duplicated(covarT.free$label[covarT.free$label != ""]) == T)){
labels = unique(covarT.free$label[covarT.free$label != ""])
equals = covarT.free$free[covarT.free$label == labels]
min.equal = min(equals)
max.equal = max(equals)
covarT.free$free[covarT.free$label == labels] <- min.equal
dec = max.equal - min.equal
covarT.free$free[covarT.free$label != labels] <- covarT.free$free[covarT.free$label != labels] - dec
}
for(jj in 1:nrow(covarT.free)){
col1 = which(colnames(S) == covarT.free$lhs[jj])
row1 = which(rownames(S) == covarT.free$rhs[jj])
S[row1,col1] = covarT.free$free[jj]
}
if(any(S[lower.tri(S)] != 0)){
S <- S + t(S) - diag(diag(S))
}
if(sum(S >0 ) > 0){
dec2 = max(A) - min(S[S != 0]) + 1
S[S != 0] = S[S != 0] + dec2
}else{
S = S
}
# S_fixed
#S_fixed <- S_init
S_fixed <- S_init > 10000
covarT.fixed <- covarT[covarT$free == 0, ]
if(nrow(covarT.fixed) > 0){
for(jj in 1:nrow(covarT.fixed)){
col1 = which(colnames(S_fixed) == covarT.fixed$lhs[jj])
row1 = which(rownames(S_fixed) == covarT.fixed$rhs[jj])
S_fixed[row1,col1] = TRUE
}
}
if(any(S_fixed - diag(S_fixed) == 0 )){
S_fixed = S_fixed + t(S_fixed) -diag(diag(S_fixed))
S_fixed = S_fixed == 1
}else{
S_fixed = S_fixed
}
S_fixed[rownames(S_est) == "1",colnames(S_est) == "1"] <- TRUE
pars <- rep(NA,max(max(A),max(S)))
for(tt in 1:max(max(A),max(S))){
if(any(A == tt)==TRUE){
pars[tt] = A_est[A==tt][1]
}
else if(any(S == tt)==TRUE){
pars[tt] = S_est[S==tt][1]
}
}
for(i in 1:length(pars)){
if(any(A == i)){
pos = which(A == i,arr.ind=T)
one = colnames(A)[pos[2]]
two = rownames(A)[pos[1]]
names(pars)[i] = paste(one,"->",two)
}else if(any(S==i)){
pos = which(S == i,arr.ind=T)
one = colnames(S)[pos[2]]
two = rownames(S)[pos[1]]
names(pars)[i] = paste(one,"~~",two)
}
}
# return Matrices
matrices$A <- A
matrices$A_est <- A_est
matrices$A_fixed <- A_fixed
matrices$S <- S
matrices$S_est <- S_est
matrices$S_fixed <- S_fixed
matrices$F <- F
matrices$parameters <- round(pars,3)
matrices
}
library(regsem)
library(regsem)
require(lavaan)
data(HolzingerSwineford1939)
HS.model <- ' visual =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed =~ x7 + x8 + x9 '
fit <- cfa(HS.model, data=HolzingerSwineford1939)
extractMatrices(fit)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
?trace
library(regsem)
mat_trace <- function(mat){
return(sum(diag(mat)))
}
mat_trace(matrix(c(1,2,3,4),2,2))
library(regsem)
library(regsem)
library(regsem)
library(regsem)
?mat_trace
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
mat_trace <- function(mat){
return(sum(diag(mat)))
}
mm = matrix(c(1,2,3,4),2,2)
mat_trace(mm)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
?regsem
??regsem
library(regsem)
remove.packages("regsem")
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(lavaan)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
mod <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f~~1*f
'
outt = cfa(mod,HS)
summary(outt)
fitMeasures(outt)
lower = c(rep(-6,9),rep(1e-6,9))
#lower = rep(-10,18)
upper = rep(10,18)
fit1 <- regsem(outt,lambda=0,type="lasso",optMethod="nlminb",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
library(lavaan);library(regsem)
fit1 <- regsem(outt,lambda=0,type="lasso",optMethod="nlminb",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
fit1 <- regsem(outt,lambda=0,type="lasso",optMethod="nlminb",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
fit1 <- regsem::regsem(outt,lambda=0,type="lasso",optMethod="nlminb",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
?regsem
library(regsem)
fit1 <- regsem(outt,lambda=0,type="lasso",optMethod="nlminb",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
fit1
summary(outt)
library(regsem)
fit1 <- regsem(outt,lambda=0,type="lasso",optMethod="nlminb",
gradFun="timo",hessFun="timo",
tol=1e-10,max.iter=1000)
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
fit1 <- regsem(outt,lambda=0,type="lasso",optMethod="nlminb",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
fit1 <- mult_optim(outt,SHRINK=0,type="lasso",optMethod="nlminb",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
fit1 <- multi_optim(outt,SHRINK=0,type="lasso",optMethod="nlminb",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
fit1 <- multi_optim(outt,SHRINK=0,type="lasso",optMethod="nlminb",
gradFun="timo",#hessFun="timo")
fit1 <- multi_optim(outt,SHRINK=0,type="lasso",optMethod="nlminb",
gradFun="timo"),#hessFun="timo")
fit1 <- multi_optim(outt,SHRINK=0,type="lasso",optMethod="nlminb",
gradFun="timo")#hessFun="timo")
library(regsem)
fit1 <- multi_optim(outt,SHRINK=0,type="lasso",optMethod="nlminb",
gradFun="timo")#hessFun="timo")
warnings()
fit1
fit1 <- multi_optim(outt,SHRINK=0,type="lasso",optMethod="nlminb",
gradFun="timo")#hessFun="timo")
rm(fit1)
fit1 <- multi_optim(outt,SHRINK=0,type="lasso",optMethod="nlminb",
gradFun="timo")#hessFun="timo")
fit1 <- multi_optim(outt,SHRINK=0,type="lasso",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:4))#hessFun="timo")
fit1 <- multi_optim(outt,SHRINK=0,type="lasso",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:4),hessFun="none")
fit1
fit1 <- multi_optim(outt,SHRINK=0.2,type="lasso",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:4),hessFun="none")
fit1
fit1 <- multi_optim(outt,SHRINK=0.6,type="lasso",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:4),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- regsem(outt,lambda=0.2,type="lasso",optMethod="nlminb",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0.2,type="lasso",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:9),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0.2,type="lasso",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:5),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0.2,type="lasso",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0.2,type="lasso",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:4),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0.2,type="lasso",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:2),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0.2,type="lasso",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:6),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0,type="lasso",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:6),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- regsem(outt,lambda=0,type="lasso",optMethod="optim_rj",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- regsem(outt,lambda=0,type="lasso",optMethod="nlminb",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0,type="diff",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:6),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0,type="ridge",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:6),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0.2,type="ridge",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:6),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0.2,type="ridge",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:6),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0.2,type="ridge",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:6),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0.2,type="ridge",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0.2,type="ridge",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0.5,type="ridge",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- regsem(outt,lambda=0.2,type="ridge",optMethod="nlminb",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0.5,type="ridge",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0.5,type="ridge",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- multi_optim(outt,SHRINK=0.3,type="ridge",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
multi_optim(outt,SHRINK=0.3,type="ridge",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit2 <- multi_optim(outt,SHRINK=0.3,type="ridge",optMethod="nlminb",
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit2$fit;fit2$convergence;fit2$iterations;fit2$KKT1;fit2$KKT2
round(fit2$par.ret,4)
fit2 <- multi_optim(outt,SHRINK=0.3,type="ridge",optMethod="nlminb",max.try=100,
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit2$fit;fit2$convergence;fit2$iterations;fit2$KKT1;fit2$KKT2
round(fit2$par.ret,4)
fit2 <- multi_optim(outt,SHRINK=0.4,type="ridge",optMethod="nlminb",max.try=100,
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit2$fit;fit2$convergence;fit2$iterations;fit2$KKT1;fit2$KKT2
round(fit2$par.ret,4)
fit2 <- multi_optim(outt,SHRINK=0.5,type="ridge",optMethod="nlminb",max.try=100,
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit2$fit;fit2$convergence;fit2$iterations;fit2$KKT1;fit2$KKT2
round(fit2$par.ret,4)
fit2 <- multi_optim(outt,SHRINK=0.5,type="lasso",optMethod="nlminb",max.try=100,
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit2$fit;fit2$convergence;fit2$iterations;fit2$KKT1;fit2$KKT2
round(fit2$par.ret,4)
fit2 <- multi_optim(outt,SHRINK=0.4,type="lasso",optMethod="nlminb",max.try=100,
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit2$fit;fit2$convergence;fit2$iterations;fit2$KKT1;fit2$KKT2
round(fit2$par.ret,4)
fit2 <- multi_optim(outt,SHRINK=0.1,type="lasso",optMethod="nlminb",max.try=100,
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit2$fit;fit2$convergence;fit2$iterations;fit2$KKT1;fit2$KKT2
round(fit2$par.ret,4)
library(regsem)
fit2 <- multi_optim(outt,SHRINK=0.1,type="lasso",optMethod="nlminb",max.try=100,
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit2$fit;fit2$convergence;fit2$iterations;fit2$KKT1;fit2$KKT2
round(fit2$par.ret,4)
fit2 <- multi_optim(outt,SHRINK=0.1,type="lasso",optMethod="nlminb",max.try=100,
gradFun="timo",pars_pen=c(1:3),hessFun="timo")
fit1 <- regsem(outt,lambda=0.2,type="ridge",optMethod="nlminb",
gradFun="timo",hessFun="timo",
tol=1e-10,max.iter=1000)
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
traceback()
fit1 <- regsem(outt,lambda=0.2,type="ridge",optMethod="nlminb",
gradFun="timo",hessFun="timo",
tol=1e-10,max.iter=1000)
traceback()
fit1 <- regsem(outt,lambda=0.2,type="ridge",optMethod="nlminb",
gradFun="timo",hessFun="timo",
tol=1e-10,max.iter=1000)
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit1 <- regsem(outt,lambda=0.2,type="ridge",optMethod="optimx",
gradFun="timo",hessFun="timo",
tol=1e-10,max.iter=1000)
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
library(regsem)
devtools::use_rcpp()
library(regsem)
library(regsem)
library(regsem)
RcppArmadillo.package.skeleton()
library(RcppArmadillo)
RcppArmadillo.package.skeleton()
RcppArmadillo.package.skeleton()
library(regsem)
devtools::use_rcpp()
library(regsem)
library(regsem)
library(regsem)
library(lavaan)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
mod <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f~~1*f
'
outt = cfa(mod,HS)
summary(outt)
fitMeasures(outt)
lower = c(rep(-6,9),rep(1e-6,9))
#lower = rep(-10,18)
upper = rep(10,18)
fit1 <- regsem(outt,lambda=0.2,type="ridge",optMethod="optimx",
gradFun="timo",hessFun="timo",
tol=1e-10,max.iter=1000)
fit1 <- regsem(outt,lambda=0.2,type="ridge",optMethod="optimx",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
fit1 <- regsem(outt,lambda=0.2,type="ridge",optMethod="nlminb",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
fit1 <- regsem(outt,lambda=0,type="ridge",optMethod="nlminb",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
round(fit1$par.ret,4)
fit2 <- multi_optim(outt,SHRINK=0.1,type="lasso",optMethod="nlminb",max.try=100,
gradFun="timo",pars_pen=c(1:3),hessFun="timo")
fit2 <- multi_optim(outt,SHRINK=0.1,type="lasso",optMethod="nlminb",max.try=100,
gradFun="timo",pars_pen=c(1:3),hessFun="none")
fit2$fit;fit2$convergence;fit2$iterations;fit2$KKT1;fit2$KKT2
round(fit2$par.ret,4)
fit1 <- regsem(outt,lambda=0.3,type="lasso",optMethod="nlminb",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
fit1 <- regsem(outt,lambda=0.3,type="lasso",optMethod="nlminb",
gradFun="timo",#hessFun="timo",
tol=1e-10,max.iter=1000)
fit1$fit;fit1$convergence;fit1$iterations;fit1$KKT1;fit1$KKT2
fit2 <- multi_optim(outt,SHRINK=0.3,type="lasso",optMethod="nlminb",max.try=100,
gradFun="timo",pars_pen=c(1:9),hessFun="none")
fit2$fit;fit2$convergence;fit2$iterations;fit2$KKT1;fit2$KKT2
round(fit2$par.ret,4)
library(regsem)
library(regsem)
library(regsem)

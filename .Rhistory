fanc.out1 <- fanc(as.matrix(dat),2)
fanc.out1
plot(fanc.out1)
plot(ggm.out1)
fanc.out1 <- fanc(as.matrix(dat),3)
plot(fanc.out1)
fanc.out2 <- fanc(as.matrix(dat2),3)
plot(fanc.out1)
fanc.out2 <- fanc(as.matrix(dat2),4)
plot(fanc.out1)
plot(fanc.out2)
fanc.out3 <- fanc(as.matrix(dat33),2)
plot(fanc.out3)
mod33.2 <- '
f1 =~ 1*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10
f1 =~ NA*x1 + x2 + x3 + x4 + x5 + 1*x6 + x7 + x8 + x9 + x10
'
sim.run33.2 <- cfa(mod33.2,dat33)
mod33.2 <- '
f1 =~ 1*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10
f2 =~ NA*x1 + x2 + x3 + x4 + x5 + 1*x6 + x7 + x8 + x9 + x10
'
sim.run33.2 <- cfa(mod33.2,dat33)
summary(sim.run33.2,fit=T)
extractMatrices(sim.run33.2)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05)
?cv_regsem
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05,Start=0)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05,Start=0,lambda.start=0.2)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05,Start="default",lambda.start=0.2)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="slsqp",
n.lambda=20,jump=0.05,Start="default",lambda.start=0.2)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="NlcOptim",
n.lambda=20,jump=0.05,Start="default",lambda.start=0.2)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05,Start="default",lambda.start=0.2)
summary(sim.run33.2,fit=T)
sim.run33.2 <- cfa(mod33.2,dat33,do.fit=F)
summary(sim.run33.2,fit=T)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05,Start="default",lambda.start=0.2)
plot(cv.out33.2)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05,Start="default",lambda.start=0)
plot(cv.out33.2)
cv.out33.2
?cv_regsem
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("TLI"))
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="TLI",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("TLI"))
plot(cv.out33.2)
cv.out33.2
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="ncp",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("ncp"))
plot(cv.out33.2)
cv.out33.2
plot(cv.out33.2)
plot(cv.out33.2,show.minimum="ncp")
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="Fmin",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("Fmin"))
plot(cv.out33.2,show.minimum="Fmin")
cv.out33.2
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="chisq",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("chisq"))
cv.out33.2
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="chisq",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("chisq","df"))
cv.out33.2
r.out <-regsem(sim.run33.2,type="lasso",pars_pen=c(1:18))
r.out
r.out$df
r.out <-regsem(sim.run33.2,type="lasso",pars_pen=c(1:18),lambda=0.2)
r.out$df
r.out <-regsem(sim.run33.2,type="lasso",pars_pen=c(1:18),lambda=0.2)
plot(cv.out33.2,show.minimum="Fmin")
library(regsem)
r.out <-regsem(sim.run33.2,type="lasso",pars_pen=c(1:18),lambda=0.2)
str(sim.run33.2)
sim.run33.2@Fit@test[[1]]$df
sim.run33.2 <- cfa(mod33.2,dat33,do.fit=F)
sim.run33.2 <- cfa(mod33.2,dat33,do.fit=T)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="chisq",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("chisq","df"))
r.out <-regsem(sim.run33.2,type="lasso",pars_pen=c(1:18),Start="default")
r.out
summary(r.out)
summary(sim.run33.2,fit=T)
sim.run33.2 <- cfa(mod33.2,dat33,do.fit=F)
?cv_regsem
library(regsem)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="chisq",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("chisq","df"))
library(regsem)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="chisq",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("chisq","df"))
plot(cv.out33.2,show.minimum="Fmin")
plot(cv.out33.2,show.minimum="chisq")
?cv_regsem
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="chisq",fit.ret2="boot",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("chisq","df"))
plot(cv.out33.2,show.minimum="chisq")
cv.out33.2
cv.out33.2 = cv_regsem(sim.run33.2,type="alasso", pars_pen=c(1:18),optMethod="rsolnp",metric="chisq",fit.ret2="boot",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("chisq","df"))
plot(cv.out33.2,show.minimum="chisq")
cv.out33.2
library(regsem)
library(regsem)
library(lavaan)
library(regsem);library(lavaan)
sim.mod <- "
f1 =~ 1*y1 + 1*y2 + 1*y3+ 1*y4 + 1*y5
f1 ~ 0*x1 + 0*x2 + 0*x3 + 0*x4 + 0*x5 + 0.2*x6 + 0.5*x7 0.8*x8"
dat.sim = simulateData(sim.mod,sample.nobs=200)
sim.mod <- "
f1 =~ 1*y1 + 1*y2 + 1*y3+ 1*y4 + 1*y5
f1 ~ 0*x1 + 0*x2 + 0*x3 + 0*x4 + 0*x5 + 0.2*x6 + 0.5*x7 + 0.8*x8"
dat.sim = simulateData(sim.mod,sample.nobs=200,seed=1)
run.mod <- "
f1 =~ NA*y1 + y2 + y3+ y4 + y5
f1 ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8
"
lav.out <- sem(run.mod,dat.sim)
summary(lav.out)
sim.mod <- "
f1 =~ 1*y1 + 1*y2 + 1*y3+ 1*y4 + 1*y5
f1 ~ 0*x1 + 0*x2 + 0*x3 + 0*x4 + 0*x5 + 0.2*x6 + 0.5*x7 + 0.8*x8
f1~~0.5*f1"
dat.sim = simulateData(sim.mod,sample.nobs=200,seed=1)
run.mod <- "
f1 =~ NA*y1 + y2 + y3+ y4 + y5
f1 ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8
f1~~1*f1
"
lav.out <- sem(run.mod,dat.sim)
summary(lav.out)
?cv_regsem
run.mod <- "
f1 =~ NA*y1 + y2 + y3+ y4 + y5
f1 ~ c1*x1 + c2*x2 + c3*x3 + c4*x4 + c5*x5 + c6*x6 + c7*x7 + c8*x8
f1~~1*f1
"
lav.out <- sem(run.mod,dat.sim)
summary(lav.out)
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
summary(reg.out)
plot(reg.out)
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.01,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
summary(reg.out)
plot(reg.out)
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.02,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
summary(reg.out)
plot(reg.out)
reg.out <- cv_regsem(lav.out,n.lambda=50,type="lasso",jump=0.02,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
summary(reg.out)
plot(reg.out)
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.03,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
summary(reg.out)
plot(reg.out)
?cv_regsem
reg.out2 <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.03,fit.ret2="boot",
metric="chisq",fit.ret="chisq",
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
summary(reg.out2)
plot(reg.out2)
sim.mod <- "
f1 =~ 1*y1 + 1*y2 + 1*y3+ 1*y4 + 1*y5
f1 ~ 0*x1 + 0*x2 + 0*x3 + 0*x4 + 0*x5 + 0.2*x6 + 0.5*x7 + 0.8*x8
f1~~0.5*f1"
dat.sim = simulateData(sim.mod,sample.nobs=200,seed=1234)
run.mod <- "
f1 =~ NA*y1 + y2 + y3+ y4 + y5
f1 ~ c1*x1 + c2*x2 + c3*x3 + c4*x4 + c5*x5 + c6*x6 + c7*x7 + c8*x8
f1~~1*f1
"
lav.out <- sem(run.mod,dat.sim)
summary(lav.out)
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.03,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
summary(reg.out)
plot(reg.out)
reg.out$final_pars
reg.out
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.03,fit.ret=c("BIC","AIC","EBIC.25"),
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
reg.out
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.03,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
library(semPaths)
install.packages("semPlot")
?semPaths
library(semPlot)
?semPaths
semPaths(lav.out,what="est")
lav.out <- sem(run.mod,dat.sim,fixed.x=T)
semPaths(lav.out,what="est")
semPaths(lav.out,fixedStyle=NULL)
semPaths(lav.out,fixedStyle=0)
lav.out <- lavaan(run.mod,dat.sim,fixed.x=T)
run.mod <- "
f1 =~ NA*y1 + y2 + y3+ y4 + y5
f1 ~ c1*x1 + c2*x2 + c3*x3 + c4*x4 + c5*x5 + c6*x6 + c7*x7 + c8*x8
f1~~1*f1
y1~~y1;y2~~y2;y3~~y3;y4~~y4;y5~~y5
"
lav.out <- lavaan(run.mod,dat.sim)
semPaths(lav.out,fixedStyle=0)
semPaths(lav.out)
lav.out <- lavaan(run.mod,dat.sim,fixed.x=FALSE)
run.mod <- "
f1 =~ NA*y1 + y2 + y3+ y4 + y5
f1 ~ c1*x1 + c2*x2 + c3*x3 + c4*x4 + c5*x5 + c6*x6 + c7*x7 + c8*x8
f1~~1*f1
"
lav.out <- sem(run.mod,dat.sim,fixed.x=FALSE)
summary(lav.out)
lav.out <- sem(run.mod,dat.sim,fixed.x=F)
summary(lav.out)
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.03,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
plot(reg.out)
reg.out$final_pars
reg.out
summary(lav.out)
#summary(lav.out)
summary(lav.out)$regressions
#summary(lav.out)
parameterestimates(lav.out)
#summary(lav.out)
parameterestimates(lav.out)[6:13,]
reg.out
reg.out$fits[,"conv"]
sum(reg.out$fits[,"conv"])
sum(reg.out$fits[,"conv"]==0)
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.03,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
sum(reg.out$fits[,"conv"]==0)
summary(reg.out)
reg.out$final_pars[1:13]
library(regsem)
devtools::build_vignettes()
devtools::build_vignettes("regsem")
devtools::build_vignettes()
devtools::use_vignettes("overview")
devtools::use_vignette("overview")
library(regsem)
library(regsem)
library(regsem)
library(regsem)
vignette("overview")
library(regsem)
vignette("regsem/overview")
vignette("overview")
vignette("Overview")
vignette("overview",regsem)
library(regsem)
vignette("regsem_overview")
vignette()
library(regsem)
library(regsem)
vignette("cv_regsem")
vignette
vignette()
library(regsem)
vignette(cv_regsem)
vignette("cv_regsem")
devtools::install(build_vignettes = TRUE)
vignette("cv_regsem")
library(regsem)
library(lavaan);library(blavaan);library(regsem);library(modeest)
library(semTools)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
mod <- "
f1 =~ 1*x1 + x2 + x3 + x7 + x8 + x9
f2 =~ NA*x1 + x2 + x3 + 1*x4 + x5 + x6
f3 =~ NA*x4 + x5 + x6 + 1*x7 + x8 + x9
"
lav.out <- cfa(mod,HS,meanstructure=T,do.fit = T)
summary(lav.out)
library(semPlot)
semPaths(lav.out)
#lav.out <- efaUnrotate(HS,3)
extractMatrices(lav.out)
reg.out2 <- cv_regsem(lav.out,n.lambda=45,type="lasso",jump=0.003,multi.iter=200,
pars_pen=c(3:8,11:13))
reg.out2 <- cv_regsem(lav.out,n.lambda=45,type="lasso",jump=0.003,pars_pen=c(3:8,11:13))
plot(reg.out2)
reg.out2 <- cv_regsem(lav.out,n.lambda=45,type="lasso",jump=0.03,pars_pen=c(3:8,11:13))
plot(reg.out2)
reg.out2
semPaths(lav.out)
extractMatrices(lav.out)
summary(lav.out)
reg.out2 <- cv_regsem(lav.out,n.lambda=45,type="lasso",jump=0.03,optMethod="nlminb",
pars_pen=c(3:8,11:13))
reg.out2 <- cv_regsem(lav.out,n.lambda=45,type="lasso",jump=0.03,optMethod="slsqp",
pars_pen=c(3:8,11:13))
plot(reg.out2)
reg.out2 <- cv_regsem(lav.out,n.lambda=45,type="lasso",jump=0.003,optMethod="slsqp",
pars_pen=c(3:8,11:13))
reg.out2 <- cv_regsem(lav.out,n.lambda=45,type="lasso",jump=0.003,optMethod="nlminb",gradFun="none",
pars_pen=c(3:8,11:13))
reg.out3 <- cv_regsem(lav.out,n.lambda=45,type="ridge",jump=0.003,
pars_pen=c(3:8,11:13))
plot(reg.out3)
conv <- reg.out3[[2]][,"conv"] == 0
coef.mat <- reg.out3[[1]][conv,c(3:8,11:13)]
coef.mat2 <- coef.mat
coef.mat2
plot(reg.out3[[2]][conv,"lambda"],coef.mat2[,1],ylim=c(-0.5,.8),ylab="Loading",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(ncol(coef.mat2))){
lines(reg.out2[[2]][conv,"lambda"],coef.mat2[,i],lty=i,col=1)
#points(mat[,(nload)])
}
summary(lav.out)
lav.out <- cfa(mod,HS)
summary(lav.out)
extractMatrices(lav.out)
reg.out2
?cfa
mod <- "
f1 =~ 1*x1 + x2 + x3 + x7 + x8 + x9
f2 =~ NA*x1 + x2 + x3 + 1*x4 + x5 + x6
f3 =~ NA*x4 + x5 + x6 + 1*x7 + x8 + x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
"
lav.out <- cfa(mod,HS,meanstructure=T)
summary(lav.out)
reg.out2 <- cv_regsem(lav.out,n.lambda=45,type="lasso",jump=0.003,optMethod="nlminb",gradFun="none",
pars_pen=c(3:8,11:13))
reg.out2 <- cv_regsem(lav.out,n.lambda=45,type="lasso",jump=0.003,
pars_pen=c(3:8,11:13))
plot(reg.out2)
reg.out2 <- cv_regsem(lav.out,n.lambda=45,type="lasso",jump=0.03,
pars_pen=c(3:8,11:13))
plot(reg.out2)
conv <- reg.out2[[2]][,"conv"] == 0
coef.mat <- reg.out2[[1]][conv,c(3:8,11:13)]
coef.mat2 <- coef.mat
plot(reg.out2[[2]][conv,"lambda"],coef.mat2[,1],ylim=c(-0.5,.8),ylab="Loading",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(ncol(coef.mat2))){
lines(reg.out2[[2]][conv,"lambda"],coef.mat2[,i],lty=i,col=1)
#points(mat[,(nload)])
}
abline(a=0,b=0)
plot(reg.out2[[2]][conv,"lambda"],coef.mat2[,1],ylim=c(-0.5,.8),ylab="Loading",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(ncol(coef.mat2))){
lines(reg.out2[[2]][conv,"lambda"],coef.mat2[,i]/coef.mat2[1,i],lty=i,col=1)
#points(mat[,(nload)])
}
plot(reg.out2[[2]][conv,"lambda"],coef.mat2[,1],ylim=c(-0.1,1.1),ylab="Loading",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(ncol(coef.mat2))){
lines(reg.out2[[2]][conv,"lambda"],coef.mat2[,i]/coef.mat2[1,i],lty=i,col=1)
#points(mat[,(nload)])
}
abline(a=0,b=0)
extractMatrices(lav.out)
reg.out3 <- cv_regsem(lav.out,n.lambda=45,type="ridge",jump=0.03,
pars_pen=c(3:8,11:13))
plot(reg.out3)
conv <- reg.out3[[2]][,"conv"] == 0
coef.mat <- reg.out3[[1]][conv,c(3:8,11:13)]
coef.mat2 <- coef.mat
plot(reg.out3[[2]][conv,"lambda"],coef.mat2[,1],ylim=c(-0.5,.8),ylab="Loading",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(ncol(coef.mat2))){
lines(reg.out2[[2]][conv,"lambda"],coef.mat2[,i]/coef.mat2[1,i],lty=i,col=1)
#points(mat[,(nload)])
}
abline(a=0,b=0)
conv <- reg.out3[[2]][,"conv"] == 0
coef.mat <- reg.out3[[1]][conv,c(3:8,11:13)]
coef.mat2 <- coef.mat
plot(reg.out3[[2]][conv,"lambda"],coef.mat2[,1],ylim=c(-0.1,1.1),ylab="Loading",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(ncol(coef.mat2))){
lines(reg.out2[[2]][conv,"lambda"],coef.mat2[,i]/coef.mat2[1,i],lty=i,col=1)
#points(mat[,(nload)])
}
abline(a=0,b=0)
reg.out3
reg.out3 <- cv_regsem(lav.out,n.lambda=45,type="ridge",jump=0.01,
pars_pen=c(3:8,11:13))
plot(reg.out3)
conv <- reg.out3[[2]][,"conv"] == 0
coef.mat <- reg.out3[[1]][conv,c(3:8,11:13)]
coef.mat2 <- coef.mat
plot(reg.out3[[2]][conv,"lambda"],coef.mat2[,1],ylim=c(-0.1,1.1),ylab="Loading",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(ncol(coef.mat2))){
lines(reg.out2[[2]][conv,"lambda"],coef.mat2[,i]/coef.mat2[1,i],lty=i,col=1)
#points(mat[,(nload)])
}
abline(a=0,b=0)
reg.out3 <- cv_regsem(lav.out,n.lambda=100,type="ridge",jump=0.01,
pars_pen=c(3:8,11:13))
conv <- reg.out3[[2]][,"conv"] == 0
coef.mat <- reg.out3[[1]][conv,c(3:8,11:13)]
coef.mat2 <- coef.mat
plot(reg.out3[[2]][conv,"lambda"],coef.mat2[,1],ylim=c(-0.1,1.1),ylab="Loading",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(ncol(coef.mat2))){
lines(reg.out2[[2]][conv,"lambda"],coef.mat2[,i]/coef.mat2[1,i],lty=i,col=1)
#points(mat[,(nload)])
}
abline(a=0,b=0)
reg.out3
reg.out3 <- cv_regsem(lav.out,n.lambda=100,type="ridge",jump=0.01,optMethod="coord_desc",
pars_pen=c(3:8,11:13))
plot(reg.out3)
reg.out3 <- cv_regsem(lav.out,n.lambda=100,type="ridge",jump=0.01,optMethod="coord_desc",
gradFun="ram",pars_pen=c(3:8,11:13))
plot(reg.out3)
?cv_regsem
reg.out3 <- cv_regsem(lav.out,n.lambda=100,type="enet",alpha=1,jump=0.01,pars_pen=c(3:8,11:13))
plot(reg.out3)
library(regsem)
reg.out3 <- cv_regsem(lav.out,n.lambda=1,type="enet",alpha=1,jump=0.01,pars_pen=c(3:8,11:13))
reg.out3 <- cv_regsem(lav.out,n.lambda=1,type="ridge",alpha=1,jump=0.01,pars_pen=c(3:8,11:13))
reg.out3 <- cv_regsem(lav.out,n.lambda=1,type="ridge",jump=0.01,pars_pen=c(3:8,11:13))
reg.out3 <- cv_regsem(lav.out,n.lambda=50,type="ridge",jump=0.01,pars_pen=c(3:8,11:13))
library(regsem)
reg.out3 <- cv_regsem(lav.out,n.lambda=50,type="ridge",jump=0.01,pars_pen=c(3:8,11:13))
plot(reg.out3)
reg.out3 <- cv_regsem(lav.out,n.lambda=50,type="enet",alpha=1,jump=0.03,pars_pen=c(3:8,11:13))
conv <- reg.out3[[2]][,"conv"] == 0
coef.mat <- reg.out3[[1]][conv,c(3:8,11:13)]
coef.mat2 <- coef.mat
plot(reg.out3[[2]][conv,"lambda"],coef.mat2[,1],ylim=c(-0.1,1.1),ylab="Loading",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(ncol(coef.mat2))){
lines(reg.out2[[2]][conv,"lambda"],coef.mat2[,i]/coef.mat2[1,i],lty=i,col=1)
#points(mat[,(nload)])
}
abline(a=0,b=0)
reg.out3
conv <- reg.out3[[2]][,"conv"] == 0
conv
coef.mat <- reg.out3[[1]][conv,c(3:8,11:13)]
coef.mat2 <- coef.mat
coef.mat2
plot(reg.out3)
coef.mat2
reg.out3[[2]][,"conv"] == 0
conv <- reg.out3[[2]][,"conv"] == 0 & is.na(reg.out3[[2]][,"conv"] == 0) ==F
coef.mat <- reg.out3[[1]][conv,c(3:8,11:13)]
coef.mat2 <- coef.mat
coef.mat2
plot(reg.out3[[2]][conv,"lambda"],coef.mat2[,1],ylim=c(-0.1,1.1),ylab="Loading",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(ncol(coef.mat2))){
lines(reg.out2[[2]][conv,"lambda"],coef.mat2[,i]/coef.mat2[1,i],lty=i,col=1)
#points(mat[,(nload)])
}
conv
reg.out2[[2]][conv,"lambda"]
reg.out2[[2]]
conv <- reg.out3[[2]][,"conv"] == 0 & is.na(reg.out3[[2]][,"conv"] == 0) ==F
coef.mat <- reg.out3[[1]][conv,c(3:8,11:13)]
coef.mat2 <- coef.mat
plot(reg.out3[[2]][conv,"lambda"],coef.mat2[,1],ylim=c(-0.1,1.1),ylab="Loading",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(ncol(coef.mat2))){
lines(reg.out3[[2]][conv,"lambda"],coef.mat2[,i]/coef.mat2[1,i],lty=i,col=1)
#points(mat[,(nload)])
}
abline(a=0,b=0)
library(OpenMx)
library(lavaan)
library(semtree)
dat <- read.table("C:/Users/rjacobuc/Documents/GitHub/SparseBayesSEM/revision2/second_example/ecls_mix_semtree_20160210.dat",
na.strings=".")
colnames(dat) <- c("id", "fine", "gross", "learn", "control", "interp", "ext",
"int", "math1", "gk1", "read1","read2","read3","read4",
"read5","read6","read7")
dat2 = dat[,-c(1,9)]
head(dat2)
dat2.sub = data.frame(scale(dat2[,1:8]))
dat3 = cbind(dat2.sub,dat2[,9:15])
model <- ' i =~ 1*read1 + 1*read2 + 1*read3 + 1*read4 + 1*read5 + 1*read6 + 1*read7
s =~ 0*read1 + s1*read2 + s2*read3 + s3*read4 + s4*read5 + s5*read6 + 1*read7'
fit <- growth(model, data=dat3)
summary(fit)
# with covariates
model.cov <- ' i =~ 1*read1 + 1*read2 + 1*read3 + 1*read4 + 1*read5 + 1*read6 + 1*read7
s =~ 0*read1 + s1*read2 + s2*read3 + s3*read4 + s4*read5 + s5*read6 + 1*read7
i ~ fine + gross + learn + control + interp + ext + int + gk1
s ~ fine + gross + learn + control + interp + ext + int + gk1'
fit.cov <- growth(model.cov, data=dat3)
summary(fit.cov,fit=T)
# try lasso --- fails
library(regsem)
extractMatrices(fit.cov)["A"]
reg.out1 <- cv_regsem(fit.cov,n.lambda=80,pars_pen=6:21,type="lasso",jump=.1,)
reg.out1 <- cv_regsem(fit.cov,n.lambda=80,pars_pen=6:21,type="lasso",jump=.01)
reg.out1 <- cv_regsem(fit.cov,n.lambda=20,pars_pen=6:21,type="lasso",jump=.001)
reg.out1
reg.out1 <- cv_regsem(fit.cov,n.lambda=30,pars_pen=6:21,type="lasso",jump=.001)
reg.out1
plot(reg.out1)
reg.out1$final_pars
install.packages("Rcpp")
library(Rcpp)
library(RcppArmadillo)

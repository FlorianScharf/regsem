IntCol2
names(meanvec)
names(meanvec) == IntCol2
meanvec[IntCol2]
meanvec2 = meanvec[IntCol2][ind1]
sub1 = person1[ind1] - meanvec
meanvec[IntCol2][ind1]
sub1 = person1[ind1] - meanvec2
indFit = K - 0.5* log(det(ImpCov[ind1,ind1])) - 0.5* t(sub1) %*% solve(ImpCov[ind1,ind1]) %*% sub1
fit = fit + indFit
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", data=HS,missing="fiml")
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", data=HS,missing="fiml")
ImpCov
ind
ind1
meanvec[IntCol2]
Areg[,IntCol]
ImpCov
is.na(person1)==T
ind1 = which(is.na(person1)==T)
ind1
ind1 = names(is.na(person1)==T)
ind1
is.na(person1)==T
ind1 = which(is.na(person1)==T)
ind1 = is.na(person1)==T
colnames(data[,ind1])
ind1
is.na(person1)==T
colnames(data[,ind1==T])
ind1
ind1==T
ind1 = which(is.na(person1)==T)
colnames(data[,ind1])
ind1
names(data[,ind1])
data[,ind1]
colnames(data)[ind1]
misVar = colnames(data)[ind1]
ind1
unique(ind1)
meanvec = Areg[,IntCol]
meanvec
meanvec = Areg[-rownames(Areg)=="1",IntCol]
rownames(Areg)=="1"
meanvec = Areg[-(rownames(Areg)=="1"),IntCol]
meanvec
rownames(Areg)=="1"
Areg[(rownames(Areg)!="1"),IntCol]
misVar
names(meanvec)
meanvec = Areg[(rownames(Areg)!="1"),IntCol]
names(meanvec)
meanvec[-misVar]
misVar
meanvec[misVar]
meanvec[-c(misVar)]
meanvec[misVar]
meanvec[!misVar]
meanvec[-misVar]
ind1
names(meanvec)
names(meanvec) == misVar
meanvec2 = meanvec[names(meanvec) != misVar]
meanvec2
person1
sub1 = c(person1[ind1],0) - meanvec2
c(person1[ind1],0)
person1[ind1]
sub1 = c(person1[-ind1],0) - meanvec2
sub1 = c(person1[!ind1],0) - meanvec2
sub1 = c(person1[is.na(person1)==F],0) - meanvec2
is.na(person1)==F
is.na(person1)==F
is.na(person1)
sub1 = c(person1[is.na(person1)==FALSE],0) - meanvec2
sub1
indFit = K - 0.5* log(det(ImpCov[ind1,ind1])) - 0.5* t(sub1) %*% solve(ImpCov[ind1,ind1]) %*% sub1
ImpCov1
ImpCov
indFit = K - 0.5* log(det(ImpCov[-ind1,-ind1])) - 0.5* t(sub1) %*% solve(ImpCov[-ind1,-ind1]) %*% sub1
indFit
for(i in 1:nrow(data)){
person1 = data[i,IntCol2]
ind1 = which(is.na(person1)==T)
misVar = colnames(data)[ind1]
K = nvar - sum(unique(ind1))
meanvec = Areg[(rownames(Areg)!="1"),IntCol]
meanvec2 = meanvec[names(meanvec) != misVar]
sub1 = c(person1[is.na(person1)==FALSE],0) - meanvec2
indFit = K - 0.5* log(det(ImpCov[-ind1,-ind1])) - 0.5* t(sub1) %*% solve(ImpCov[-ind1,-ind1]) %*% sub1
fit = fit + indFit
}
-ind1
max(0,-ind1)
min(0,-ind1)
ind=c(1,2)
min(0,-ind1)
-ind
ind1
ind1=c(1,2)
min(0,-ind1)
ind1 = which(is.na(person1)==T)
ind1
ind1==0
is.logical(ind1)
str(ind1)
ind1
ind1 = which(is.na(person1)==T)
ind1
ind1==0
is.null(ind1)
ind1>0
is.na(person1)==T
for(i in 1:nrow(data)){
person1 = data[i,IntCol2]
ind1 = which(is.na(person1)==T)
misVar = colnames(data)[ind1]
K = nvar - sum(unique(ind1))
meanvec = Areg[(rownames(Areg)!="1"),IntCol]
meanvec2 = meanvec[names(meanvec) != misVar]
sub1 = c(person1[is.na(person1)==FALSE],0) - meanvec2
if(sum(is.na(person1)==T) >0){
indFit = K - 0.5* log(det(ImpCov[-in1,-ind1])) - 0.5* t(sub1) %*% solve(ImpCov[-in1,-ind1]) %*% sub1
}else{
indFit = K - 0.5* log(det(ImpCov)) - 0.5* t(sub1) %*% solve(ImpCov) %*% sub1
}
fit = fit + indFit
}
for(i in 1:nrow(data)){
person1 = data[i,IntCol2]
ind1 = which(is.na(person1)==T)
misVar = colnames(data)[ind1]
K = nvar - sum(unique(ind1))
meanvec = Areg[(rownames(Areg)!="1"),IntCol]
meanvec2 = meanvec[names(meanvec) != misVar]
sub1 = c(person1[is.na(person1)==FALSE],0) - meanvec2
if(sum(is.na(person1)==T) >0){
indFit = K - 0.5* log(det(ImpCov[-ind1,-ind1])) - 0.5* t(sub1) %*% solve(ImpCov[-ind1,-ind1]) %*% sub1
}else{
indFit = K - 0.5* log(det(ImpCov)) - 0.5* t(sub1) %*% solve(ImpCov) %*% sub1
}
fit = fit + indFit
}
ind1
sum(is.na(person1)==T) >0
meanvec = Areg[(rownames(Areg)!="1"),IntCol]
meanvec2 = meanvec[names(meanvec) != misVar]
sub1 = c(person1[is.na(person1)==FALSE],0) - meanvec2
sub1
meanvec
meanvec2
names(meanvec) != misVar
for(i in 1:nrow(data)){
person1 = data[i,IntCol2]
ind1 = which(is.na(person1)==T)
misVar = colnames(data)[ind1]
K = nvar - sum(unique(ind1))
if(sum(is.na(person1)==T) >0){
meanvec = Areg[(rownames(Areg)!="1"),IntCol]
meanvec2 = meanvec[names(meanvec) != misVar]
sub1 = c(person1[is.na(person1)==FALSE],0) - meanvec2
indFit = K - 0.5* log(det(ImpCov[-ind1,-ind1])) - 0.5* t(sub1) %*% solve(ImpCov[-ind1,-ind1]) %*% sub1
}else{
meanvec = Areg[(rownames(Areg)!="1"),IntCol]
sub1 = c(person1,0) - meanvec
indFit = K - 0.5* log(det(ImpCov)) - 0.5* t(sub1) %*% solve(ImpCov) %*% sub1
}
fit = fit + indFit
}
c(person1,0)
cbind(person1,0)
sub1 = cbind(person1,0) - meanvec
for(i in 1:nrow(data)){
person1 = data[i,IntCol2]
ind1 = which(is.na(person1)==T)
misVar = colnames(data)[ind1]
K = nvar - sum(unique(ind1))
if(sum(is.na(person1)==T) >0){
meanvec = Areg[(rownames(Areg)!="1"),IntCol]
meanvec2 = meanvec[names(meanvec) != misVar]
sub1 = c(person1[is.na(person1)==FALSE],0) - meanvec2
indFit = K - 0.5* log(det(ImpCov[-ind1,-ind1])) - 0.5* t(sub1) %*% solve(ImpCov[-ind1,-ind1]) %*% sub1
}else{
meanvec = Areg[(rownames(Areg)!="1"),IntCol]
sub1 = cbind(person1,0) - meanvec
indFit = K - 0.5* log(det(ImpCov)) - 0.5* t(sub1) %*% solve(ImpCov) %*% sub1
}
fit = fit + indFit
}
sub1
ImpCov
str(sub1)
sub1 = as.vector(cbind(person1,0) - meanvec)
indFit = K - 0.5* log(det(ImpCov)) - 0.5* t(sub1) %*% solve(ImpCov) %*% sub1
as.vector(cbind(person1,0) - meanvec)
sub1 = as.vector(cbind(person1,0) - meanvec)
str(sub1)
t(sub1) %*% solve(ImpCov)
sub1 = as.numeric(cbind(person1,0) - meanvec)
indFit = K - 0.5* log(det(ImpCov)) - 0.5* t(sub1) %*% solve(ImpCov) %*% sub1
for(i in 1:nrow(data)){
person1 = data[i,IntCol2]
ind1 = which(is.na(person1)==T)
misVar = colnames(data)[ind1]
K = nvar - sum(unique(ind1))
if(sum(is.na(person1)==T) >0){
meanvec = Areg[(rownames(Areg)!="1"),IntCol]
meanvec2 = meanvec[names(meanvec) != misVar]
sub1 = c(person1[is.na(person1)==FALSE],0) - meanvec2
indFit = K - 0.5* log(det(ImpCov[-ind1,-ind1])) - 0.5* t(sub1) %*% solve(ImpCov[-ind1,-ind1]) %*% sub1
}else{
meanvec = Areg[(rownames(Areg)!="1"),IntCol]
sub1 = as.numeric(cbind(person1,0) - meanvec)
indFit = K - 0.5* log(det(ImpCov)) - 0.5* t(sub1) %*% solve(ImpCov) %*% sub1
}
fit = fit + indFit
}
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", data=HS,missing="fiml")
warnings()
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", data=HS,missing="fiml")
library(regsem)
library(regsem)
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", data=HS,missing="fiml")
fit_indices(fit1)
fit1
fitMeasures(outt)
for(i in 1:nrow(data)){
person1 = data[i,IntCol2]
ind1 = which(is.na(person1)==T)
misVar = colnames(data)[ind1]
K = nvar - sum(unique(ind1))
if(sum(is.na(person1)==T) >0){
meanvec = Areg[(rownames(Areg)!="1"),IntCol]
meanvec2 = meanvec[names(meanvec) != misVar]
sub1 = c(person1[is.na(person1)==FALSE],0) - meanvec2
indFit =  0.5* log(det(ImpCov[-ind1,-ind1])) - 0.5* t(sub1) %*% solve(ImpCov[-ind1,-ind1]) %*% sub1
}else{
meanvec = Areg[(rownames(Areg)!="1"),IntCol]
sub1 = as.numeric(cbind(person1,0) - meanvec)
indFit =  0.5* log(det(ImpCov)) - 0.5* t(sub1) %*% solve(ImpCov) %*% sub1
}
fit = fit + indFit
}
fit
-1 * fit
-1 * fit * 1/nrow(data)
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", data=HS,missing="fiml")
fit1
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", data=HS,missing="fiml")
fit1
library(regsem)
library(lavaan)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
HS[1,1] <- NA
mod <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f~~1*f
'
outt = cfa(mod,HS,missing="fiml")
summary(outt)
fitMeasures(outt)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", data=HS,missing="fiml")
fit1
fitMeasures(outt)
7862/2
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", data=HS,missing="fiml")
fit1
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", data=HS,missing="fiml")
tel = read.csv(file.choose())
library(regsem)
web = read.csv(file.choose())
data1 = merge(tel, web, by="sampid", all=T)
data2 = merge(waves123, data1, by="sampid", all=T)
data3 = merge(data2, demog, by="sampid")
data = data3
waves123 = read.csv(file.choose())
data1 = merge(tel, web, by="sampid", all=T)
data2 = merge(waves123, data1, by="sampid", all=T)
data3 = merge(data2, demog, by="sampid")
data = data3
demog = read.csv(file.choose())
data1 = merge(tel, web, by="sampid", all=T)
data2 = merge(waves123, data1, by="sampid", all=T)
data3 = merge(data2, demog, by="sampid")
data = data3
rm(tel, waves123, web, data1, data2, data3, demog)
# .x variables are telephone, .y variables are web
#serial 7s
data1 = data[,c("sampid",
"w1_age","w2_age","w3_age","w4_tage","w4_wage","w5_tage","w5_wage","w6_tage","w6_wage","w7_tage","w7_wage",
"w1_D_s7","w2_D_s7","w3_D_s7","w4_D_s7.x","w4_D_s7.y","w5_D_s7.x","w5_D_s7.y","w6_D_s7.x","w6_D_s7.y","w7_D_s7.x","w7_D_s7.y")]
#number series W score
data1 = data[,c("sampid",
"w1_age","w2_age","w3_age","w4_tage","w4_wage","w5_tage","w5_wage","w6_tage","w6_wage","w7_tage","w7_wage",
"w1_ns_wscore","w2_ns_wscore","w3_ns_wscore","w4_ns_wscore.x","w4_ns_wscore.y","w5_ns_wscore.x","w5_ns_wscore.y",
"w6_ns_wscore.x","w6_ns_wscore.y","w7_ns_wscore.x","w7_ns_wscore.y")]
#numeracy
data1 = data[,c("sampid",
"w1_age","w2_age","w3_age","w4_tage","w4_wage","w5_tage","w5_wage","w6_tage","w6_wage","w7_tage","w7_wage",
"w1_D_num","w2_D_num","w3_D_num","w4_D_num.x","w4_D_num.y","w5_D_num.x","w5_D_num.y",
"w6_D_num.x","w6_D_num.y","w7_D_num.x","w7_D_num.y")]
#numeracy with weights/covariates
data1 = data[,c("sampid", "cogwt","gender", "edyrs",
"w1_age","w2_age","w3_age","w4_tage","w4_wage","w5_tage","w5_wage","w6_tage","w6_wage","w7_tage","w7_wage",
"w1_D_num","w2_D_num","w3_D_num","w4_D_num.x","w4_D_num.y","w5_D_num.x","w5_D_num.y",
"w6_D_num.x","w6_D_num.y","w7_D_num.x","w7_D_num.y")]
data2 = data1[-which(is.na(data1$cogwt)),]
#time scores cannot be 0 in mplus
data3a = data2[,1:4]
data3b = data2[,5:15]
data3c = data2[,16:26]
#data3a[is.na(data3a)] = "."
data3b[is.na(data3b)] = 0
data3c[is.na(data3c)] = "."
data2 = data.frame(data3a,data3b,data3c)
write.table(data2, "/Users/RJacobucci/Desktop/Sarfaraz Files", row.names=F, col.names=F)
write.table(data2, "/Users/RJacobucci/Desktop/Sarfaraz files", row.names=F, col.names=F)
write.table(data2, "/Users/RJacobucci/Desktop/Sarfaraz files", row.names=FALSE, col.names=FALSE)
write.table(data2, file.choose(), row.names=FALSE, col.names=FALSE)
write.table(data2, "/Users/RJacobucci/Desktop/Sarfaraz files/data2", row.names=FALSE, col.names=FALSE)
data1 = data[,c("sampid", "cogwt","gender", "edyrs",
"w2_age","w4_tage","w4_wage","w5_tage","w5_wage","w6_tage","w6_wage","w7_tage","w7_wage",
"w2_sw_pallsw","w4_sw_pallsw.x","w4_sw_pallsw.y","w5_sw_pallsw.x","w5_sw_pallsw.y",
"w6_sw_pallsw.x","w6_sw_pallsw.y","w7_sw_pallsw.x","w7_sw_pallsw.y")]
data2 = data1[-which(is.na(data1$cogwt)),]
#time scores cannot be 0 in mplus
data3a = data2[,1:4]
data3b = data2[,5:13]
data3c = data2[,14:22]
#data3a[is.na(data3a)] = "."
data3b[is.na(data3b)] = 0
data3c[is.na(data3c)] = "."
data2 = data.frame(data3a,data3b,data3c)
write.table(data2, "/Users/RJacobucci/Desktop/Sarfaraz files/allsw.dat", row.names=FALSE, col.names=FALSE)
data1 = data[,c("sampid", "cogwt","gender", "edyrs",
"w2_age","w4_tage","w4_wage","w5_tage","w5_wage","w6_tage","w6_wage","w7_tage","w7_wage",
"w2_sw_pallexp","w4_sw_pallexp.x","w4_sw_pallexp.y","w5_sw_pallexp.x","w5_sw_pallexp.y",
"w6_sw_pallexp.x","w6_sw_pallexp.y","w7_sw_pallexp.x","w7_sw_pallexp.y")]
data2 = data1[-which(is.na(data1$cogwt)),]
#time scores cannot be 0 in mplus
data3a = data2[,1:4]
data3b = data2[,5:13]
data3c = data2[,14:22]
#data3a[is.na(data3a)] = "."
data3b[is.na(data3b)] = 0
data3c[is.na(data3c)] = "."
data2 = data.frame(data3a,data3b,data3c)
write.table(data2, "/Users/RJacobucci/Desktop/Sarfaraz files/allexp.dat", row.names=FALSE, col.names=FALSE)
#serial 7s
data1 = data[,c("sampid",
"w1_age","w2_age","w3_age","w4_tage","w4_wage","w5_tage","w5_wage","w6_tage","w6_wage","w7_tage","w7_wage",
"w1_D_s7","w2_D_s7","w3_D_s7","w4_D_s7.x","w4_D_s7.y","w5_D_s7.x","w5_D_s7.y","w6_D_s7.x","w6_D_s7.y","w7_D_s7.x","w7_D_s7.y")]
#number series W score
data1 = data[,c("sampid",
"w1_age","w2_age","w3_age","w4_tage","w4_wage","w5_tage","w5_wage","w6_tage","w6_wage","w7_tage","w7_wage",
"w1_ns_wscore","w2_ns_wscore","w3_ns_wscore","w4_ns_wscore.x","w4_ns_wscore.y","w5_ns_wscore.x","w5_ns_wscore.y",
"w6_ns_wscore.x","w6_ns_wscore.y","w7_ns_wscore.x","w7_ns_wscore.y")]
#numeracy
data1 = data[,c("sampid",
"w1_age","w2_age","w3_age","w4_tage","w4_wage","w5_tage","w5_wage","w6_tage","w6_wage","w7_tage","w7_wage",
"w1_D_num","w2_D_num","w3_D_num","w4_D_num.x","w4_D_num.y","w5_D_num.x","w5_D_num.y",
"w6_D_num.x","w6_D_num.y","w7_D_num.x","w7_D_num.y")]
#numeracy with weights/covariates
data1 = data[,c("sampid", "cogwt","gender", "edyrs",
"w1_age","w2_age","w3_age","w4_tage","w4_wage","w5_tage","w5_wage","w6_tage","w6_wage","w7_tage","w7_wage",
"w1_D_num","w2_D_num","w3_D_num","w4_D_num.x","w4_D_num.y","w5_D_num.x","w5_D_num.y",
"w6_D_num.x","w6_D_num.y","w7_D_num.x","w7_D_num.y")]
data2 = data1[-which(is.na(data1$cogwt)),]
#time scores cannot be 0 in mplus
data3a = data2[,1:4]
data3b = data2[,5:15]
data3c = data2[,16:26]
#data3a[is.na(data3a)] = "."
data3b[is.na(data3b)] = 0
data3c[is.na(data3c)] = "."
data2 = data.frame(data3a,data3b,data3c)
write.table(data2, "/Users/RJacobucci/Desktop/Sarfaraz files/numeracy.dat", row.names=FALSE, col.names=FALSE)
data1 = data[,c("sampid", "cogwt","gender", "edyrs",
"w2_age","w4_tage","w4_wage","w5_tage","w5_wage","w6_tage","w6_wage","w7_tage","w7_wage",
"w2_sw_prbase","w4_sw_prbase.x","w4_sw_prbase.y","w5_sw_prbase.x","w5_sw_prbase.y",
"w6_sw_prbase.x","w6_sw_prbase.y","w7_sw_prbase.x","w7_sw_prbase.y")]
data2 = data1[-which(is.na(data1$cogwt)),]
#time scores cannot be 0 in mplus
data3a = data2[,1:4]
data3b = data2[,5:13]
data3c = data2[,14:22]
#data3a[is.na(data3a)] = "."
data3b[is.na(data3b)] = 0
data3c[is.na(data3c)] = "."
data2 = data.frame(data3a,data3b,data3c)
write.table(data2, "/Users/RJacobucci/Desktop/Sarfaraz files/rbase.dat", row.names=FALSE, col.names=FALSE)
data1 = data[,c("sampid", "cogwt","gender", "edyrs",
"w2_age","w4_tage","w4_wage","w5_tage","w5_wage","w6_tage","w6_wage","w7_tage","w7_wage",
"w2_sw_pabase","w4_sw_pabase.x","w4_sw_pabase.y","w5_sw_pabase.x","w5_sw_pabase.y",
"w6_sw_pabase.x","w6_sw_pabase.y","w7_sw_pabase.x","w7_sw_pabase.y")]
data2 = data1[-which(is.na(data1$cogwt)),]
#time scores cannot be 0 in mplus
data3a = data2[,1:4]
data3b = data2[,5:13]
data3c = data2[,14:22]
#data3a[is.na(data3a)] = "."
data3b[is.na(data3b)] = 0
data3c[is.na(data3c)] = "."
data2 = data.frame(data3a,data3b,data3c)
write.table(data2, "/Users/RJacobucci/Desktop/Sarfaraz files/abase.dat", row.names=FALSE, col.names=FALSE)
data1 = data[,c("sampid", "cogwt","gender", "edyrs",
"w2_age","w4_tage","w4_wage","w5_tage","w5_wage","w6_tage","w6_wage","w7_tage","w7_wage",
"w2_ve_wscore","w4_ve_wscore.x","w4_ve_wscore.y","w5_ve_wscore.x","w5_ve_wscore.y",
"w6_ve_wscore.x","w6_ve_wscore.y","w7_ve_wscore.x","w7_ve_wscore.y")]
data2 = data1[-which(is.na(data1$cogwt)),]
#time scores cannot be 0 in mplus
data3a = data2[,1:4]
data3b = data2[,5:13]
data3c = data2[,14:22]
#data3a[is.na(data3a)] = "."
data3b[is.na(data3b)] = 0
data3c[is.na(data3c)] = "."
data2 = data.frame(data3a,data3b,data3c)
write.table(data2, "/Users/RJacobucci/Desktop/Sarfaraz files/verbalanalogies.dat", row.names=FALSE, col.names=FALSE)
data1 = data[,c("sampid", "cogwt","gender", "edyrs",
"w2_age","w4_tage","w4_wage","w5_tage","w5_wage","w6_tage","w6_wage","w7_tage","w7_wage",
"w2_D_num","w4_D_num.x","w4_D_num.y","w5_D_num.x","w5_D_num.y",
"w6_D_num.x","w6_D_num.y","w7_D_num.x","w7_D_num.y",
"w2_sw_pallsw","w4_sw_pallsw.x","w4_sw_pallsw.y","w5_sw_pallsw.x","w5_sw_pallsw.y",
"w6_sw_pallsw.x","w6_sw_pallsw.y","w7_sw_pallsw.x","w7_sw_pallsw.y",
"w2_ve_wscore","w4_ve_wscore.x","w4_ve_wscore.y","w5_ve_wscore.x","w5_ve_wscore.y",
"w6_ve_wscore.x","w6_ve_wscore.y","w7_ve_wscore.x","w7_ve_wscore.y"
)]
data2 = data1[-which(is.na(data1$cogwt)),]
#time scores cannot be 0 in mplus
data3a = data2[,1:4]
data3b = data2[,5:13]
data3c = data2[,14:40]
#nrow(na.omit(data3a))
#data3a[is.na(data3a)] = "."
data3b[is.na(data3b)] = 0
data3c[is.na(data3c)] = "."
data2 = data.frame(data3a,data3b,data3c)
write.table(data2, "/Users/RJacobucci/Desktop/Sarfaraz files/secondorder", row.names=FALSE, col.names=FALSE)
#visualize data
par(mfrow=c(3,4))
for(i in 13:23){
hist(data1[,i])
}
#format for mplus
# allna = numeric(nrow(data1))
# for(i in 1:length(allna)){
#   allna[i] = sum(is.na(data1[i,13:23]))
# }
# data2 = data1[-which(allna==11),]
#time scores cannot be 0 in mplus
data3a = data2[,1:12]
data3b = data2[,13:23]
data3a[is.na(data3a)] = 0
data3b[is.na(data3b)] = "."
data2 = data.frame(data3a,data3b)
write.table(data2, "/Users/RJacobucci/Desktop/Sarfaraz files/data2.dat", row.names=FALSE, col.names=FALSE)
library(lavaan)
group1.model <- '
f1 =~ 0.75*x1 + 0.75*x2 + 0.75*x3 + 0.25*x4 + 0.25*x5 + 0.25*x6
f1~~1*f1
'
group2.model <- '
f1 =~ 0.25*x1 + 0.25*x2 + 0.25*x3 + 0.75*x4 + 0.75*x5 + 0.75*x6
f1~~1*f1
'
N = 500
group1.dat <- simulateData(group1.model, sample.nobs=N)
group2.dat = simulateData(group2.model, sample.nobs=N)
group1.dat$group = 1
group2.dat$group = 2
dat.comb = rbind(group1.dat,group2.dat)
dat.comb$cov1 <- rnorm(N*2)
dat.comb$cov2 <- rnorm(N*2)
dat.comb$cov3 <- rnorm(N*2)
f1 =~ NA*x1 + x2 + x3 + x4 + x5 + x6
f1~~1*f1
'
out = cfa(mod,dat.comb,meanstructure=T)
out.g1 = cfa(mod,dat.comb,group="group",meanstructure=T)
out.g1 = cfa(mod,dat.comb,group="group",meanstructure=T)
mod <- '
f1 =~ NA*x1 + x2 + x3 + x4 + x5 + x6
f1~~1*f1
'
out = cfa(mod,dat.comb,meanstructure=T)
out.g1 = cfa(mod,dat.comb,group="group",meanstructure=T)
?extractMatrices
library(regsem)
?extractMatrices
extractMatrices(out.g1)
library(regsem)

if (abs(max(series)) < 20 & abs(min(series)) > .01 & abs(min(series)) < 20) break
}
return(series)
}
A <- matrix(
c(0,  0, .5,
.5,  0,  0,
0,  0,  0), nrow = 3, ncol = 3, byrow = TRUE)
Phi <- matrix(
c(.5,  0,  0,
0, .5,  0,
0, .5, .5), nrow = 3, ncol = 3, byrow = TRUE)
data     <- ts.generate(A, Phi, 200)
first    <- data[1:(nrow(data)-1), ]
second   <- data[2:nrow(data), ]
data.lag <- data.frame(first, second)
colnames(data.lag) <- c("V1lag", "V2lag", "V3lag", "V1", "V2", "V3")
### end simulating time series -------------------------------
## fitting data-generating model in lavaan ------------------
library(lavaan)
model <- '
# estimate all autoregressive
V1 ~ V1lag
V2 ~ V2lag
V3 ~ V3lag
# estimate cross-lagged
V3 ~ V2lag
# estimate contemp
V2 ~ V1
V1 ~ V3
'
fit <- sem(model, data.lag)
## attempting to fit full model with all possible paths
## and then send to regsem. does not work
library(lavaan)
model <- '
# estimate all autoregressive
V1 ~ V1lag
V2 ~ V2lag
V3 ~ V3lag
# estimate all cross-lagged
V1 ~ V2lag
V1 ~ V3lag
V2 ~ V1lag
V2 ~ V3lag
V3 ~ V1lag
V3 ~ V2lag
# estimate all contemp
V1 ~ V2
V2 ~ V1
V1 ~ V3
V3 ~ V1
V2 ~ V3
V3 ~ V2
'
fit <- sem(model, data.lag)
summary(fit)
out <- multi_optim(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.05,optMethod="coord_desc")
out <- multi_optim(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),multi.iter=50,
lambda = 0.05,optMethod="coord_desc")
?multi_optim
out <- multi_optim(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),max.try=50,
lambda = 0.05,optMethod="coord_desc")
summary(out)
out <- multi_optim(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),max.try=50,
lambda = 0.05,optMethod="coord_desc",step=0.01)
summary(out)
summary(fit)
library(regsem)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.05,optMethod="coord_desc",step=1)
summary(out)
library(regsem)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.05,optMethod="coord_desc",step=1)
summary(out)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.1,optMethod="coord_desc",step=1)
summary(out)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.2,optMethod="coord_desc",step=1)
summary(out)
fitmeasures(fit)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.3,optMethod="coord_desc",step=1)
summary(out)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.4,optMethod="coord_desc",step=1)
summary(out)
out$KKT1
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.6,optMethod="coord_desc",step=1)
summary(out)
library(regsem)
library(regsem)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
#write.table(HS,"/Users/RJacobucci/Documents/Github/regBayesCompare_analyses/hs9.dat",col.names=FALSE,row.names=FALSE)
hs.mod <- "
f1 =~ 1*x1 + x2 + x3 + x7 + x8 + x9
f2 =~ NA*x1 + x2 + x3 + 1*x4 + x5 + x6
f3 =~ NA*x4 + x5 + x6 + 1*x7 + x8 + x9"
out <- cfa(hs.mod,HS)
reg.out <- multi_optim(out,lambda=0.06,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
reg.out <- multi_optim(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
library(regsem)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.6,optMethod="coord_desc",step=1)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.6,optMethod="coord_desc",step=1)
library(regsem)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.6,optMethod="coord_desc",step=1)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.6,optMethod="coord_desc",step=1,step.ratio=TRUE)
summary(out)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.6,optMethod="coord_desc",step=1,step.ratio=TRUE)
library(regsem)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.6,optMethod="coord_desc",step=1,step.ratio=TRUE)
summary(out)
out <- multi_optim(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),max.try=50,
lambda = 0.05,optMethod="coord_desc",step=1,step.ratio=TRUE)
summary(out)
out <- multi_optim(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),max.try=50,
lambda = 0.2,optMethod="coord_desc",step=1,step.ratio=TRUE)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.1,optMethod="coord_desc",step=1,step.ratio=TRUE)
summary(out)
out$KKT1
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.1,optMethod="coord_desc",step=.5,step.ratio=TRUE)
summary(out)
out$KKT1
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.2,optMethod="coord_desc",step=.5,step.ratio=TRUE)
summary(out)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),
lambda = 0.3,optMethod="coord_desc",step=.5,step.ratio=TRUE)
summary(out)
library(regsem)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,
lambda = 0.3,optMethod="coord_desc",step=.5,step.ratio=TRUE)
summary(out)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,
lambda = 0.4,optMethod="coord_desc",step=.5,step.ratio=TRUE)
summary(out)
out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,
lambda = 0.5,optMethod="coord_desc",step=.5,step.ratio=TRUE)
summary(out)
library(regsem)
?cv_regsem
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=FALSE,jump=0.05,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,
lambda = 0.5,optMethod="coord_desc",step=.5,step.ratio=TRUE)
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.05,multi.iter=20,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,
lambda = 0.5,optMethod="coord_desc",step=.5,step.ratio=TRUE)
out
out.cv
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.05,multi.iter=20,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,fit.ret=c("chisq","df","bic"),
lambda = 0.5,optMethod="coord_desc",step=.5,step.ratio=TRUE)
out.cv
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.05,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-5,fit.ret=c("chisq","df","bic"),
lambda = 0.5,optMethod="coord_desc",step=.5,step.ratio=TRUE)
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.05,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-5,fit.ret=c("chisq","df","bic"),
optMethod="coord_desc",step=.2,step.ratio=TRUE)
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.05,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,fit.ret=c("chisq","df","bic"),
optMethod="coord_desc",step=.2,step.ratio=TRUE)
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.05,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,fit.ret=c("chisq","df","bic"),
optMethod="coord_desc",step=1,step.ratio=TRUE)
out.cv
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.08,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,fit.ret=c("chisq","df","bic"),
optMethod="coord_desc",step=1,step.ratio=TRUE)
out.cv
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.08,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,fit.ret=c("chisq","df","BIC"),
optMethod="coord_desc",step=1,step.ratio=TRUE)
out.cv
library(regsem)
library(regsem)
library(MASS)
data(Boston)
set.seed(1)
Boston <- data.frame(scale(Boston))
insert_nas <- function(x) {
len <- length(x)
n <- sample(1:floor(0.2*len), 1)
i <- sample(1:len, n)
x[i] <- NA
x
}
Boston2 <- data.frame(sapply(Boston, insert_nas))
Boston2
library(regsem)
mod <- "
medv ~ crim+zn+indus+chas+nox+rm+age+dis+rad+tax+ptratio+black+lstat
medv~0
"
lav.out <- sem(mod,Boston2,missing="fiml")
summary(lav.out)
reg.out <- regsem(lav.out,lambda=0,type="none",optMethod="coord_desc",
gradFun="ram",missing="fiml",
Start=extractMatrices(lav.out)$parameters)
summary(reg.out)
fitmeasures(lav.out)
reg.out <- regsem(lav.out,lambda=0,type="none",optMethod="nlminb",
gradFun="none",missing="fiml")
summary(reg.out)
mod <- "
medv ~ crim+zn+indus+chas+nox+rm+age+dis+rad+tax+ptratio+black+lstat
"
lav.out <- sem(mod,Boston2,missing="fiml")
summary(lav.out)
summary(reg.out)
mod <- "
medv ~ crim+zn+indus+chas+nox+rm+age+dis+rad+tax+ptratio+black+lstat
medv~0
"
lav.out <- sem(mod,Boston2,missing="fiml")
summary(lav.out)
summary(reg.out)
fitmeasures(lav.out)
extractMatrices(lav.out)
lav.out <- sem(mod,Boston2,missing="fiml",fixed.x=TRUE)
summary(lav.out)
summary(reg.out)
reg.out <- regsem(lav.out,lambda=0,type="none",optMethod="nlminb",
gradFun="ram",missing="fiml")
summary(reg.out)
summary(lav.out)
mod <- "
medv ~ crim+zn+indus+chas+nox+rm+age+dis+rad+tax+ptratio+black+lstat
"
lav.out <- sem(mod,Boston2,missing="fiml")
summary(lav.out)
reg.out <- regsem(lav.out,lambda=0,type="none",optMethod="nlminb",
gradFun="ram",missing="fiml")
head(Boston2)
mod <- "
indus =~ chas + nox + rm + age + dis
"
lav.out <- sem(mod,Boston2,missing="fiml")
summary(lav.out)
fitmeasures(lav.out)
library(regsem)
reg.out <- regsem(lav.out,lambda=0,type="none",optMethod="nlminb",
gradFun="ram",missing="fiml")
mod <- "
indus =~ chas + nox + rm + age + dis + zn + rad + tax + ptratio + black + lstat + medv
"
lav.out <- sem(mod,Boston2,missing="fiml")
summary(lav.out)
head(Boston2[,1:4])
head(Boston2[,1:5])
mod <- "
nox =~ crim + zn + indus + chas
"
lav.out <- sem(mod,Boston2[,1:5],missing="fiml")
summary(lav.out)
lav.out <- efaUnrotate(Boston2[,3:8],1)
lav.out <- semTools::efaUnrotate(Boston2[,3:8],1)
library(regsem)
reg.out <- regsem(lav.out,lambda=0,type="none",optMethod="nlminb",
gradFun="ram",missing="fiml")
lav.out <- semTools::efaUnrotate(Boston2[,3:8],1,missing="fiml")
library(regsem)
reg.out <- regsem(lav.out,lambda=0,type="none",optMethod="nlminb",
gradFun="ram",missing="fiml")
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
#write.table(HS,"/Users/RJacobucci/Documents/Github/regBayesCompare_analyses/hs9.dat",col.names=FALSE,row.names=FALSE)
hs.mod <- "
f1 =~ 1*x1 + x2 + x3 + x7 + x8 + x9
f2 =~ NA*x1 + x2 + x3 + 1*x4 + x5 + x6
f3 =~ NA*x4 + x5 + x6 + 1*x7 + x8 + x9"
out <- cfa(hs.mod,HS)
summary(out)
reg.out <- multi_optim(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
?regsem
?uniroot
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
?regsem
library(regsem)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
library(regsem)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
#write.table(HS,"/Users/RJacobucci/Documents/Github/regBayesCompare_analyses/hs9.dat",col.names=FALSE,row.names=FALSE)
hs.mod <- "
f1 =~ 1*x1 + x2 + x3 + x7 + x8 + x9
f2 =~ NA*x1 + x2 + x3 + 1*x4 + x5 + x6
f3 =~ NA*x4 + x5 + x6 + 1*x7 + x8 + x9"
out <- cfa(hs.mod,HS)
summary(out)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
?uniroot
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
?uniroot
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
library(regsem)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
reg.out <- regsem(out,lambda=0.2,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
library(regsem)
reg.out <- regsem(out,lambda=0.2,type="lasso",pars_pen=c(3:8,11:13))
reg.out <- multi_optim(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- multi_optim(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
library(regsem)
reg.out <- regsem(out,lambda=0.2,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0.2,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0.2,type="lasso",pars_pen=c(3:8,11:13))
?try
library(regsem)
reg.out <- regsem(out,lambda=0.2,type="lasso",pars_pen=c(3:8,11:13))
s
is.null(s)
library(regsem)
reg.out <- multi_optim(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
reg.out <- regsem(out,lambda=0.2,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
library(regsem)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
s
exists(s)
get0(s)
exists("s")
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
reg.out <- regsem(out,lambda=0.2,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
library(regsem)
reg.out <- regsem(out,lambda=0.2,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
summary(reg.out);reg.out$iterations
library(regsem)
reg.out <- regsem(out,lambda=0.2,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out);reg.out$iterations
reg.out <- regsem(out,lambda=0.2,type="lasso",pars_pen=c(3:8,11:13),block=TRUE,full=TRUE)
library(regsem)
reg.out <- regsem(out,lambda=0.2,type="lasso",pars_pen=c(3:8,11:13),block=TRUE,full=TRUE)
summary(reg.out);reg.out$iterations
reg.out <- regsem(out,lambda=0.5,type="lasso",pars_pen=c(3:8,11:13),block=TRUE,full=TRUE)
summary(reg.out);reg.out$iterations
library(regsem)
reg.out <- regsem(out,lambda=0.5,type="lasso",pars_pen=c(3:8,11:13),block=TRUE,full=TRUE)
summary(reg.out);reg.out$iterations
library(regsem)
reg.out <- regsem(out,lambda=0.5,type="lasso",pars_pen=c(3:8,11:13),block=TRUE,full=TRUE)
reg.out <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13),block=TRUE,full=TRUE,max.iter=20)
reg.out <- regsem(out,lambda=0,type="lasso",pars_pen=c(3:8,11:13),block=TRUE,full=TRUE,max.iter=20)
summary(reg.out);reg.out$iterations
reg.out <- multi_optim(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
library(regsem)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
#write.table(HS,"/Users/RJacobucci/Documents/Github/regBayesCompare_analyses/hs9.dat",col.names=FALSE,row.names=FALSE)
hs.mod <- "
f1 =~ 1*x1 + x2 + x3 + x7 + x8 + x9
f2 =~ NA*x1 + x2 + x3 + 1*x4 + x5 + x6
f3 =~ NA*x4 + x5 + x6 + 1*x7 + x8 + x9"
out <- cfa(hs.mod,HS)
summary(out)
fitmeasures(out)
reg.out <- multi_optim(out,lambda=0.192,type="ridge",pars_pen=c(3:8,11:13),gradFun="ram")
summary(reg.out)
out <- cfa(hs.mod,HS,meanstructure=T)
reg.out <- multi_optim(out,lambda=0.192,type="ridge",pars_pen=c(3:8,11:13),gradFun="ram")
summary(reg.out)
mod.bayes <- '
f1 =~ 1*x1 + x2 + x3 + prior("ddexp(0,val)")*x7 +
prior("ddexp(0,val)")*x8 + prior("ddexp(0,val)")*x9
f2 =~ NA*x1 + prior("ddexp(0,val)")*x1 + prior("ddexp(0,val)")*x2 + prior("ddexp(0,val)")*x3 + 1*x4 +
x5 + x6
f3 =~ NA*x4 + prior("ddexp(0,val)")*x4 + prior("ddexp(0,val)")*x5 + prior("ddexp(0,val)")*x6 +
1*x7 + x8 + x9
x1~1
x2~1
x3~1
x4~1
x5~1
x6~1
x7~1
x8~1
x9~1'
moddd = gsub("val",10,mod.bayes)
bcfa.out <- bcfa(moddd,data=HS,inits="simple",convergence="auto",
jagcontrol=list(method="rjparallel",psrf.target = 1.1),
runjags.options(mode.continuous=TRUE,silent.jags=T))
summary(bcfa.out)
bcfa.out@external$runjags$summaries
round(bcfa.out@external$runjags$summaries,3)
fitmeasures(bcfa.out)
reg.out <- multi_optim(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
reg.out <- multi_optim(out,lambda=0.06,type="lasso",pars_pen=c(3:8,11:13))
summary(reg.out)
reg.out
summary(reg.out)
reg.out <- multi_optim(out,lambda=0.192,type="ridge",pars_pen=c(3:8,11:13),gradFun="ram")
reg.out$coefficients
reg.out2 <- multi_optim(out,lambda=0.06,type="lasso",pars_pen=c(3:8,11:13),
Start2=reg.out$coefficients)
summary(reg.out2)
reg.out2 <- multi_optim(out,lambda=0.06,type="lasso",pars_pen=c(3:8,11:13),
Start2=reg.out$coefficients,step=1,step.ratio=TRUE)
summary(reg.out2)
reg.out2 <- regsem(out,lambda=0.06,type="lasso",pars_pen=c(3:8,11:13),
Start=reg.out$coefficients,step=1,step.ratio=TRUE)
reg.out$coefficients
reg.out2 <- regsem(out,lambda=0.06,type="lasso",pars_pen=c(3:8,11:13),
Start=as.numeric(reg.out$coefficients),
step=1,step.ratio=TRUE)
summary(reg.out2)
reg.out2 <- regsem(out,lambda=0.06,type="lasso",pars_pen=c(3:8,11:13),
Start=as.numeric(reg.out$coefficients))
#step=1,step.ratio=TRUE)
summary(reg.out2)
reg.out2 <- regsem(out,lambda=0.06,type="lasso",pars_pen=c(3:8,11:13),
Start=as.numeric(reg.out$coefficients))
#step=1,step.ratio=TRUE)
summary(reg.out2)
reg.out2 <- regsem(out,lambda=0.06,type="lasso",pars_pen=c(3:8,11:13),
Start=as.numeric(reg.out$coefficients))
summary(reg.out2)
reg.out2$iterations
reg.out2 <- regsem(out,lambda=0.06,type="lasso",pars_pen=c(3:8,11:13),
Start=as.numeric(reg.out$coefficients),tol=1e-6)
summary(reg.out2)
reg.out2 <- regsem(out,lambda=0.06,type="lasso",pars_pen=c(3:8,11:13),
Start=as.numeric(reg.out$coefficients),tol=1e-5)
summary(reg.out2)
reg.out2 <- regsem(out,lambda=0.1,type="lasso",pars_pen=c(3:8,11:13),
Start=as.numeric(reg.out$coefficients),tol=1e-5)
summary(reg.out2)

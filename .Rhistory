y2.1 = y1.1 + alpha*slope + beta*y1.1
y3.1 = y2.1 + alpha*slope + beta*y2.1
y4.1 = y3.1 + alpha*slope + beta*y3.1
y5.1 = y4.1 + alpha*slope + beta*y4.1
y6.1 = y5.1 + alpha*slope + beta*y5.1
df1 <- data.frame(x=c(1,2,3,4,5,6), y = c(y1.1,y2.1,y3.1,y4.1,y5.1,y6.1),id=c(999,999,999,999,999,999))
p = p + geom_line(data=df1,aes(x=x,y=y,id=id),colour=i,size=1)
}
p
out.cv
out.cv <- cv_regsem(fit.lds,n.lambda=20,mult.start=TRUE,jump=1,multi.iter=100,warm.start=TRUE,
type="ridge", gradFun = "none",pars_pen=c(3),tol=1e-4,fit.ret=c("chisq","df","BIC"),
optMethod="nlminb",nlminb.control=list(abs.tol=1e-6))
out.cv <- cv_regsem(fit.lds,n.lambda=20,mult.start=TRUE,jump=.5,multi.iter=100,warm.start=TRUE,
type="ridge", gradFun = "none",pars_pen=c(3),tol=1e-4,fit.ret=c("chisq","df","BIC"),
optMethod="nlminb",nlminb.control=list(abs.tol=1e-6))
out.cv
out.cv <- cv_regsem(fit.lds,n.lambda=20,mult.start=TRUE,jump=.01,multi.iter=100,warm.start=TRUE,
type="alasso", gradFun = "none",pars_pen=c(3),tol=1e-4,fit.ret=c("chisq","df","BIC"),
optMethod="nlminb",nlminb.control=list(abs.tol=1e-6))
out.cv <- cv_regsem(fit.lds,n.lambda=20,mult.start=TRUE,jump=.01,multi.iter=100,warm.start=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),tol=1e-4,fit.ret=c("chisq","df","BIC"),
optMethod="coord_desc",nlminb.control=list(abs.tol=1e-6))
out.cv
summary(fit.lds)
out.cv <- cv_regsem(fit.lds2,n.lambda=16,mult.start=TRUE,jump=.05,multi.iter=200,warm.start=TRUE,
type="ridge", gradFun = "none",pars_pen=c(3),fit.ret=c("chisq","df","rmsea","Fmin","CFI","TLI"),
optMethod="nlminb",test.cov=cov9999,fit.ret2="test")
out.cv
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),lwd=3,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+2),lwd=3)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=.8,y.intersp=.4,lwd=3)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),lwd=3,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+2),lwd=3)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=2,y.intersp=.4,lwd=3)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),lwd=3,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+2),lwd=3)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=3,y.intersp=.4,lwd=3)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),lwd=3,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+2),lwd=3)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=3,y.intersp=.6,lwd=3)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),lwd=3,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+2),lwd=3)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=2,y.intersp=.8,lwd=3)
library(ggplot2)
(p = qplot(grade,verbal,group=id,data=wisc.long,alpha=I(1/20),
geom = c("line","point"),xlab = "Grade of Testing", ylab = "Verbal[t]"))
pars <- out.cv[[1]][1:15,]
for(i in 1:nrow(pars)){
alpha <- 1
y1.1 = pars[i,2]; slope <- pars[i,1]; beta <- pars[i,3]
y2.1 = y1.1 + alpha*slope + beta*y1.1
y3.1 = y2.1 + alpha*slope + beta*y2.1
y4.1 = y3.1 + alpha*slope + beta*y3.1
df1 <- data.frame(x=c(1,2,4,6), y = c(y1.1,y2.1,y3.1,y4.1),id=c(999,999,999,999))
p = p + geom_line(data=df1,aes(x=x,y=y,id=id),colour=i,size=1)
}
p
Windows()
windows()
library(ggplot2)
(p = qplot(grade,verbal,group=id,data=wisc.long,alpha=I(1/20),
geom = c("line","point"),xlab = "Grade of Testing", ylab = "Verbal[t]"))
pars <- out.cv[[1]][1:15,]
for(i in 1:nrow(pars)){
alpha <- 1
y1.1 = pars[i,2]; slope <- pars[i,1]; beta <- pars[i,3]
y2.1 = y1.1 + alpha*slope + beta*y1.1
y3.1 = y2.1 + alpha*slope + beta*y2.1
y4.1 = y3.1 + alpha*slope + beta*y3.1
df1 <- data.frame(x=c(1,2,4,6), y = c(y1.1,y2.1,y3.1,y4.1),id=c(999,999,999,999))
p = p + geom_line(data=df1,aes(x=x,y=y,id=id),colour=i,size=1)
}
p
windows()
pars <- out.cv[[1]][1:15,]
for(i in 1:nrow(pars)){
alpha <- 1
y1.1 = pars[i,2]; slope <- pars[i,1]; beta <- pars[i,3]
y2.1 = y1.1 + alpha*slope + beta*y1.1
y3.1 = y2.1 + alpha*slope + beta*y2.1
y4.1 = y3.1 + alpha*slope + beta*y3.1
df1 <- data.frame(x=c(1,2,4,6), y = c(y1.1,y2.1,y3.1,y4.1),id=c(999,999,999,999))
p = geom_line(data=df1,aes(x=x,y=y,id=id),colour=i,size=1)
}
p
windows()
library(ggplot2)
(p = qplot(grade,verbal,group=id,data=wisc.long,alpha=I(1/100000),
geom = c("line","point"),xlab = "Grade of Testing", ylab = "Verbal[t]"))
pars <- out.cv[[1]][1:15,]
for(i in 1:nrow(pars)){
alpha <- 1
y1.1 = pars[i,2]; slope <- pars[i,1]; beta <- pars[i,3]
y2.1 = y1.1 + alpha*slope + beta*y1.1
y3.1 = y2.1 + alpha*slope + beta*y2.1
y4.1 = y3.1 + alpha*slope + beta*y3.1
df1 <- data.frame(x=c(1,2,4,6), y = c(y1.1,y2.1,y3.1,y4.1),id=c(999,999,999,999))
p = p + geom_line(data=df1,aes(x=x,y=y,id=id),colour=i,size=1)
}
p
windows()
library(ggplot2)
(p = qplot(grade,verbal,group=id,data=wisc.long,alpha=I(1/100000),
geom = c("line","point"),xlab = "Grade of Testing", ylab = "Verbal[t]"))
pars <- out.cv[[1]][1:15,]
for(i in 1:nrow(pars)){
alpha <- 1
y1.1 = pars[i,2]; slope <- pars[i,1]; beta <- pars[i,3]
y2.1 = y1.1 + alpha*slope + beta*y1.1
y3.1 = y2.1 + alpha*slope + beta*y2.1
y4.1 = y3.1 + alpha*slope + beta*y3.1
df1 <- data.frame(x=c(1,2,4,6), y = c(y1.1,y2.1,y3.1,y4.1),id=c(999,999,999,999))
p = p + geom_line(data=df1,aes(x=x,y=y,id=id),colour=i,size=1)
}
p
cv.out <- cv_regsem(lav.out,n.lambda=40,type="ridge",multi.iter=20,mult.start=TRUE,optMethod="nlminb",gradFun="ram",
jump=0.02,pars_pen=c(1:3,7:9))
summary(lav.out)
cv.out <- cv_regsem(lav.out,n.lambda=40,type="ridge",multi.iter=20,mult.start=TRUE,optMethod="nlminb",gradFun="ram",
jump=0.02,pars_pen=c(1:3,7:9))
coef.mat <- abs(cv.out[[1]][,c(1:3,7:9)])
shrink.vals <- cv.out[[2]][,"lambda"]
for(i in 1:6){
coef.mat[,i] <- coef.mat[,i]/coef.mat[1,i]
}
plot(shrink.vals,coef.mat[,1],ylim=c(0,1),ylab="Loading/max(Loading)",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(6)){
lines(shrink.vals,coef.mat[,i],lty=i,col=i)
#points(mat[,(nload)])
}
abline(a=0,b=0)
cv.out <- cv_regsem(lav.out,n.lambda=40,type="ridge",
multi.iter=20,mult.start=TRUE,optMethod="nlminb",gradFun="none",
jump=0.02,pars_pen=c(1:3,7:9))
coef.mat <- abs(cv.out[[1]][,c(1:3,7:9)])
shrink.vals <- cv.out[[2]][,"lambda"]
for(i in 1:6){
coef.mat[,i] <- coef.mat[,i]/coef.mat[1,i]
}
plot(shrink.vals,coef.mat[,1],ylim=c(0,1),ylab="Loading/max(Loading)",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(6)){
lines(shrink.vals,coef.mat[,i],lty=i,col=i)
#points(mat[,(nload)])
}
abline(a=0,b=0)
lav.out <- cfa(mod,HS,meanstructure=TRUE,do.fit = T)
library(regsem)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
mod <- "
f1 =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f1~~1*f1"
lav.out <- cfa(mod,HS,meanstructure=TRUE,do.fit = T)
cv.out <- cv_regsem(lav.out,n.lambda=40,type="ridge",
multi.iter=20,mult.start=TRUE,optMethod="nlminb",gradFun="ram",
jump=0.01,pars_pen=c(1:3,7:9))
coef.mat <- abs(cv.out[[1]][,c(1:3,7:9)])
shrink.vals <- cv.out[[2]][,"lambda"]
for(i in 1:6){
coef.mat[,i] <- coef.mat[,i]/coef.mat[1,i]
}
plot(shrink.vals,coef.mat[,1],ylim=c(0,1),ylab="Loading/max(Loading)",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(6)){
lines(shrink.vals,coef.mat[,i],lty=i,col=i)
#points(mat[,(nload)])
}
abline(a=0,b=0)
cv.out <- cv_regsem(lav.out,n.lambda=40,type="ridge",
multi.iter=20,mult.start=TRUE,optMethod="nlminb",gradFun="ram",
jump=0.02,pars_pen=c(1:3,7:9))
cv.out <- cv_regsem(lav.out,n.lambda=40,type="ridge",
multi.iter=20,mult.start=TRUE,optMethod="nlminb",gradFun="none",
jump=0.01,pars_pen=c(1:3,7:9))
coef.mat <- abs(cv.out[[1]][,c(1:3,7:9)])
shrink.vals <- cv.out[[2]][,"lambda"]
for(i in 1:6){
coef.mat[,i] <- coef.mat[,i]/coef.mat[1,i]
}
plot(shrink.vals,coef.mat[,1],ylim=c(0,1),ylab="Loading/max(Loading)",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(6)){
lines(shrink.vals,coef.mat[,i],lty=i,col=i)
#points(mat[,(nload)])
}
abline(a=0,b=0)
cv.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",
multi.iter=20,mult.start=TRUE,optMethod="coord_desc",gradFun="ram",
jump=0.01,pars_pen=c(1:3,7:9))
cv.out
coef.mat <- abs(cv.out[[1]][,c(1:3,7:9)])
shrink.vals <- cv.out[[2]][,"lambda"]
for(i in 1:6){
coef.mat[,i] <- coef.mat[,i]/coef.mat[1,i]
}
plot(shrink.vals,coef.mat[,1],ylim=c(0,1),ylab="Loading/max(Loading)",xlab="Penalty",type="l",lty=1,col=1)
for(i in 2:(6)){
lines(shrink.vals,coef.mat[,i],lty=i,col=i)
#points(mat[,(nload)])
}
abline(a=0,b=0)
plot(shrink.vals,coef.mat[,1],ylim=c(0,1),ylab="Loading/max(Loading)",
xlab="Penalty",type="l",lty=1,col=2,lwd=2)
for(i in 2:(6)){
lines(shrink.vals,coef.mat[,i],lty=1,col=1+i,lwd=2)
#points(mat[,(nload)])
}
abline(a=0,b=0)
plot(shrink.vals,coef.mat[,1],ylim=c(0,1),ylab="Loading/max(Loading)",
xlab="Penalty",type="l",lty=1,col=1,lwd=2)
for(i in 2:(6)){
lines(shrink.vals,coef.mat[,i],lty=1,col=i,lwd=2)
#points(mat[,(nload)])
}
abline(a=0,b=0)
plot(shrink.vals,coef.mat[,1],ylim=c(0,1),ylab="Loading/max(Loading)",
xlab="Penalty",type="l",lty=1,col=1,lwd=2,cex=2)
for(i in 2:(6)){
lines(shrink.vals,coef.mat[,i],lty=1,col=i,lwd=2)
#points(mat[,(nload)])
}
abline(a=0,b=0)
plot(shrink.vals,coef.mat[,1],ylim=c(0,1),ylab="Loading/max(Loading)",
xlab="Penalty",type="l",lty=1,col=1,lwd=2,cex=4)
for(i in 2:(6)){
lines(shrink.vals,coef.mat[,i],lty=1,col=i,lwd=2)
#points(mat[,(nload)])
}
abline(a=0,b=0)
?plot
plot(shrink.vals,coef.mat[,1],ylim=c(0,1),ylab="Loading/max(Loading)",
xlab="Penalty",type="l",lty=1,col=1,lwd=2,cex.lab=2)
for(i in 2:(6)){
lines(shrink.vals,coef.mat[,i],lty=1,col=i,lwd=2)
#points(mat[,(nload)])
}
abline(a=0,b=0)
plot(shrink.vals,coef.mat[,1],ylim=c(0,1),ylab="Loading/max(Loading)",
xlab="Penalty",type="l",lty=1,col=1,lwd=2,cex.lab=1.2)
for(i in 2:(6)){
lines(shrink.vals,coef.mat[,i],lty=1,col=i,lwd=2)
#points(mat[,(nload)])
}
abline(a=0,b=0)
plot(shrink.vals,coef.mat[,1],ylim=c(0,1),ylab="Loading/max(Loading)",
xlab="Penalty",type="l",lty=1,col=1,lwd=2,cex.lab=1.5)
for(i in 2:(6)){
lines(shrink.vals,coef.mat[,i],lty=1,col=i,lwd=2)
#points(mat[,(nload)])
}
abline(a=0,b=0)
cv.out
cv.out[[1]][,1:9]
abs(cv.out[[1]][1:15,1:9])
abs(cv.out[[2][1:15,])
cv.out[[2][1:15,]
cv.out[[2]][1:15,]
cv.out <- cv_regsem(lav.out,n.lambda=40,type="ridge",
multi.iter=20,mult.start=TRUE,optMethod="nlminb",gradFun="ram",
jump=0.01,pars_pen=c(1:3,7:9))
coef.mat <- abs(cv.out[[1]][,c(1:3,7:9)])
shrink.vals <- cv.out[[2]][,"lambda"]
for(i in 1:6){
coef.mat[,i] <- coef.mat[,i]/coef.mat[1,i]
}
plot(shrink.vals,coef.mat[,1],ylim=c(0,1),ylab="Loading/max(Loading)",
xlab="Penalty",type="l",lty=1,col=1,lwd=2,cex.lab=1.5)
for(i in 2:(6)){
lines(shrink.vals,coef.mat[,i],lty=1,col=i,lwd=2)
#points(mat[,(nload)])
}
abline(a=0,b=0)
### cross-validation ####
set.seed(1)
ids <- sample(1:nrow(wisc),120)
wisc.train <- wisc[ids,]
wisc.test <- wisc[-ids,]
fit.lds2 <- lavaan(lds_1, data=wisc.train)
summary(fit.lds2,standardized=TRUE)
cov9 <- cov(wisc.test[,1:4])
cov99 <- cov9 + colMeans(wisc.test[,1:4]) %*% t(colMeans(wisc.test[,1:4]))
cov999 = cbind(cov99,colMeans(wisc.test[,1:4]))
cov9999= rbind(cov999,append(colMeans(wisc.test[,1:4]),1))
out.cv <- cv_regsem(fit.lds2,n.lambda=16,mult.start=TRUE,jump=.05,multi.iter=200,warm.start=TRUE,
type="ridge", gradFun = "none",pars_pen=c(3),fit.ret=c("chisq","df","rmsea","Fmin","CFI","TLI"),
optMethod="nlminb",test.cov=cov9999,fit.ret2="test")
out.cv
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),lwd=3,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+2),lwd=3)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=2,y.intersp=.8,lwd=3)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),lwd=3,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+2),lwd=3)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=1.8,y.intersp=.8,lwd=3)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),lwd=3,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+2),lwd=3)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=1.5,y.intersp=.8,lwd=3)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),lwd=3,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+2),lwd=3)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=1.5,y.intersp=.8,lwd=4)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),lwd=2,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+3),lwd=2)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=1.5,y.intersp=.8,lwd=4)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),lwd=2,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+4),lwd=2)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=1.5,y.intersp=.8,lwd=4)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),lwd=2,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+1),lwd=2)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=1.5,y.intersp=.8,lwd=4)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),lwd=2,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+2),lwd=2)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=1.5,y.intersp=.8,lwd=4)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),cex.lab=1.5
lwd=2,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+2),lwd=2)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=1.5,y.intersp=.8,lwd=4)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),cex.lab=1.5,
lwd=2,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+2),lwd=2)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=1.5,y.intersp=.8,lwd=4)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),cex.lab=1.5,
lwd=2.5,col=2,xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+2),lwd=2.5)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=1.5,y.intersp=.8,lwd=4)
colors()
?col
col()
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),cex.lab=1.5,
lwd=2.5,col=heat.colors(1),xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=(i+2),lwd=2.5)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=1.5,y.intersp=.8,lwd=4)
heat.colors(4)
colls <- heat.colors(4)
colls <- heat.colors(4)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),cex.lab=1.5,
lwd=2.5,col=colls[1],xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=colls[i+1],lwd=2.5)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=1.5,y.intersp=.8,lwd=4)
?heat.colors
colls <- rainbow(4)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),cex.lab=1.5,
lwd=2.5,col=colls[1],xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=colls[i+1],lwd=2.5)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=2:5,lty=1,cex=1.5,y.intersp=.8,lwd=4)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),cex.lab=1.5,
lwd=2.5,col=colls[1],xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=colls[i+1],lwd=2.5)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=colls,lty=1,cex=1.5,y.intersp=.8,lwd=4)
library(colorspace)
colls <- rainbow_hcl(4)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.1,.1),cex.lab=1.5,
lwd=2.5,col=colls[1],xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=colls[i+1],lwd=2.5)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=colls,lty=1,cex=1.5,y.intersp=.8,lwd=4)
plot.new()
fits <- out.cv[[2]][,5:8]
fits2 <- data.frame(scale(fits,scale=FALSE))
plot(out.cv[[2]][,"lambda"],fits2[,1],type="l",ylim=c(-.075,.075),cex.lab=1.5,
lwd=2.5,col=colls[1],xlab="Lambda",ylab="Centered Fit",main="Cross Validated Fit")
for(i in 1:3){
lines(out.cv[[2]][,"lambda"],fits2[,1+i],col=colls[i+1],lwd=2.5)
}
abline(h=0,lwd=3)
legend(x=.4,y=-.03,legend=c("RMSEA","Fmin","CFI","TLI"),col=colls,lty=1,cex=1.5,y.intersp=.8,lwd=4)
library(regsem)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
mod <- "
f1 =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f1~~1*f1"
lav.out <- cfa(mod,HS,meanstructure=TRUE,do.fit = T)
extractMatrices(lav.out)$A
semPlot::semPaths(lav.out,what="std",edge.width=2,edge.color = 1,label.prop=1.5,edge.label.font=3)
cv.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",
multi.iter=20,mult.start=TRUE,optMethod="coord_desc",gradFun="ram",
jump=0.01,pars_pen=c(1:3,7:9))
cv.out
abs(cv.out[[1]])
abs(cv.out[[1]][1:15,])
cv.out[[2]][1:15,]
extractMatrices(lav.out)$A
extractMatrices(lav.out)$A_est
library(regsem)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
mod2 <- "
f1 =~ NA*x1 + x4 + x5 + x6 + x9
f1~~1*f1"
lav.out2 <- cfa(mod2,HS,meanstructure=TRUE,do.fit = T)
fitmeasures(lav.out2)
fitmeasures(lav.out)

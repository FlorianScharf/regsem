person1 = HS[i,]
K = 9#sum(ind1)
ind1 = rep(T,9)#is.na(person1)==FALSE
sub1 = as.numeric(person1 - SampMean)
fit = fit + indFit
}
indFit = K - 301*(0.5* log(det(ImpCov))) - 301*(0.5* t(sub1) %*% tr(solve(ImpCov)) %*% sub1)
fit
tr(solve(ImpCov))
fit = 0
ImpCov = matrix(fitted(outt)$cov,9,9)
#HS = HS[2:301,]
for(i in 1:nrow(HS)){
person1 = HS[i,]
K = 9#sum(ind1)
indFit = K - (0.5* log(det(ImpCov))) - (0.5* t(sub1) %*% solve(ImpCov) %*% sub1)
sub1 = as.numeric(person1 - SampMean)
ind1 = rep(T,9)#is.na(person1)==FALSE
fit = fit + indFit
}
fit
fit = 0
ImpCov = cov(HS)
ImpCov = matrix(fitted(outt)$cov,9,9)
#HS = HS[2:301,]
for(i in 1:nrow(HS)){
person1 = HS[i,]
ind1 = rep(T,9)#is.na(person1)==FALSE
sub1 = as.numeric(person1 - SampMean)
K = 9#sum(ind1)
indFit = K - (0.5* log(det(ImpCov))) - (0.5* t(sub1) %*% solve(ImpCov) %*% sub1)
fit = fit + indFit
}
fit
ImpCov
outt@Data@Mp
outt@SampleStats@missing
str(outt@Data)
str(miss2)
str(outt@SampleStats)
outt@SampleStats@missing.h1[[1]]
outt@SampleStats@missing.h1[[1]]$h1
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="fiml")
library(regsem)
outt = cfa(mod,HS,missing="fiml",meanstructure=TRUE)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="fiml")
library(regsem)
outt = cfa(mod,HS,missing="fiml")
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="fiml")
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="fiml")
fit1
summary(outt)
extractMatrices(outt)$A
outt = cfa(mod,HS,missing="fiml")
extractMatrices(outt)$A
mod <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f~~1*f
x1~0*1
x2~0*1
x3~0*1
x4~0*1
x5~0*1
x6~0*1
x7~0*1
x8~0*1
x9~0*1
'
outt = cfa(mod,HS,missing="fiml")
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="fiml")
extractMatrices(outt)$A
extractMatrices(outt)
fitted(outt)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="fiml")
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="fiml")
extractMatrices(outt)
model=outt
pars <- lavaan::parameterestimates(model)
parT <- lavaan::parTable(model)
ifelse(any(pars$op == "~1"),1,0)
pars$op
pars
parT
parT$op == "~1"
parT[parT$op == "~1",]
parTT = parT[parT$op == "~1",]
mean =FALSE
if(any(parT$op == "~1")){
parTT = parT[parT$op == "~1",]
if(any(parTT$free > 0)){
mean = TRUE
}
}
mean
ifelse(mean==TRUE,1,0)
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="fiml")
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="fiml")
extractMatrices(outt)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
#HS[1,1] <- NA
mod <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f~~1*f
x1~0*1
x2~0*1
x3~0*1
x4~0*1
x5~0*1
x6~0*1
x7~0*1
x8~0*1
x9~0*1
'
outt = cfa(mod,HS,missing="fiml")
summary(outt)
fitMeasures(outt)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="fiml")
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="fiml")
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="fiml")
extractMatrices(outt)
model=outt
#library(lavaan)
pars <- lavaan::parameterestimates(model)
parT <- lavaan::parTable(model)
library(regsem)
extractMatrices(outt)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="fiml")
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="fiml")
library(regsem)
summary(fit1)
fit1
HS[1,1] <- NA
mod <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f~~1*f
x1~0*1
x2~0*1
x3~0*1
x4~0*1
x5~0*1
x6~0*1
x7~0*1
x8~0*1
x9~0*1
'
outt = cfa(mod,HS,missing="fiml")
summary(outt)
fitMeasures(outt)
HS[1:50,1] <- NA
mod <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f~~1*f
x1~0*1
x2~0*1
x3~0*1
x4~0*1
x5~0*1
x6~0*1
x7~0*1
x8~0*1
x9~0*1
'
outt = cfa(mod,HS,missing="fiml")
summary(outt)
fitMeasures(outt)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="fiml")
fit1
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="ram", missing="fiml")
library(regsem)
model=outt
model@SampleStats@cov[][[1]]
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="ram", missing="fiml")
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="ram", missing="fiml")
outt@SampleStats
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="ram", missing="fiml")
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="norm", missing="fiml")
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="ram", missing="listwise")
model=outt
length(model@ParTable$op[model@ParTable$op == "~1"])
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="ram", missing="listwise")
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="ram", missing="listwise")
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="ram", missing="listwise")
fit1
outt = cfa(mod,HS)
summary(outt)
fitMeasures(outt)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="listwise")
fit1
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
outt = cfa(mod,HS)
summary(outt)
fitMeasures(outt)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="listwise")
fit1
outt@SampleStats@missing.flag
outt@SampleStats@missing
HS[1:50,1] <- NA
outt = cfa(mod,HS)
outt@SampleStats@missing.flag
summary(outt)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="listwise")
fit1
fitMeasures(outt)
outt@SampleStats@missing
outt@SampleStats
str(outt)
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="listwise")
outt@Data@nobs
outt@SampleStats@ngroups > 1
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
gradFun="none", missing="listwise")
fit1 <- regsem(outt,type="none",optMethod="nlminb",hess="ram",
gradFun="ram", missing="listwise")
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",hess="ram",
gradFun="ram", missing="listwise")
hess = fit1$hess
hess
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",hess="ram",
gradFun="ram", missing="listwise")
hess = fit1$hess
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
#HS[1:50,1] <- NA
mod <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f~~1*f
#x1~0*1
#x2~0*1
#x3~0*1
#x4~0*1
#x5~0*1
#x6~0*1
#x7~0*1
#x8~0*1
#x9~0*1
'
outt = cfa(mod,HS)
summary(outt)
fitMeasures(outt)
fit1 <- regsem(outt,type="none",optMethod="nlminb",hess="ram",
gradFun="ram", missing="listwise")
hess = fit1$hess
?nlminb
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="listwise")
library(regsem)
install.packages("numDeriv")
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="listwise")
fit1$coefficients
as.numeric(fit1$coefficients)
?numDeriv
library(numDeriv)
?numDeriv
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="listwise",gradFun="numDeriv",hessFun="numDeriv")
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="listwise")
summary(fit1)
missing="fiml")
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="fiml")
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="fiml",gradFun="none")
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
HS[1:50,1] <- NA
mod <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f~~1*f
x1~0*1
x2~0*1
x3~0*1
x4~0*1
x5~0*1
x6~0*1
x7~0*1
x8~0*1
x9~0*1
'
outt = cfa(mod,HS)
summary(outt)
fitMeasures(outt)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="fiml",gradFun="none")
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="fiml",gradFun="none")
library(regsem)
?chol
?chol2inv
fit1
chol(fit1$Imp_Cov)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="fiml",gradFun="none")
traceback()
outt@SampleStats@missing[[1]]
outt@SampleStats
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="fiml",gradFun="none")
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
HS[1:50,1] <- NA
mod <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f~~1*f
x1~0*1
x2~0*1
x3~0*1
x4~0*1
x5~0*1
x6~0*1
x7~0*1
x8~0*1
x9~0*1
'
outt = cfa(mod,HS)
summary(outt)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="fiml",gradFun="none")
library(regsem)
outt = cfa(mod,HS,missing="fiml")
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="fiml",gradFun="none")
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="fiml",gradFun="none")
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="fiml",gradFun="none")
summary(fit1)
fit1
summary(outt)
fitMeasures(outt)
outt@SampleStats@nobs[[1]][1]
outt@SampleStats
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="fiml",gradFun="none")
summary(fit1)
fit_indices(fit1)
fit1["Fmin"]
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="fiml",gradFun="none")
summary(fit1)
fitmeasures(outt)
fit1
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="fiml",gradFun="none")
summary(fit1)
fitMeasures(outt)
fitMeasures(outt)
fit_indices(fit1)
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="fiml",gradFun="none")
fit_indices(fit1)
fitmeasures(outt)["unrestricted.logl"]
library(regsem)
fit1 <- regsem(outt,type="none",optMethod="nlminb",
missing="fiml",gradFun="none")
summary(fit1)
library(lavaan)
HS.model <- ' visual =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed =~ x7 + x8 + x9 '
fit <- cfa(HS.model, data=HolzingerSwineford1939, se="standard",information="observed")
str(fit)
vcov = round(fit@vcov$vcov,4)
hess = lavInspect(fit,"hessian")
library(Matrix)
rankMatrix(hess)
fitmeasures(fit.measures = )
fitmeasures(fit)
vals <- c(0.00001,0.0001,0.001,0.01,0.1,1,3,5,10,20,100)
i=1
set.seed(4536)
population.model <- '
f1 =~ 1*x1 + 0.2*x2 + 1*x3
f2 =~ 1*x4 + 0.2*x5 + 1*x6
f3 =~ 1*x7 + 0.2*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
N = 400
fa <-'
f1 =~ 1*x1 + x2 + x3 + x4 + x5 + x6
f2 =~ 1*x4 + x5 + x6 + x7 + x8 + x9
f3 =~ NA*x1 + x2 + x3 + 1*x7 + x8 + x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
myData <- simulateData(population.model, sample.nobs=N)
val = vals[[i]]
outt = bcfa(fa,myData,dp=dpriors("lambda=dnorm(0,val"))
library(blavaan)
outt = bcfa(fa,myData,dp=dpriors("lambda=dnorm(0,val"))
outt = bcfa(fa,myData,dp=dpriors("lambda=dnorm(0,val)"))
outt = bcfa(fa,myData,dp=dpriors(lambda="dnorm(0,val)"))
cat("dnorm(0,",val,")")
prior = cat("dnorm(0,",val,")")
prior = print("dnorm(0,",val,")")
?cat
prior = print0("dnorm(0,",val,")")
prior = cat("dnorm(0,",val,")")
prior = paste("dnorm(0,",val,")")
prior
outt = bcfa(fa,myData,dp=dpriors(lambda=prior))
outt = bcfa(fa,myData,dp=dpriors(lambda=prior))
?bcfa
outt = bcfa(fa,myData,dp=dpriors(lambda=prior),jagcontrol=list(method="rjparallel"))
fitmeasures(outt)
fitm <- fitmeasures(outt)
as.numeric(fitm)
fits <- list()
for(i in 1:length(vals)){
val = vals[[i]]
prior = paste("dnorm(0,",val,")")
outt = bcfa(fa,myData,dp=dpriors(lambda=prior),jagcontrol=list(method="rjparallel"))
fitm <- fitmeasures(outt)
fits[[i]] <- fitm
}
unlist(fits)
fits
data.matrix(unlist(fits))
?data.matrix
fits
matrix(unlist(fits),11,11)
?matrix
matrix(unlist(fits),11,11,byrow=TRUE)
fits2 = matrix(unlist(fits),11,11,byrow=TRUE)
colnames(fits2) <- names(fits[[1]])
fits2
N = 70
fa <-'
f1 =~ 1*x1 + x2 + x3 + x4 + x5 + x6
f2 =~ 1*x4 + x5 + x6 + x7 + x8 + x9
f3 =~ NA*x1 + x2 + x3 + 1*x7 + x8 + x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
myData <- simulateData(population.model, sample.nobs=N)
vals <- c(0.00001,0.0001,0.001,0.01,0.1,1,3,5,10,20,100)
# generate data
fits <- list()
for(i in 1:length(vals)){
val = vals[[i]]
prior = paste("dnorm(0,",val,")")
outt = bcfa(fa,myData,dp=dpriors(lambda=prior),jagcontrol=list(method="rjparallel"))
fitm <- fitmeasures(outt)
fits[[i]] <- fitm
}
fits2 = matrix(unlist(fits),11,11,byrow=TRUE)
colnames(fits2) <- names(fits[[1]])
fits2

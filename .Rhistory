step.ratio=TRUE,step=1,warm.start=T)
fit.reg.tune
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=T,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T)
fit.reg.tune
library(regsem)
?cv_regsem
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=T,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T,gradFun="numDeriv")
install.packages("numDeriv")
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=T,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T,gradFun="numDeriv")
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=T,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T,gradFun="numDeriv")
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=T,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T,gradFun="numDeriv")
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=T,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T,gradFun="numDeriv")
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=T,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T)
class(99)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=T,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=T,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=T,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=T,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=T,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=T,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=T,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=T,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T)
traceback()
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=F,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=TRUE,step=.5,warm.start=T)
fit.reg.tune
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=F,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=FALSE,step=.5,warm.start=T)
fit.reg.tune
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",
step.ratio=FALSE,step=.5,warm.start=T)
fit.reg.tune
fit.reg.tune = cv_regsem(fit.delta,type="ridge",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="nlming",
step.ratio=FALSE,step=.5,warm.start=T)
fit.reg.tune = cv_regsem(fit.delta,type="ridge",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=1,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="nlminb",
step.ratio=FALSE,step=.5,warm.start=T)
fit.reg.tune
summary(fit.delta)
fit.reg.tune = cv_regsem(fit.delta,type="ridge",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=30,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="nlminb",
step.ratio=FALSE,step=.5,warm.start=T)
fit.reg.tune
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="ridge",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=30,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="nlminb",
step.ratio=FALSE,step=.5,warm.start=T)
fit.reg.tune
fit.reg.tune = cv_regsem(fit.delta,type="ridge",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=30,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="nlminb",gradFun="ram",
step.ratio=FALSE,step=.5,warm.start=T)
library(regsem)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="ridge",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=30,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="nlminb",gradFun="ram",
step.ratio=FALSE,step=.5,warm.start=T)
fit.reg.tune
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=3,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE)
fit.reg.tune
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=30,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE)
fit.reg.tune
library(regsem)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=85,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE)
fit.reg.tune
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE)
library(regsem)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
traceback(0)
traceback()
library(regsem)
fit.reg.tune
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.05,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.06,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.06,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
library(ISLR)
library(regsem)
data(College)
#standardizing variables
College1 = College[which(College$Private=="Yes"),]
Data = data.frame(scale(College1[c(3,4,9:12,15,17)]))
#lavaan model with all mediators
model1 <-
' # direct effect (c)
Enroll ~ c*Accept
# mediators
Outstate ~ a1*Accept
Room.Board ~ a2*Accept
Books ~ a3*Accept
Personal ~ a4*Accept
S.F.Ratio ~ a5*Accept
Expend ~ a6*Accept
Enroll ~ b1*Outstate + b2*Room.Board + b3*Books + b4*Personal + b5*S.F.Ratio + b6*Expend
# indirect effects (a*b)
a1b1 := a1*b1
a2b2 := a2*b2
a3b3 := a3*b3
a4b4 := a4*b4
a5b5 := a5*b5
a6b6 := a6*b6
# total effect (c_prime)
total := c + (a1*b1) + (a2*b2) + (a3*b3) + (a4*b4) + (a5*b5) + (a6*b6)
#Enroll~~0.5*Enroll
'
#p-value approach using delta method standard errors
fit.delta = sem(model1,data=Data,fixed.x=T)
summary(fit.delta)
extractMatrices(fit.delta)$A
#exploratory mediation analysis via regularization
#Stage 1
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.05,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.08,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(ISLR)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
library(regsem)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
traceback()
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
debugonce(cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40))
library(regsem)
library(regsem)
debugonce(cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40))
library(regsem)
library(regsem)
debugonce(cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40))
out
fit1
fit.delta$convergence
fit.reg.tune
fit.reg.tune$convergence
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=FALSE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0.07,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=40)
fit.reg.tune
install.packages("roxygen2")
library(regsem)
install.packages("snowfall")
install.packages("GA")
install.packages("rgenoud")
install.packages("Rsolnp")
install.packages("optimx")
install.packages("semPlot")
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=5,mult.start=TRUE,lambda.start=0,
n.lambda=40,tol=1e-5,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=FALSE,solver.maxit=40)
fit.reg.tune
?cv_regsem
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=40,mult.start=TRUE,lambda.start=0,
n.lambda=40,tol=1e-6,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=4)
fit.reg.tune
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=40,mult.start=TRUE,lambda.start=0,
n.lambda=40,tol=1e-6,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=1)
fit.reg.tune
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=40,mult.start=TRUE,lambda.start=0,
n.lambda=40,tol=1e-6,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=100)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=40,mult.start=TRUE,lambda.start=0,
n.lambda=40,tol=1e-6,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=100)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=40,mult.start=TRUE,lambda.start=0,
n.lambda=40,tol=1e-6,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=100)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=4,mult.start=TRUE,lambda.start=0,
n.lambda=40,tol=1e-6,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=100)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=4,mult.start=TRUE,lambda.start=0,
n.lambda=10,tol=1e-6,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=1)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=4,mult.start=TRUE,lambda.start=0,
n.lambda=10,tol=1e-6,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=10)
fit.reg.tune
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=4,mult.start=TRUE,lambda.start=0,
n.lambda=10,tol=1e-6,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=10)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=4,mult.start=TRUE,lambda.start=0,
n.lambda=10,tol=1e-6,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=10)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=4,mult.start=TRUE,lambda.start=0,
n.lambda=10,tol=1e-6,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=10)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=4,mult.start=TRUE,lambda.start=0,
n.lambda=10,tol=1e-6,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=10)
library(regsem)
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=4,mult.start=TRUE,lambda.start=0,
n.lambda=10,tol=1e-6,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=10)
fit.reg.tune
fit.reg.tune = cv_regsem(fit.delta,type="lasso",pars_pen = c(2:13),jump=0.002,multi.iter=4,mult.start=TRUE,lambda.start=0,
n.lambda=40,tol=1e-6,fit.ret=c("BIC"),fit.ret2="train",optMethod="coord_desc",gradFun="ram",
warm.start=T,solver=TRUE,solver.maxit=10)
library(regsem)
## Simulating time series data from ------------------------
## Phi (lag) and A (contemp) matrices ----------------------
ts.generate <- function (A,Phi,t) {
repeat {
nvar  <- ncol(A)
noise <- matrix(rnorm(nvar*250,0,1),nvar)
I     <- diag(nvar)
time  <- matrix(0,nrow=nvar,ncol=251)
time1 <- matrix(0,nrow=nvar,ncol=250)
for (i in 1:250){
time1[,i]  <- solve(I-A)%*%(Phi%*%time[,i] + noise[,i])
time[,i+1] <- time1[,i]
}
time1  <- time1[,(50:(50+t))]
series <- t(time1)
if (abs(max(series)) < 20 & abs(min(series)) > .01 & abs(min(series)) < 20) break
}
return(series)
}
A <- matrix(
c(0,  0, .5,
.5,  0,  0,
0,  0,  0), nrow = 3, ncol = 3, byrow = TRUE)
Phi <- matrix(
c(.5,  0,  0,
0, .5,  0,
0, .5, .5), nrow = 3, ncol = 3, byrow = TRUE)
data     <- ts.generate(A, Phi, 200)
first    <- data[1:(nrow(data)-1), ]
second   <- data[2:nrow(data), ]
data.lag <- data.frame(first, second)
colnames(data.lag) <- c("V1lag", "V2lag", "V3lag", "V1", "V2", "V3")
### end simulating time series -------------------------------
## fitting data-generating model in lavaan ------------------
library(lavaan)
model <- '
# estimate all autoregressive
V1 ~ V1lag
V2 ~ V2lag
V3 ~ V3lag
# estimate cross-lagged
V3 ~ V2lag
# estimate contemp
V2 ~ V1
V1 ~ V3
'
fit <- sem(model, data.lag)
summary(fit)
fitmeasures(fit)
parTable(fit)
## end fitting data-generating model in lavaan ---------------
## attempting to fit full model with all possible paths
## and then send to regsem. does not work
library(lavaan)
model <- '
# estimate all autoregressive
V1 ~ V1lag
V2 ~ V2lag
V3 ~ V3lag
# estimate all cross-lagged
V1 ~ V2lag
V1 ~ V3lag
V2 ~ V1lag
V2 ~ V3lag
V3 ~ V1lag
V3 ~ V2lag
# estimate all contemp
V1 ~ V2
V2 ~ V1
V1 ~ V3
V3 ~ V1
V2 ~ V3
V3 ~ V2
'
fit <- sem(model, data.lag)
summary(fit)
fitmeasures(fit)
library(regsem)
#out <- multi_optim(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),max.try=50,
#                   lambda = 0.2,optMethod="coord_desc",step=1,step.ratio=TRUE)
#summary(out)
#out <- regsem(fit,type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,
#                   lambda = 0.5,optMethod="coord_desc",step=.5,step.ratio=TRUE)
#summary(out)
#out$KKT1
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.08,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,fit.ret=c("chisq","df","BIC"),
optMethod="coord_desc")#,step=1,step.ratio=TRUE)
out.cv
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.08,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,fit.ret=c("chisq","df","BIC"),
optMethod="coord_desc",,step=1)#,step.ratio=TRUE)
out.cv
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.08,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,fit.ret=c("chisq","df","BIC"),
optMethod="coord_desc",,step=1,step.ratio=TRUE)
out.cv
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.08,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,fit.ret=c("chisq","df","BIC"),
optMethod="coord_desc",full=FALSE,step=1,step.ratio=TRUE)
out.cv
warnings()
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.08,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,fit.ret=c("chisq","df","BIC"),
optMethod="coord_desc",full=FALSE)#,step=1,step.ratio=TRUE)
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.08,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,fit.ret=c("chisq","df","BIC"),
optMethod="coord_desc",full=FALSE,step=1,step.ratio=TRUE)
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.08,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-6,fit.ret=c("chisq","df","BIC"),
optMethod="coord_desc")#,full=FALSE,step=1,step.ratio=TRUE)
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.08,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-6,fit.ret=c("chisq","df","BIC"),
optMethod="coord_desc", full=FALSE,step=1,step.ratio=TRUE)
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.08,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-5,fit.ret=c("chisq","df","BIC"),
optMethod="coord_desc", full=FALSE,step=1,step.ratio=TRUE)
out.cv
out.cv <- cv_regsem(fit,n.lambda=20,mult.start=TRUE,jump=0.08,multi.iter=50,
type="lasso", gradFun = "ram",pars_pen=c(1:15),tol=1e-4,fit.ret=c("chisq","df","BIC"),
optMethod="coord_desc", full=FALSE,step=1,step.ratio=TRUE)
?cv_regsem

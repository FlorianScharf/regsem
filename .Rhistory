coef(fit2)[1]
cv.out <- cv_regsem(fit,n.lambda=20,jump=0.02,type="diff_lasso",
mult.start=TRUE,multi.iter=2,
diff_par=coef(fit2)[1],pars_pen=3:6,verbose=F)
cv.out
sim.fun <- function(vec){
library(regsem)
if(vec["mod"]==1){
model <- ' i =~ 1*t1 + 1*t2 + 1*t3 + 1*t4
s =~ 0*t1 + 1*t2 + 2*t3 + 3*t4
s~1*1;i~1*1;s~~.5*i;
t1~~1*t1;t2~~1*t2;t3~~0.5*t3;t4~~0.5*t4'
}else if(vec["mod"]==2){
model <- ' i =~ 1*t1 + 1*t2 + 1*t3 + 1*t4
s =~ 0*t1 + 1*t2 + 2*t3 + 3*t4
s~1*1;i~1*1;s~~.5*i;
t1~~1*t1;t2~~1*t2;t3~~1*t3;t4~~1*t4'
}
dat <- simulateData(model,model.type="sem",sample.nobs = vec["samp"],seed=vec["seed"])
mod1 <- ' i =~ 1*t1 + 1*t2 + 1*t3 + 1*t4
s =~ 0*t1 + 1*t2 + 2*t3 + 3*t4
'
fit <- growth(mod1, data=dat)
#summary(fit)
ret.matrix <- coef(fit)
mod2 <- ' i =~ 1*t1 + 1*t2 + 1*t3 + 1*t4
s =~ 0*t1 + 1*t2 + 2*t3 + 3*t4
t1~~r1*t1;t2~~r1*t2;t3~~r1*t3;t4~~r1*t4;
'
fit2 <- growth(mod2, data=dat)
#summary(fit2)
#coef(fit2)[1]
#extractMatrices(fit)
if(vec["fit.index"]==1){
cv.out <- cv_regsem(fit,n.lambda=20,jump=0.02,type="diff_lasso",
mult.start=TRUE,multi.iter=2,
diff_par=coef(fit2)[1],pars_pen=3:6,verbose=F)
}else if(vec["fit.index"]==2){
cv.out <- cv_regsem(fit,n.lambda=20,jump=0.02,type="diff_lasso",
fit.ret=c("BIC","ncp","rmsea"),metric="ncp",
fit.ret2="boot",mult.start=TRUE,multi.iter=2,
diff_par=coef(fit2)[1],pars_pen=3:6,verbose=F)
}
ret.matrix2 <- cv.out$final_pars
return(list(ret.matrix,ret.matrix2,vec["samp"],vec["mod"],vec["fit.index"],vec["seed"],cv.out$fits))
}
samp <- c(60,100,200,1000)
mod <- 1:2
fit.index <- 1:2
iters <- 1#:100
grid <- expand.grid(iters=iters,samp=samp,mod=mod,fit.index=fit.index)
grid$seed <- 1#:nrow(grid)
grid
library(parallel)
no_cores <- 4#detectCores()
cl <- makeCluster(no_cores)
clusterExport(cl, c("grid"))
ret <- parRapply(cl,grid,sim.fun)
ret
library(regsem)
sim.mod33 <-"
f1 =~ x1 + x2 + x3 + x4 + x5
f2 =~ x6 + x7 + x8 + x9 + x10
f1~~0*f2
"
dat33 <- simulateData(sim.mod23,model.type="cfa",orthogonal=T)
sim.run33 <- cfa(mod33,dat33)
summary(sim.run33)
dat33 <- simulateData(sim.mod33,model.type="cfa",orthogonal=T)
sim.run33 <- cfa(mod33,dat33)
mod33 <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10
f~~1*f
'
sim.run33 <- cfa(mod33,dat33)
summary(sim.run33)
summary(sim.run33,fit=T)
extractMatrices(sim.run33)
mod33.1 <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10
f~~1*f
x1~~x2;x1~~x3;x2~~x3;x1~~x4;x2~~x4;x3~~x4;
x1~~x5;x2~~x5;x3~~x5;x4~~x5;x1~~x6;x2~~x6;x3~~x6;
x4~~x6;x5~~x6;x1~~x7;x2~~x7;x3~~x7;x4~~x7;x5~~x7;
x6~~x7;x1~~x8;x2~~x8;x3~~x8;x4~~x8;x5~~x8;x6~~x8;
x7~~x8;x1~~x9;x2~~x9;x3~~x9;x4~~x9;x5~~x9;x6~~x9;
x7~~x9;x8~~x9;x1~~x10;x2~~x10;x3~~x10;x4~~x10;
x5~~x10;x6~~x10;x7~~x10;x8~~x10;x9~~x10
'
sim.run33.1 <- cfa(mod33.1,dat33)
summary(sim.run33.1,fit=T)
extractMatrices(sim.run33.1)
cv.out33 = cv_regsem(sim.run33.1,type="lasso", pars_pen=c(11:55),optMethod="rsolnp",
n.lambda=20,jump=0.05)
plot(cv.out33)
cv.out33$final_pars
install.packages("bootnet")
# graphical model
library(bootnet)
ggm.out <- estimateNetwork(dat33)
ggm.out <- estimateNetwork(dat33,default="EBICglasso")
plot(ggm.out)
sim.mod2 <-"
f =~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f1 =~ x1 + x2 + x3
f2 =~ x4 + x5 + x6
f3 =~ x7 + x8 + x9
"
dat2 <- simulateData(sim.mod2,model.type="cfa",orthogonal=T)
sim.run3 <- cfa(mod1,dat2)
summary(sim.run3)
library(regsem)
# penalize residual covariance to determine optimal model
# --------------------------------------------
# applied example -- just test to see if works
# ---------------------------------------------
# put variables on same scale for regsem
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
mod1 <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f~~1*f
'
out = cfa(mod1, HS)
summary(out)
mod <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
x1~~x2;x1~~x3;x2~~x3;x1~~x4;x2~~x4;x3~~x4;
x1~~x5;x2~~x5;x3~~x5;x4~~x5;x1~~x6;x2~~x6;x3~~x6;
x4~~x6;x5~~x5;
f~~1*f
'
outt = cfa(mod, HS)
summary(outt)
extractMatrices(outt)
# increase to > 25
cv.out = cv_regsem(outt,type="lasso", pars_pen=c(10:23),optMethod="rsolnp",
n.lambda=20,jump=0.05)
cv.out
plot(cv.out)
# ----------------------------------
# simulate data
# ----------------------------------
sim.mod <-"
f1 =~ x1 + x2 + x3
f2 =~ x4 + x5 + x6
f3 =~ x7 + x8 + x9
"
dat <- simulateData(sim.mod,model.type="cfa")
sim.run <- cfa(mod1,dat)
summary(sim.run)
mod2 <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
x1~~x2;x1~~x3;x2~~x3;x1~~x4;x2~~x4;x3~~x4;
x1~~x5;x2~~x5;x3~~x5;x4~~x5;x1~~x6;x2~~x6;x3~~x6;
x4~~x6;x5~~x6;x1~~x7;x2~~x7;x3~~x7;x4~~x7;x5~~x7;
x6~~x7;x1~~x8;x2~~x8;x3~~x8;x4~~x8;x5~~x8;x6~~x8;
x7~~x8;x1~~x9;x2~~x9;x3~~x9;x4~~x9;x5~~x9;x6~~x9;
x7~~x9;x8~~x9;
f~~1*f
'
sim.run2 <- cfa(mod2,dat)
summary(sim.run2,fit=T)
extractMatrices(sim.run2)
cv.out2 = cv_regsem(sim.run2,type="lasso", pars_pen=c(10:45),optMethod="rsolnp",
n.lambda=20,jump=0.05)
plot(cv.out2)
cv.out2$final_pars
# identifies large residual covariances left over
# would inform the addition of other factors to add
# ----------------------------------------------
# simulation #2
# bifactor model
# ------------------------------------------
sim.mod2 <-"
f =~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f1 =~ x1 + x2 + x3
f2 =~ x4 + x5 + x6
f3 =~ x7 + x8 + x9
"
dat2 <- simulateData(sim.mod2,model.type="cfa",orthogonal=T)
sim.run3 <- cfa(mod1,dat2)
summary(sim.run3)
sim.run4 <- cfa(mod2,dat2)
summary(sim.run4,fit=T)
extractMatrices(sim.run4)
cv.out3 = cv_regsem(sim.run4,type="lasso", pars_pen=c(10:45),optMethod="rsolnp",
n.lambda=20,jump=0.05)
plot(cv.out3)
cv.out3$final_pars
# identifies specific factors
# graphical model
library(bootnet)
ggm.out2 <- estimateNetwork(dat2,default="EBICglasso")
plot(ggm.out2)
cv.out3$final_pars
ggm.out1 <- estimateNetwork(dat,default="EBICglasso")
plot(ggm.out1)
sim.mod <-"
f1 =~ x1 + x2 + x3
f2 =~ x4 + x5 + x6
f3 =~ x7 + x8 + x9
f1~~0.8*f2;f2~~0.8*f3;f1~~0.8*f3
"
dat <- simulateData(sim.mod,model.type="cfa")
ggm.out1 <- estimateNetwork(dat,default="EBICglasso")
plot(ggm.out1)
mod2 <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
x1~~x2;x1~~x3;x2~~x3;x1~~x4;x2~~x4;x3~~x4;
x1~~x5;x2~~x5;x3~~x5;x4~~x5;x1~~x6;x2~~x6;x3~~x6;
x4~~x6;x5~~x6;x1~~x7;x2~~x7;x3~~x7;x4~~x7;x5~~x7;
x6~~x7;x1~~x8;x2~~x8;x3~~x8;x4~~x8;x5~~x8;x6~~x8;
x7~~x8;x1~~x9;x2~~x9;x3~~x9;x4~~x9;x5~~x9;x6~~x9;
x7~~x9;x8~~x9;
f~~1*f
'
sim.run2 <- cfa(mod2,dat)
summary(sim.run2,fit=T)
cv.out2 = cv_regsem(sim.run2,type="lasso", pars_pen=c(10:45),optMethod="rsolnp",
n.lambda=20,jump=0.05)
warnings(0)
warnings()
cv.out2$final_pars
summary(sim.run2,fit=T)
mod2.1 <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f~~1*f
'
sim.run2.1 <- cfa(mod2.1,dat)
summary(sim.run2.1,fit=T)
install.packages("fanc")
library(fanc)
?fanc
fanc.out1 <- fanc(dat,2)
fanc.out1 <- fanc(as.matrix(dat),2)
fanc.out1
plot(fanc.out1)
plot(ggm.out1)
fanc.out1 <- fanc(as.matrix(dat),3)
plot(fanc.out1)
fanc.out2 <- fanc(as.matrix(dat2),3)
plot(fanc.out1)
fanc.out2 <- fanc(as.matrix(dat2),4)
plot(fanc.out1)
plot(fanc.out2)
fanc.out3 <- fanc(as.matrix(dat33),2)
plot(fanc.out3)
mod33.2 <- '
f1 =~ 1*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10
f1 =~ NA*x1 + x2 + x3 + x4 + x5 + 1*x6 + x7 + x8 + x9 + x10
'
sim.run33.2 <- cfa(mod33.2,dat33)
mod33.2 <- '
f1 =~ 1*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10
f2 =~ NA*x1 + x2 + x3 + x4 + x5 + 1*x6 + x7 + x8 + x9 + x10
'
sim.run33.2 <- cfa(mod33.2,dat33)
summary(sim.run33.2,fit=T)
extractMatrices(sim.run33.2)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05)
?cv_regsem
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05,Start=0)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05,Start=0,lambda.start=0.2)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05,Start="default",lambda.start=0.2)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="slsqp",
n.lambda=20,jump=0.05,Start="default",lambda.start=0.2)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="NlcOptim",
n.lambda=20,jump=0.05,Start="default",lambda.start=0.2)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05,Start="default",lambda.start=0.2)
summary(sim.run33.2,fit=T)
sim.run33.2 <- cfa(mod33.2,dat33,do.fit=F)
summary(sim.run33.2,fit=T)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05,Start="default",lambda.start=0.2)
plot(cv.out33.2)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05,Start="default",lambda.start=0)
plot(cv.out33.2)
cv.out33.2
?cv_regsem
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("TLI"))
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="TLI",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("TLI"))
plot(cv.out33.2)
cv.out33.2
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="ncp",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("ncp"))
plot(cv.out33.2)
cv.out33.2
plot(cv.out33.2)
plot(cv.out33.2,show.minimum="ncp")
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="Fmin",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("Fmin"))
plot(cv.out33.2,show.minimum="Fmin")
cv.out33.2
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="chisq",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("chisq"))
cv.out33.2
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="chisq",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("chisq","df"))
cv.out33.2
r.out <-regsem(sim.run33.2,type="lasso",pars_pen=c(1:18))
r.out
r.out$df
r.out <-regsem(sim.run33.2,type="lasso",pars_pen=c(1:18),lambda=0.2)
r.out$df
r.out <-regsem(sim.run33.2,type="lasso",pars_pen=c(1:18),lambda=0.2)
plot(cv.out33.2,show.minimum="Fmin")
library(regsem)
r.out <-regsem(sim.run33.2,type="lasso",pars_pen=c(1:18),lambda=0.2)
str(sim.run33.2)
sim.run33.2@Fit@test[[1]]$df
sim.run33.2 <- cfa(mod33.2,dat33,do.fit=F)
sim.run33.2 <- cfa(mod33.2,dat33,do.fit=T)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="chisq",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("chisq","df"))
r.out <-regsem(sim.run33.2,type="lasso",pars_pen=c(1:18),Start="default")
r.out
summary(r.out)
summary(sim.run33.2,fit=T)
sim.run33.2 <- cfa(mod33.2,dat33,do.fit=F)
?cv_regsem
library(regsem)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="chisq",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("chisq","df"))
library(regsem)
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="chisq",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("chisq","df"))
plot(cv.out33.2,show.minimum="Fmin")
plot(cv.out33.2,show.minimum="chisq")
?cv_regsem
cv.out33.2 = cv_regsem(sim.run33.2,type="lasso", pars_pen=c(1:18),optMethod="rsolnp",metric="chisq",fit.ret2="boot",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("chisq","df"))
plot(cv.out33.2,show.minimum="chisq")
cv.out33.2
cv.out33.2 = cv_regsem(sim.run33.2,type="alasso", pars_pen=c(1:18),optMethod="rsolnp",metric="chisq",fit.ret2="boot",
n.lambda=20,jump=0.05,Start="default",lambda.start=0,fit.ret = c("chisq","df"))
plot(cv.out33.2,show.minimum="chisq")
cv.out33.2
library(regsem)
library(regsem)
library(lavaan)
library(regsem);library(lavaan)
sim.mod <- "
f1 =~ 1*y1 + 1*y2 + 1*y3+ 1*y4 + 1*y5
f1 ~ 0*x1 + 0*x2 + 0*x3 + 0*x4 + 0*x5 + 0.2*x6 + 0.5*x7 0.8*x8"
dat.sim = simulateData(sim.mod,sample.nobs=200)
sim.mod <- "
f1 =~ 1*y1 + 1*y2 + 1*y3+ 1*y4 + 1*y5
f1 ~ 0*x1 + 0*x2 + 0*x3 + 0*x4 + 0*x5 + 0.2*x6 + 0.5*x7 + 0.8*x8"
dat.sim = simulateData(sim.mod,sample.nobs=200,seed=1)
run.mod <- "
f1 =~ NA*y1 + y2 + y3+ y4 + y5
f1 ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8
"
lav.out <- sem(run.mod,dat.sim)
summary(lav.out)
sim.mod <- "
f1 =~ 1*y1 + 1*y2 + 1*y3+ 1*y4 + 1*y5
f1 ~ 0*x1 + 0*x2 + 0*x3 + 0*x4 + 0*x5 + 0.2*x6 + 0.5*x7 + 0.8*x8
f1~~0.5*f1"
dat.sim = simulateData(sim.mod,sample.nobs=200,seed=1)
run.mod <- "
f1 =~ NA*y1 + y2 + y3+ y4 + y5
f1 ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8
f1~~1*f1
"
lav.out <- sem(run.mod,dat.sim)
summary(lav.out)
?cv_regsem
run.mod <- "
f1 =~ NA*y1 + y2 + y3+ y4 + y5
f1 ~ c1*x1 + c2*x2 + c3*x3 + c4*x4 + c5*x5 + c6*x6 + c7*x7 + c8*x8
f1~~1*f1
"
lav.out <- sem(run.mod,dat.sim)
summary(lav.out)
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
summary(reg.out)
plot(reg.out)
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.01,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
summary(reg.out)
plot(reg.out)
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.02,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
summary(reg.out)
plot(reg.out)
reg.out <- cv_regsem(lav.out,n.lambda=50,type="lasso",jump=0.02,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
summary(reg.out)
plot(reg.out)
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.03,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
summary(reg.out)
plot(reg.out)
?cv_regsem
reg.out2 <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.03,fit.ret2="boot",
metric="chisq",fit.ret="chisq",
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
summary(reg.out2)
plot(reg.out2)
sim.mod <- "
f1 =~ 1*y1 + 1*y2 + 1*y3+ 1*y4 + 1*y5
f1 ~ 0*x1 + 0*x2 + 0*x3 + 0*x4 + 0*x5 + 0.2*x6 + 0.5*x7 + 0.8*x8
f1~~0.5*f1"
dat.sim = simulateData(sim.mod,sample.nobs=200,seed=1234)
run.mod <- "
f1 =~ NA*y1 + y2 + y3+ y4 + y5
f1 ~ c1*x1 + c2*x2 + c3*x3 + c4*x4 + c5*x5 + c6*x6 + c7*x7 + c8*x8
f1~~1*f1
"
lav.out <- sem(run.mod,dat.sim)
summary(lav.out)
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.03,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
summary(reg.out)
plot(reg.out)
reg.out$final_pars
reg.out
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.03,fit.ret=c("BIC","AIC","EBIC.25"),
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
reg.out
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.03,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
library(semPaths)
install.packages("semPlot")
?semPaths
library(semPlot)
?semPaths
semPaths(lav.out,what="est")
lav.out <- sem(run.mod,dat.sim,fixed.x=T)
semPaths(lav.out,what="est")
semPaths(lav.out,fixedStyle=NULL)
semPaths(lav.out,fixedStyle=0)
lav.out <- lavaan(run.mod,dat.sim,fixed.x=T)
run.mod <- "
f1 =~ NA*y1 + y2 + y3+ y4 + y5
f1 ~ c1*x1 + c2*x2 + c3*x3 + c4*x4 + c5*x5 + c6*x6 + c7*x7 + c8*x8
f1~~1*f1
y1~~y1;y2~~y2;y3~~y3;y4~~y4;y5~~y5
"
lav.out <- lavaan(run.mod,dat.sim)
semPaths(lav.out,fixedStyle=0)
semPaths(lav.out)
lav.out <- lavaan(run.mod,dat.sim,fixed.x=FALSE)
run.mod <- "
f1 =~ NA*y1 + y2 + y3+ y4 + y5
f1 ~ c1*x1 + c2*x2 + c3*x3 + c4*x4 + c5*x5 + c6*x6 + c7*x7 + c8*x8
f1~~1*f1
"
lav.out <- sem(run.mod,dat.sim,fixed.x=FALSE)
summary(lav.out)
lav.out <- sem(run.mod,dat.sim,fixed.x=F)
summary(lav.out)
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.03,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
plot(reg.out)
reg.out$final_pars
reg.out
summary(lav.out)
#summary(lav.out)
summary(lav.out)$regressions
#summary(lav.out)
parameterestimates(lav.out)
#summary(lav.out)
parameterestimates(lav.out)[6:13,]
reg.out
reg.out$fits[,"conv"]
sum(reg.out$fits[,"conv"])
sum(reg.out$fits[,"conv"]==0)
reg.out <- cv_regsem(lav.out,n.lambda=40,type="lasso",jump=0.03,
pars_pen=c("c1","c2","c3","c4","c5","c6","c7","c8"))
sum(reg.out$fits[,"conv"]==0)
summary(reg.out)
reg.out$final_pars[1:13]
library(regsem)
devtools::build_vignettes()
devtools::build_vignettes("regsem")
devtools::build_vignettes()
devtools::use_vignettes("overview")
devtools::use_vignette("overview")
library(regsem)
library(regsem)
library(regsem)
library(regsem)
vignette("overview")
library(regsem)
vignette("regsem/overview")
vignette("overview")
vignette("Overview")
vignette("overview",regsem)
library(regsem)
vignette("regsem_overview")
vignette()
library(regsem)
library(regsem)
vignette("cv_regsem")
vignette
vignette()
library(regsem)
vignette(cv_regsem)
vignette("cv_regsem")
devtools::install(build_vignettes = TRUE)
vignette("cv_regsem")

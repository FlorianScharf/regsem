run.list[[3]] = paste(paste("f3"," ~ "), reg.list2)
run.list[[4]] = "f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6
f3 =~ y7 + y8 + y9
f1~~f2;f1~~f3;
f2~~f3;"
run.list = list()
run.list[[1]] = paste(paste("f1"," ~ "), reg.list2)
run.list[[2]] = paste(paste("f2"," ~ "), reg.list2)
run.list[[3]] = paste(paste("f3"," ~ "), reg.list2)
run.list[[4]] = "f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6
f3 =~ y7 + y8 + y9
f1~~f2;f1~~f3;
f2~~f3;"
run.mod = " "
for(i in 1:length(run.list)){
run.mod = paste(run.mod,run.list[[i]],sep="\n")
}
lav.out = lavaan::sem(lav.mod,dat)
lav.out = lavaan::sem(lav.mod,dat,meanstructure=TRUE)
extractMatrices(lav.out)$A
extractMatrices(lav.out)$A
reg.out = multi_optim(lav.out,lambda=0.1,pars_pen=c(7:156),type="ridge",
max.try=100,gradFun="none")
reg.out = multi_optim(lav.out,lambda=0,pars_pen=c(7:156),type="ridge",
max.try=100,gradFun="none")
summary(reg.out)
fitmeasures(lav.out)
summary(lav.out)
reg.out$fit
reg.out$out
reg.out
fitted(lav.out)
lav.out = lavaan::sem(lav.mod,dat,meanstructure=TRUE,fixed.x=TRUE)
fitmeasures(lav.out)
reg.out = multi_optim(lav.out,lambda=0,pars_pen=c(7:156),type="ridge",
max.try=100,gradFun="none")
xx = list()
for(i in 1:200){
xx[i] = paste("x", i, sep = "")
}
uu = list()
for(i in 1:length(xx)){
uu[i] = paste("0*",xx[i],sep="")
}
reg.list = paste(uu,collapse="+")
sim.list = list()
sim.list[[1]] = paste(paste("f1"," ~ "), reg.list)
sim.list[[2]] = paste(paste("f2"," ~ "), reg.list)
sim.list[[3]] = paste(paste("f3"," ~ "), reg.list)
sim.list[[4]] = "f1 =~ y1 + 0.8*y2 + 1.2*y3
f2 =~ y4 + 0.5*y5 + 1.5*y6
f3 =~ y7 + 0.1*y8 + 0.9*y9
f1~~0.5*f2;f1~~0.5*f3;
f2~~0.5*f3;"
pop.mod = " "
for(i in 1:length(sim.list)){
pop.mod = paste(pop.mod,sim.list[[i]],sep="\n")
}
dat <- simulateData(pop.mod,sample.nobs=500,fixed.x=TRUE)
reg.list2 = paste(xx,collapse="+")
run.list = list()
run.list[[1]] = paste(paste("f1"," ~ "), reg.list2)
run.list[[2]] = paste(paste("f2"," ~ "), reg.list2)
run.list[[3]] = paste(paste("f3"," ~ "), reg.list2)
run.list[[4]] = "f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6
f3 =~ y7 + y8 + y9
f1~~f2;f1~~f3;
f2~~f3;"
run.mod = " "
for(i in 1:length(run.list)){
run.mod = paste(run.mod,run.list[[i]],sep="\n")
}
lav.out = lavaan::sem(lav.mod,dat,meanstructure=TRUE,fixed.x=TRUE)
xx = list()
for(i in 1:200){
xx[i] = paste("x", i, sep = "")
}
uu = list()
for(i in 1:length(xx)){
uu[i] = paste("0*",xx[i],sep="")
}
reg.list = paste(uu,collapse="+")
sim.list = list()
sim.list[[1]] = paste(paste("f1"," ~ "), reg.list)
sim.list[[2]] = paste(paste("f2"," ~ "), reg.list)
sim.list[[3]] = paste(paste("f3"," ~ "), reg.list)
sim.list[[4]] = "f1 =~ y1 + 0.8*y2 + 1.2*y3
f2 =~ y4 + 0.5*y5 + 1.5*y6
f3 =~ y7 + 0.1*y8 + 0.9*y9
f1~~0.5*f2;f1~~0.5*f3;
f2~~0.5*f3;"
pop.mod = " "
for(i in 1:length(sim.list)){
pop.mod = paste(pop.mod,sim.list[[i]],sep="\n")
}
dat <- simulateData(pop.mod,sample.nobs=500,fixed.x=TRUE)
sim.list[[1]] = paste(paste("f1"," ~ "), reg.list)
sim.list[[2]] = paste(paste("f2"," ~ "), reg.list)
sim.list[[3]] = paste(paste("f3"," ~ "), reg.list)
sim.list[[4]] = "f1 =~ y1 + 0.8*y2 + 1.2*y3
f2 =~ y4 + 0.5*y5 + 1.5*y6
f3 =~ y7 + 0.1*y8 + 0.9*y9
f1~~0.5*f2;f1~~0.5*f3;
f2~~0.5*f3;"
sim.list[[5]] = "
f1 ~ 1*x1000 + 1*x1001 + 1*x1002 + 1*x1003 + 1*x1004 + 1*x1005
f2 ~ 1*x1000 + 1*x1001 + 1*x1002 + 1*x1003 + 1*x1004 + 1*x1005
f3 ~ 1*x1000 + 1*x1001 + 1*x1002 + 1*x1003 + 1*x1004 + 1*x1005
"
pop.mod = " "
for(i in 1:length(sim.list)){
pop.mod = paste(pop.mod,sim.list[[i]],sep="\n")
}
dat <- simulateData(pop.mod,sample.nobs=500,fixed.x=TRUE)
reg.list2 = paste(xx,collapse="+")
run.list = list()
run.list[[1]] = paste(paste("f1"," ~ "), reg.list2)
run.list[[2]] = paste(paste("f2"," ~ "), reg.list2)
run.list[[3]] = paste(paste("f3"," ~ "), reg.list2)
run.list[[4]] = "f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6
f3 =~ y7 + y8 + y9
f1~~f2;f1~~f3;
f2~~f3;"
run.list[[5]] = "
f1 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
f2 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
f3 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
"
run.mod = " "
for(i in 1:length(run.list)){
run.mod = paste(run.mod,run.list[[i]],sep="\n")
}
lav.out = lavaan::sem(lav.mod,dat,meanstructure=TRUE,fixed.x=TRUE)
xx = list()
for(i in 1:99){
xx[i] = paste("x", i, sep = "")
}
uu = list()
for(i in 1:length(xx)){
uu[i] = paste("0*",xx[i],sep="")
}
reg.list = paste(uu,collapse="+")
sim.list = list()
sim.list[[1]] = paste(paste("f1"," ~ "), reg.list)
sim.list[[2]] = paste(paste("f2"," ~ "), reg.list)
sim.list[[3]] = paste(paste("f3"," ~ "), reg.list)
sim.list[[4]] = "f1 =~ y1 + 0.8*y2 + 1.2*y3
f2 =~ y4 + 0.5*y5 + 1.5*y6
f3 =~ y7 + 0.1*y8 + 0.9*y9
f1~~0.5*f2;f1~~0.5*f3;
f2~~0.5*f3;"
sim.list[[5]] = "
f1 ~ 1*x1000 + 1*x1001 + 1*x1002 + 1*x1003 + 1*x1004 + 1*x1005
f2 ~ 1*x1000 + 1*x1001 + 1*x1002 + 1*x1003 + 1*x1004 + 1*x1005
f3 ~ 1*x1000 + 1*x1001 + 1*x1002 + 1*x1003 + 1*x1004 + 1*x1005
"
pop.mod = " "
for(i in 1:length(sim.list)){
pop.mod = paste(pop.mod,sim.list[[i]],sep="\n")
}
dat <- simulateData(pop.mod,sample.nobs=100,fixed.x=TRUE)
reg.list2 = paste(xx,collapse="+")
run.list = list()
run.list[[1]] = paste(paste("f1"," ~ "), reg.list2)
run.list[[2]] = paste(paste("f2"," ~ "), reg.list2)
run.list[[3]] = paste(paste("f3"," ~ "), reg.list2)
run.list[[4]] = "f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6
f3 =~ y7 + y8 + y9
f1~~f2;f1~~f3;
f2~~f3;"
run.list[[5]] = "
f1 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
f2 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
f3 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
"
run.mod = " "
for(i in 1:length(run.list)){
run.mod = paste(run.mod,run.list[[i]],sep="\n")
}
lav.out = lavaan::sem(lav.mod,dat,meanstructure=TRUE,fixed.x=TRUE)
summary(lav.out)
xx = list()
for(i in 1:200){
xx[i] = paste("x", i, sep = "")
}
uu = list()
for(i in 1:length(xx)){
uu[i] = paste("0*",xx[i],sep="")
}
reg.list = paste(uu,collapse="+")
reg.list
sim.list = list()
sim.list[[1]] = paste(paste("f1"," ~ "), reg.list)
sim.list[[2]] = paste(paste("f2"," ~ "), reg.list)
sim.list[[3]] = paste(paste("f3"," ~ "), reg.list)
sim.list[[4]] = "f1 =~ y1 + 0.8*y2 + 1.2*y3
f2 =~ y4 + 0.5*y5 + 1.5*y6
f3 =~ y7 + 0.1*y8 + 0.9*y9
f1~~0.5*f2;f1~~0.5*f3;
f2~~0.5*f3;"
sim.list[[5]] = "
f1 ~ 1*x1000 + 1*x1001 + 1*x1002 + 1*x1003 + 1*x1004 + 1*x1005
f2 ~ 1*x1000 + 1*x1001 + 1*x1002 + 1*x1003 + 1*x1004 + 1*x1005
f3 ~ 1*x1000 + 1*x1001 + 1*x1002 + 1*x1003 + 1*x1004 + 1*x1005
"
sim.list
pop.mod = " "
for(i in 1:length(sim.list)){
pop.mod = paste(pop.mod,sim.list[[i]],sep="\n")
}
pop.mod
dat <- simulateData(pop.mod,sample.nobs=100,fixed.x=TRUE)
xx
reg.list2 = paste(xx,collapse="+")
run.list = list()
run.list[[1]] = paste(paste("f1"," ~ "), reg.list2)
run.list[[2]] = paste(paste("f2"," ~ "), reg.list2)
run.list[[3]] = paste(paste("f3"," ~ "), reg.list2)
run.list[[4]] = "f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6
f3 =~ y7 + y8 + y9
f1~~f2;f1~~f3;
f2~~f3;"
run.list[[5]] = "
f1 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
f2 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
f3 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
"
run.mod = " "
for(i in 1:length(run.list)){
run.mod = paste(run.mod,run.list[[i]],sep="\n")
}
run.mod
lav.out = lavaan::sem(lav.mod,dat,meanstructure=TRUE,fixed.x=TRUE)
summary(lav.out)
lav.out = lavaan::sem(run.mod,dat,meanstructure=TRUE,fixed.x=TRUE)
extractMatrices(lav.out)$A
extractMatrices(lav.out)$A
xx = list()
for(i in 1:120){
xx[i] = paste("x", i, sep = "")
}
uu = list()
for(i in 1:length(xx)){
uu[i] = paste("0*",xx[i],sep="")
}
reg.list = paste(uu,collapse="+")
sim.list = list()
sim.list[[1]] = paste(paste("f1"," ~ "), reg.list)
sim.list[[2]] = paste(paste("f2"," ~ "), reg.list)
sim.list[[3]] = paste(paste("f3"," ~ "), reg.list)
sim.list[[4]] = "f1 =~ y1 + 0.8*y2 + 1.2*y3
f2 =~ y4 + 0.5*y5 + 1.5*y6
f3 =~ y7 + 0.1*y8 + 0.9*y9
f1~~0.5*f2;f1~~0.5*f3;
f2~~0.5*f3;"
sim.list[[5]] = "
f1 ~ 1*x1000 + 1*x1001 + 1*x1002 + 1*x1003 + 1*x1004 + 1*x1005
f2 ~ 1*x1000 + 1*x1001 + 1*x1002 + 1*x1003 + 1*x1004 + 1*x1005
f3 ~ 1*x1000 + 1*x1001 + 1*x1002 + 1*x1003 + 1*x1004 + 1*x1005
"
pop.mod = " "
for(i in 1:length(sim.list)){
pop.mod = paste(pop.mod,sim.list[[i]],sep="\n")
}
dat <- simulateData(pop.mod,sample.nobs=80,fixed.x=TRUE)
reg.list2 = paste(xx,collapse="+")
run.list = list()
run.list[[1]] = paste(paste("f1"," ~ "), reg.list2)
run.list[[2]] = paste(paste("f2"," ~ "), reg.list2)
run.list[[3]] = paste(paste("f3"," ~ "), reg.list2)
run.list[[4]] = "f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6
f3 =~ y7 + y8 + y9
f1~~f2;f1~~f3;
f2~~f3;"
run.list[[5]] = "
f1 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
f2 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
f3 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
"
run.mod = " "
for(i in 1:length(run.list)){
run.mod = paste(run.mod,run.list[[i]],sep="\n")
}
lav.out = lavaan::sem(run.mod,dat,meanstructure=TRUE,fixed.x=TRUE)
extractMatrices(lav.out)$A[c("f1","f2","f3"),]
run.list[[1]] = paste(paste("f1"," ~ "), reg.list2)
run.list[[2]] = paste(paste("f2"," ~ "), reg.list2)
run.list[[3]] = paste(paste("f3"," ~ "), reg.list2)
run.list[[4]] = "
f1 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
f2 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
f3 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
"
run.list[[5]] = "f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6
f3 =~ y7 + y8 + y9
f1~~f2;f1~~f3;
f2~~f3;"
run.mod = " "
for(i in 1:length(run.list)){
run.mod = paste(run.mod,run.list[[i]],sep="\n")
}
lav.out = lavaan::sem(run.mod,dat,meanstructure=TRUE,fixed.x=TRUE)
extractMatrices(lav.out)$A
extractMatrices(lav.out)$A[c("f1","f2","f3"),]
reg.out = multi_optim(lav.out,lambda=0.1,pars_pen=c(1:378),type="ridge",
max.try=100,gradFun="none")
reg.out = regsem(lav.out,lambda=0.05,pars_pen=c(1:378),type="lasso",gradFun="ram")
warnings()
reg.out = multi_optim(lav.out,lambda=0.05,pars_pen=c(1:378),type="ridge",
max.try=100,gradFun="ram")
reg.out = multi_optim(lav.out,lambda=0.3,pars_pen=c(1:378),type="lasso",
max.try=100,gradFun="ram")
reg.out = multi_optim(lav.out,lambda=0.3,pars_pen=c(1:378),type="lasso",
max.try=100,gradFun="ram")
library(lavaan)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
mod <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6
f ~ x7 + x8 + x9
f~~1*f
'
outt = cfa(mod,HS,meanstructure=TRUE)
system.time(cfa(mod,HS,meanstructure=TRUE))
summary(outt)
fit1 <- regsem(outt,lambda=0,type="none",data=HS,
gradFun="ram")
library(regsem)
fit1 <- regsem(outt,lambda=0,type="none"
gradFun="ram")
fit1 <- regsem(outt,lambda=0,type="none",gradFun="ram")
summary(fit1)
fitMeasures(outt)
fit2$Imp_Cov
fit1$Imp_Cov
fitted(outt)$cov
outt = cfa(mod,HS)
fitMeasures(outt)
fit_indices(fit1)
fit1 <- regsem(outt,lambda=0,type="lasso",gradFun="ram")
summary(fit1)
fit1 <- regsem(outt,lambda=0,type="lasso",gradFun="ram")
summary(fit1)
fit1 <- regsem(outt,lambda=0,type="none",gradFun="ram")
summary(fit1)
fitMeasures(outt)
fit1 <- regsem(outt,lambda=0,type="ridge",gradFun="ram")
summary(fit1)
fit1 <- regsem(outt,lambda=0,type="lasso",gradFun="ram")
summary(fit1)
outt = cfa(mod,HS,meanstructure=TRUE)
fit1 <- regsem(outt,lambda=0,type="lasso",gradFun="ram")
summary(fit1)
outt@SampleStats@mean[][[1]]
model=outt
extractMatrices(model)
extractMatrices(model)$A[,"1"]
extractMatrices(model)$A[,"1"] > 0
mm = extractMatrices(model)$A[,"1"]
names(mm[mm>0])
SampMean
SampMean <- model@SampleStats@mean[][[1]]
SampMean
model@SampleStats@mean
model@SampleStats
mm[mm>0]
mm>0
str(outt)
model@SampleStats@mean.x
model@SampleStats@mean.x[[1]][1]
model@SampleStats@mean.x[[1]]
match(SampMean,model@SampleStats@mean.x[[1]])
model@SampleStats
match(round(SampMean,8),round(model@SampleStats@mean.x[[1]],8))
round(model@SampleStats@mean.x[[1]],8)
match(round(SampMean,10),round(model@SampleStats@mean.x[[1]],10))
round(model@SampleStats@mean.x[[1]],10)
match(round(SampMean,15),round(model@SampleStats@mean.x[[1]],15))
SampMean <- model@SampleStats@mean[][[1]]
mm = extractMatrices(model)$A[,"1"]
mm
names(mm > 0)
mm >0
names(mm[mm > 0])
model@SampleStats
str(model)
match(names(mm[mm > 0]),model@Data@ov$name)
ss = match(names(mm[mm > 0]),model@Data@ov$name)
ss
SampMean[-c(ss)] = 0
SampMean
library(regsem)
fit1 <- regsem(outt,lambda=0,type="lasso",gradFun="ram")
summary(fit1)
outt = cfa(mod,HS,meanstructure=TRUE)
fit1 <- regsem(outt,lambda=0,type="lasso",gradFun="ram")
summary(fit1)
fitMeasures(outt)
outt = cfa(mod,HS)
fitMeasures(outt)
fit1 <- regsem(outt,lambda=0,type="lasso",gradFun="ram")
summary(fit1)
xx = list()
for(i in 1:100){
xx[i] = paste("x", i, sep = "")
}
uu = list()
for(i in 1:length(xx)){
uu[i] = paste("0*",xx[i],sep="")
}
reg.list = paste(uu,collapse="+")
sim.list = list()
sim.list[[1]] = paste(paste("f1"," ~ "), reg.list)
sim.list[[2]] = "f1 =~ y1 + 0.8*y2 + 1.2*y3 + 0.8*y4 + 0.5*y5 + 1.5*y6
"
sim.list[[3]] = "
f1 ~ 1*x1000 + 1*x1001 + 1*x1002 + 1*x1003 + 1*x1004 + 1*x1005
"
pop.mod = " "
for(i in 1:length(sim.list)){
pop.mod = paste(pop.mod,sim.list[[i]],sep="\n")
}
dat <- simulateData(pop.mod,sample.nobs=300,fixed.x=TRUE)
reg.list2 = paste(xx,collapse="+")
run.list = list()
run.list[[1]] = paste(paste("f1"," ~ "), reg.list2)
run.list[[2]] = "
f1 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
"
run.list[[3]] = "f1 =~ y1 + y2 + y3 + y4 + y5 + y6
"
run.mod = " "
for(i in 1:length(run.list)){
run.mod = paste(run.mod,run.list[[i]],sep="\n")
}
#42 minutes
system.time(lav.out <- lavaan::sem(run.mod,dat,meanstructure=TRUE))
fitmeasures(lav.out)
reg.out = multi_optim(lav.out,lambda=0.0,type="none",#pars_pen=c(1:106),
max.try=100,gradFun="ram",max.iter = 1000000)
4000/60
library(lavaan)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
mod <- '
f ~ x7 + x8 + x9
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6
f~~1*f
'
outt = cfa(mod,HS)
system.time(cfa(mod,HS,meanstructure=TRUE))
summary(outt)
fitMeasures(outt)
fit1 <- regsem(outt,lambda=0,type="lasso",gradFun="ram")
summary(fit1)
system.time(cfa(mod,HS))
fitMeasures(outt)
fit1 <- regsem(outt,lambda=0,type="lasso",gradFun="ram")
summary(fit1)
xx = list()
for(i in 1:100){
xx[i] = paste("x", i, sep = "")
}
uu = list()
for(i in 1:length(xx)){
uu[i] = paste("0*",xx[i],sep="")
}
reg.list = paste(uu,collapse="+")
sim.list = list()
sim.list[[1]] = "f1 =~ y1 + 0.8*y2 + 1.2*y3 + 0.8*y4 + 0.5*y5 + 1.5*y6
"
sim.list[[2]] = "
f1 ~ 1*x1000 + 1*x1001 + 1*x1002 + 1*x1003 + 1*x1004 + 1*x1005
"
sim.list[[3]] = paste(paste("f1"," ~ "), reg.list)
pop.mod = " "
for(i in 1:length(sim.list)){
pop.mod = paste(pop.mod,sim.list[[i]],sep="\n")
}
dat <- simulateData(pop.mod,sample.nobs=300,fixed.x=TRUE)
reg.list2 = paste(xx,collapse="+")
run.list = list()
run.list[[1]] = "f1 =~ y1 + y2 + y3 + y4 + y5 + y6
"
run.list[[2]] = paste(paste("f1"," ~ "), reg.list2)
run.list[[3]] = "
f1 ~ x1000 + x1001 + x1002 + x1003 + x1004 + x1005
"
run.mod = " "
for(i in 1:length(run.list)){
run.mod = paste(run.mod,run.list[[i]],sep="\n")
}
#42 minutes
system.time(lav.out <- lavaan::sem(run.mod,dat,meanstructure=TRUE))
summary(lav.out)
fitmeasures(lav.out)
#fitted(lav.out)
# find the parameter numbers
extractMatrices(lav.out)$A[c("f1"),]
# only lasso working at this time
# ridge with gradeFun="none" is super slow
reg.out = multi_optim(lav.out,lambda=0.0,type="none",#pars_pen=c(1:106),
max.try=100,gradFun="ram",max.iter = 1000000)
summary(reg.out)
summary(lav.out)
fitmeasures(lav.out)

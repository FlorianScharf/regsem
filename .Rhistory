dv.class = "gaussian"
}else{
dv.class == "binomial"
}
#b's
b.cv.lasso = cv.glmnet(mediators.mat,dv.mat,alpha=alpha,family=dv.class,
penalty.factor=c(rep(1,ncol(data)-2),0))
b.fit.lasso = glmnet(mediators.mat, dv.mat, alpha=alpha,
penalty.factor=c(rep(1,ncol(data)-2),0))
b.coefs = coef(b.fit.lasso, s=b.cv.lasso$lambda.min)[-1,1]
#b.coefs = b.coefs[-length(b.coefs)]  ??????? Why -- Need to include?
res$b.coefs <- b.coefs
# a
a.cv.lasso = a.fit.lasso = vector("list",ncol(mediators.mat))
for(i in 1:ncol(mediators.mat)){
if(is.numeric(mediators.mat[,i])){
med.class="gaussian"
}else if(is.integer(mediators.mat[,i])){
med.class = "gaussian"
}else{
med.class == "binomial"
}
a.cv.lasso[[i]] = cv.glmnet(as.matrix(cbind(rnorm(nrow(data),1,0.0001),iv.mat)), mediators.mat[,i],
alpha=alpha, family=med.class,intercept=F,penalty.factor=c(0,1))
a.fit.lasso[[i]] = glmnet(as.matrix(cbind(rnorm(nrow(data),1,0.0001),iv.mat)), mediators.mat[,i],
alpha=alpha, family=med.class,intercept=F,penalty.factor=c(0,1))
}
a.coefs = numeric(length(b.coefs))
for(i in 1:length(a.coefs)){
if(!is.null(a.cv.lasso[[i]])){
a.coefs[i] = coef(a.fit.lasso[[i]], s=a.cv.lasso[[i]]$lambda.min)[-1,1][2]
}
}
names(a.coefs) = mediators
res$a.coefs <- a.coefs
# indirect
res$indirect = a.coefs * b.coefs
# add class for summary function
# return list
res
}
xmed_cat(data,iv,mediators,dv)
xmed_cat <- function(data,iv,mediators,dv,type="lasso"){
library(glmnet) # remove
res <- list()
data <- Data
if(type=="lasso"){
alpha=1
}else if(type=="ridge"){
alpha=0
}else if(type=="enet"){
alpha=0.5
}
iv.mat <- as.matrix(Data[,iv])
mediators.mat <- as.matrix(data[,mediators])
dv.mat <- as.matrix(data[,dv])
if(sum(is.na(iv.mat)) > 0 |
sum(is.na(mediators.mat)) > 0 |
sum(is.na(dv.mat)) > 0){
stop("Missing values are not allowed")
}
if(is.numeric(dv.mat)){
dv.class="gaussian"
}else if(is.integer(dv.mat)){
dv.class = "gaussian"
}else{
dv.class == "binomial"
}
#b's
b.cv.lasso = cv.glmnet(mediators.mat,dv.mat,alpha=alpha,family=dv.class,
penalty.factor=c(rep(1,ncol(data)-2),0))
b.fit.lasso = glmnet(mediators.mat, dv.mat, alpha=alpha,
penalty.factor=c(rep(1,ncol(data)-2),0))
b.coefs = coef(b.fit.lasso, s=b.cv.lasso$lambda.min)[-1,1]
#b.coefs = b.coefs[-length(b.coefs)]  ??????? Why -- Need to include?
res$b.coefs <- round(b.coefs,3)
# a
a.cv.lasso = a.fit.lasso = vector("list",ncol(mediators.mat))
for(i in 1:ncol(mediators.mat)){
if(is.numeric(mediators.mat[,i])){
med.class="gaussian"
}else if(is.integer(mediators.mat[,i])){
med.class = "gaussian"
}else{
med.class == "binomial"
}
a.cv.lasso[[i]] = cv.glmnet(as.matrix(cbind(rnorm(nrow(data),1,0.0001),iv.mat)), mediators.mat[,i],
alpha=alpha, family=med.class,intercept=F,penalty.factor=c(0,1))
a.fit.lasso[[i]] = glmnet(as.matrix(cbind(rnorm(nrow(data),1,0.0001),iv.mat)), mediators.mat[,i],
alpha=alpha, family=med.class,intercept=F,penalty.factor=c(0,1))
}
a.coefs = numeric(length(b.coefs))
for(i in 1:length(a.coefs)){
if(!is.null(a.cv.lasso[[i]])){
a.coefs[i] = coef(a.fit.lasso[[i]], s=a.cv.lasso[[i]]$lambda.min)[-1,1][2]
}
}
names(a.coefs) = mediators
res$a.coefs <- round(a.coefs,3)
# indirect
res$indirect = round(a.coefs * b.coefs,3)
# add class for summary function
# return list
res
}
xmed_cat(data,iv,mediators,dv)
xmed_cat <- function(data,iv,mediators,dv,type="lasso"){
library(glmnet) # remove
res <- list()
data <- Data
if(type=="lasso"){
alpha=1
}else if(type=="ridge"){
alpha=0
}else if(type=="enet"){
alpha=0.5
}
iv.mat <- as.matrix(Data[,iv])
mediators.mat <- as.matrix(data[,mediators])
dv.mat <- as.matrix(data[,dv])
if(sum(is.na(iv.mat)) > 0 |
sum(is.na(mediators.mat)) > 0 |
sum(is.na(dv.mat)) > 0){
stop("Missing values are not allowed")
}
if(is.numeric(dv.mat)){
dv.class="gaussian"
}else if(is.integer(dv.mat)){
dv.class = "gaussian"
}else{
dv.class == "binomial"
}
#b's
b.cv.lasso = cv.glmnet(mediators.mat,dv.mat,alpha=alpha,family=dv.class,
penalty.factor=c(rep(1,ncol(data)-2),0))
b.fit.lasso = glmnet(mediators.mat, dv.mat, alpha=alpha,
penalty.factor=c(rep(1,ncol(data)-2),0))
b.coefs = coef(b.fit.lasso, s=b.cv.lasso$lambda.min)[-1,1]
#b.coefs = b.coefs[-length(b.coefs)]  ??????? Why -- Need to include?
res$b.coefs <- round(b.coefs,3)
# a
a.cv.lasso = a.fit.lasso = vector("list",ncol(mediators.mat))
for(i in 1:ncol(mediators.mat)){
if(is.numeric(mediators.mat[,i])){
med.class="gaussian"
}else if(is.integer(mediators.mat[,i])){
med.class = "gaussian"
}else{
med.class == "binomial"
}
a.cv.lasso[[i]] = cv.glmnet(as.matrix(cbind(rnorm(nrow(data),1,0.0001),iv.mat)), mediators.mat[,i],
alpha=alpha, family=med.class,intercept=F,penalty.factor=c(0,1))
a.fit.lasso[[i]] = glmnet(as.matrix(cbind(rnorm(nrow(data),1,0.0001),iv.mat)), mediators.mat[,i],
alpha=alpha, family=med.class,intercept=F,penalty.factor=c(0,1))
}
a.coefs = numeric(length(b.coefs))
for(i in 1:length(a.coefs)){
if(!is.null(a.cv.lasso[[i]])){
a.coefs[i] = coef(a.fit.lasso[[i]], s=a.cv.lasso[[i]]$lambda.min)[-1,1][2]
}
}
names(a.coefs) = mediators
res$a.coefs <- round(a.coefs,3)
# indirect
res$indirect = round(a.coefs * b.coefs,3)
res$important <- names(res$indirect[res$indirect != 0])
# add class for summary function
# return list
res
}
xmed_cat(data,iv,mediators,dv)
100/14
library(regsem)
nobs=200
iv <- rbinom(nobs,1,0.5)
med1 <- 0.5*iv + rnorm(nobs)
med2 <- 0.2*iv + rnorm(nobs)
med3 <- 0*iv + rnorm(nobs)
med1 <- as.numeric(scale(med1));med2 <- as.numeric(scale(med2));med3 <- as.numeric(scale(med3))
h1 <- 1*med1 + rnorm(nobs);h2 <- 1*med1 + rnorm(nobs);h3 <- 1*med1 + rnorm(nobs);
g1 <- 1*med2 + rnorm(nobs);g2 <- 1*med2 + rnorm(nobs);g3 <- 1*med2 + rnorm(nobs);
k1 <- 1*med3 + rnorm(nobs);k2 <- 1*med3 + rnorm(nobs);k3 <- 1*med3 + rnorm(nobs);
dv <- 0.5*med1 + 0.2*med2 + 0*med3 + 0.5*iv + rnorm(nobs)
dat <- cbind(iv,h1,h2,h3,g1,g2,g3,k1,k2,k3,med1,med2,med3,dv)
#dat[,2:14] <- scale(dat[,2:14])
lav.mod <-"
med1 =~ h1 + h2 + h3
med2 =~ g1 + g2 + g3
med3 =~ k1 + k2 + k3
#med1~~1*med1;med2~~1*med2;med3~~1*med3
med1 ~ iv
med2 ~ iv
med3 ~ iv
dv ~ med1 + med2 + med3 + iv
"
lav.out <- sem(lav.mod,dat)
summary(lav.out)
extractMatrices(lav.out)["A"]
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=TRUE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
plot(cv.out)
system.time(cv.out2 <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=FALSE,hessFun="none",n.lambda=30,jump=.1,step=.1))
plot(cv.out2)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=TRUE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02))
plot(cv.out)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=TRUE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02))
system.time(cv.out2 <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=FALSE,hessFun="none",n.lambda=30,jump=.1,step=.2))
cv.out2
plot(cv.out2)
library(regsem)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=TRUE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02))
plot(cv.out)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=TRUE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=TRUE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02))
plot(cv.out)
system.time(cv.out2 <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=FALSE,hessFun="none",n.lambda=30,jump=.1,step=.2))
plot(cv.out2)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=TRUE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=TRUE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02))
plot(cv.out)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
plot(cv.out)
plot(cv.out2)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
plot(cv.out)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
plot(cv.out)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
plot(cv.out)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
plot(cv.out)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
plot(cv.out)
plot(cv.out2)
plot(cv.out)
library(regsem)
library(regsem)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
nobs=200
iv <- rbinom(nobs,1,0.5)
med1 <- 0.5*iv + rnorm(nobs)
med2 <- 0.2*iv + rnorm(nobs)
med3 <- 0*iv + rnorm(nobs)
med1 <- as.numeric(scale(med1));med2 <- as.numeric(scale(med2));med3 <- as.numeric(scale(med3))
h1 <- 1*med1 + rnorm(nobs);h2 <- 1*med1 + rnorm(nobs);h3 <- 1*med1 + rnorm(nobs);
g1 <- 1*med2 + rnorm(nobs);g2 <- 1*med2 + rnorm(nobs);g3 <- 1*med2 + rnorm(nobs);
k1 <- 1*med3 + rnorm(nobs);k2 <- 1*med3 + rnorm(nobs);k3 <- 1*med3 + rnorm(nobs);
dv <- 0.5*med1 + 0.2*med2 + 0*med3 + 0.5*iv + rnorm(nobs)
dat <- cbind(iv,h1,h2,h3,g1,g2,g3,k1,k2,k3,med1,med2,med3,dv)
#dat[,2:14] <- scale(dat[,2:14])
lav.mod <-"
med1 =~ h1 + h2 + h3
med2 =~ g1 + g2 + g3
med3 =~ k1 + k2 + k3
#med1~~1*med1;med2~~1*med2;med3~~1*med3
med1 ~ iv
med2 ~ iv
med3 ~ iv
dv ~ med1 + med2 + med3 + iv
"
lav.out <- sem(lav.mod,dat)
summary(lav.out)
extractMatrices(lav.out)["A"]
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
?.Call
library(regsem)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
?rcpp_quasi_calc
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
compileAttributes()
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
library(regsem)
regsem::rcpp_quasi_calc(diag(4),1:4,1:4,1:4,diag(4))
library(regsem)
regsem::rcpp_quasi_calc(diag(4),1:4,1:4,1:4,diag(4))
regsem::regsem_rcpp_quasi_calc(diag(4),1:4,1:4,1:4,diag(4))
regsem::rcpp_quasi_calc(diag(4),1:4,1:4,1:4,diag(4))
regsem::rcpp_quasi_calc(diag(4),1:4,1:4,1:4,diag(4))
regsem::regsem_rcpp_quasi_calc(diag(4),1:4,1:4,1:4,diag(4))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
regsem::rcpp_quasi_calc(diag(4),1:4,1:4,1:4,diag(4))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
library(regsem)
tools::package_native_routine_registration_skeleton("regsem")
tools::package_native_routine_registration_skeleton(".")
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
traceback()
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))

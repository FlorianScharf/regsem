install.packages("~/GitHub/regsem_0.7.0.tar.gz", repos = NULL, type = "source")
tools::package_native_routine_registration_skeleton(".")
library("tools", lib.loc="C:/Program Files/R/R-3.3.2/library")
tools::package_native_routine_registration_skeleton(".")
tools::package_native_routine_registration_skeleton("regsem")
install.packages("lavaan")
install.packages("lavaan")
install.packages("Rcpp")
install.packages("RcppArmadillo")
library(regsem)
install.packages("roxygen2")
library(regsem)
install.packages("snowfall")
install.packages("GA")
install.packages("rgenoud")
install.packages("Rsolnp")
install.packages("optimx")
install.packages("semPlot")
install.packages("colorspace")
tools::package_native_routine_registration_skeleton(".")
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
mod <- '
f =~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
'
#' # Recommended to specify meanstructure in lavaan
outt = cfa(mod,HS,meanstructure=TRUE)
#'
fit1 <- regsem(outt,lambda=0.05,type="lasso",pars_pen=c(1:2,6:8))
summary(fit1)
library(regsem)
library(regsem)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
mod <- '
f =~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
'
#' # Recommended to specify meanstructure in lavaan
outt = cfa(mod,HS,meanstructure=TRUE)
#'
fit1 <- regsem(outt,lambda=0.05,type="lasso",pars_pen=c(1:2,6:8))
summary(fit1)
library(regsem)
library(regsem)
library(regsem)
library(regsem)
install.packages("nlme")
install.packages("rpart")
library(regsem)
library(lavaan)
library(semPlot)
library(semTools)
#HS <- HolzingerSwineford1939
#mod <- "
#f1 =~ x1 + x2 + x3 + x4 + x5 + x6
#f2 =~ x7 + x8 + x9 + x4 + x5 + x6
#"
#out <- cfa(mod,HS)
#semPaths(out)
sim.mod <- "
i =~ 1*x1 + 1*x2 + 1*x3 + 1*x4
s =~ 0*x1 + 1*x2 + 2*x3 + 3*x4
i ~ 1*c1 + .2*c2 + 0*c3 + 0*c4 + 0*c5 + 0*c6 + 0*c7 + 0*c8+ 0*c9+ 0*c10
s ~ 1*c1 + .2*c2 + 0*c3 + 0*c4 + 0*c5 + 0*c6 + 0*c7 + 0*c8+ 0*c9+ 0*c10"
dat <- simulateData(sim.mod,model.type="growth",sample.nobs=80,seed=1234)
mod1 <- "
i =~ 1*x1 + 1*x2 + 1*x3 + 1*x4
s =~ x1 + 1*x2 + 2*x3 + 3*x4
i ~ c1 + c2 + c3 + c4 + c5 + c6 + c7 + c8+ c9+ c10
s ~ c1 + c2 + c3 + c4 + c5 + c6 + c7 + c8+ c9+ c10
"
out <- growth(mod1,dat,fixed.x=T)
summary(out)
fitmeasures(out)
semPaths(out, whatLabels="est",intercepts=FALSE,residuals=TRUE,exoCov=FALSE)
library(regsem)
extractMatrices(out)$A
reg.out <- cv_regsem(out,pars_pen=c(1:20),type="lasso",n.lambda=40,mult.start=FALSE,jump=.01)
reg.out
install.packages("xtable")
xtable(reg.out[[2]])
library(regsem);library(xtable)
xtable(reg.out[[2]])
best.pars <- matrix(NA,4,20)
reg.out2
best.pars <- matrix(NA,4,20)
reg.out[[2]][,"bic"]
reg.out[[2]]
reg.out[[2]][,"BIC"]
min(reg.out[[2]][,"BIC"])
best.pars <- matrix(NA,5,20)
xtable[21,2] <- min(reg.out[[2]][,"BIC"])
best.pars <- matrix(NA,5,21)
best.pars <- matrix(NA,21,5)
xtable[21,2] <- min(reg.out[[2]][,"BIC"])
min(reg.out[[2]][,"BIC"])
best.pars[21,2] <- min(reg.out[[2]][,"BIC"])
min(reg.out[[2]][,"BIC"])
which(reg.out[[2]][,"BIC"] ==min(reg.out[[2]][,"BIC"]))
loc1 <- which(reg.out[[2]][,"BIC"] ==min(reg.out[[2]][,"BIC"]))
best.pars[1:20,2] <- reg.out[[1]][loc1,1:20]
reg.out2 <- cv_regsem(out,pars_pen=c(1:20),type="alasso",n.lambda=40,mult.start=FALSE,jump=.001)
best.pars[21,3] <- min(reg.out2[[2]][,"BIC"])
loc2 <- which(reg.out2[[2]][,"BIC"] ==min(reg.out2[[2]][,"BIC"]))
loc2
reg.out2 <- cv_regsem(out,pars_pen=c(1:20),type="alasso",n.lambda=40,mult.start=FALSE,jump=.003)
best.pars[21,3] <- min(reg.out2[[2]][,"BIC"])
loc2 <- which(reg.out2[[2]][,"BIC"] ==min(reg.out2[[2]][,"BIC"]))
loc2
best.pars[1:20,3] <- reg.out2[[1]][loc2,1:20]
reg.out3 <- cv_regsem(out,pars_pen=c(1:20),type="scad",n.lambda=40,mult.start=FALSE,jump=.05)
best.pars[21,4] <- min(reg.out3[[2]][,"BIC"])
loc3 <- which(reg.out3[[2]][,"BIC"] ==min(reg.out3[[2]][,"BIC"]))
loc3
best.pars[1:20,4] <- reg.out3[[1]][loc3,1:20]
reg.out4 <- cv_regsem(out,pars_pen=c(1:20),type="mcp",n.lambda=40,mult.start=FALSE,jump=.2)
best.pars[21,5] <- min(reg.out4[[2]][,"BIC"])
loc4 <- which(reg.out4[[2]][,"BIC"] ==min(reg.out4[[2]][,"BIC"]))
loc4
best.pars[1:20,5] <- reg.out4[[1]][loc4,1:20]
best.pars[21,1] <- reg.out[[2]][1,"BIC"]
best.pars[1:20,1] <- reg.out[[1]][1,1:20]
best.pars
colnames(best.pars) <- c("ML","lasso","alasso","SCAD","MCP")
colnames(best.pars) <- c("ML","lasso","alasso","SCAD","MCP")
rownames(best.pars) <- c("c1 -> i","c2 -> i","c3 -> i","c4 -> i","c5 -> i","c6 -> i","c7 -> i","c8 -> i","c9 -> i","c10 -> i",
"c1 -> s","c2 -> s","c3 -> s","c4 -> s","c5 -> s","c6 -> s","c7 -> s","c8 -> s","c9 -> s","c10 -> s","BIC")
best.pars
xtable(best.pars)
library(regsem)
setwd("C:/Users/RJacobucci/Documents/GitHub/mimic_regsem")
library(lavaan)
library(qgraph)
library(semPlot)
library(psych)
library(regsem)
library(lmtest)
library(ggplot2)
library(reshape2)
library(semTools)
#Here one reads in the data - As I can't share it yet I created a dummy dataset with same means and covs.
#Parameter estimates are identical down to the third decimal so for now we can just use the dummy data (for final paper just rerun with the 'real' - only difference would be skewness and nonlinearities but those are negligible)
#datacamcan<-read.csv('CamCAN_cogneuro_data_Ross2017-03-16.csv')  #Reads in real data
datacamcan<-read.csv('schmamcandat2017-03-16.csv')                #Reads in simulated data based on MVRnorm
colnames(datacamcan)[3:50]<-print(paste('gm',1:48,sep=''))        #Unify grey matter labels for easier syntax
colnames(datacamcan)[51:98]<-print(paste('fa',1:48,sep=''))       #Unify grey matter labels for easier syntax
datacamcan$simpred1<-datacamcan$VSTMcolour_K_ss3+rnorm(708,.5,.5) #add dummy predictors for reference
datacamcan$simpred2<-datacamcan$VSTMcolour_K_ss3+rnorm(708,.5,.5) #add dummy predictors for reference
#Below the syntax to fit normal ML and regsem MIMIC models to predict a single LV (vstmlv) measured by three observables
#Syntax below is to use white matter (fa) and grey matter (gm) to predict a single LV.
#Total R^2 for FA predicting vstmlv is ~38% (versus 8% with noise), and ~27% for gm
#Most exciting would be to include both of course
#############Predicting VSTM: White matter (48 ROIS)
vstmCFA_WM<-'
vstmlv=~VSTMcolour_K_ss2+VSTMcolour_K_ss3+VSTMcolour_K_ss4
vstmlv~fa 1 +fa 2 +fa 3 +fa 4 +fa 5 +fa 6 +fa 7 +fa 8 +fa 9 +fa 10 +fa 11 +fa 12 +fa 13 +fa 14 +fa 15 +fa 16 +fa 17 +fa 18 +fa 19 +fa 20 +fa 21 +fa 22 +fa 23 +fa 24 +fa 25 +fa 26 +fa 27 +fa 28 +fa 29 +fa 30 +fa 31 +fa 32 +fa 33 +fa 34 +fa 35 +fa 36 +fa 37 +fa 38 +fa 39 +fa 40 +fa 41 +fa 42 +fa 43 +fa 44 +fa 45 +fa 46 +fa 47 +fa 48
'
fitvstm_WM <- cfa(vstmCFA_WM, data=datacamcan, estimator='mlr',missing='fiml')
summary(fitvstm_WM, fit.measures=TRUE, standardized=TRUE, rsquare=TRUE)
#regsem
lav.out_WM<-try(lavaan::sem(vstmCFA_WM,datacamcan,fixed.x=TRUE),silent=TRUE)
A <- extractMatrices(lav.out_WM)$A
A[A!=0]
colnames(A)
vstmCFA_WM_red<-'
vstmlv=~VSTMcolour_K_ss2+VSTMcolour_K_ss3+VSTMcolour_K_ss4
vstmlv~fa 1 +fa 2 +fa 3 +fa 4 +fa 5 +fa 6 +fa 7 +fa 8 +fa 9 +fa 10
1~vstmlv
'
fitvstmCFA_WM_red <- cfa(vstmCFA_WM_red, data=datacamcan, estimator='mlr',missing='fiml')
vstmCFA_WM_red<-'
vstmlv=~VSTMcolour_K_ss2+VSTMcolour_K_ss3+VSTMcolour_K_ss4
vstmlv~fa 1 +fa 2 +fa 3 +fa 4 +fa 5 +fa 6 +fa 7 +fa 8 +fa 9 +fa 10
vstmlv~1
'
fitvstmCFA_WM_red <- cfa(vstmCFA_WM_red, data=datacamcan, estimator='mlr',missing='fiml')
?cfa
summary(fitvstmCFA_WM_red, fit.measures=TRUE, standardized=TRUE, rsquare=TRUE)
fitvstmCFA_WM_red <- cfa(vstmCFA_WM_red, data=datacamcan, estimator='mlr',missing='fiml',meanstructure=FALSE)
summary(fitvstmCFA_WM_red, fit.measures=TRUE, standardized=TRUE, rsquare=TRUE)
vstmCFA_WM_red<-'
vstmlv=~VSTMcolour_K_ss2+VSTMcolour_K_ss3+VSTMcolour_K_ss4
vstmlv~fa 1 +fa 2 +fa 3 +fa 4 +fa 5 +fa 6 +fa 7 +fa 8 +fa 9 +fa 10
'
fitvstmCFA_WM_red <- cfa(vstmCFA_WM_red, data=datacamcan, estimator='mlr',missing='fiml',meanstructure=TRUE)
lav.out_WM_red<-try(lavaan::sem(fitvstmCFA_WM_red,datacamcan,fixed.x=TRUE,meanstructure=TRUE),silent=TRUE)
summary(lav.out_WM)
vstmCFA_WM<-'
vstmlv=~VSTMcolour_K_ss2+VSTMcolour_K_ss3+VSTMcolour_K_ss4
vstmlv~fa 1 +fa 2 +fa 3 +fa 4 +fa 5 +fa 6 +fa 7 +fa 8 +fa 9 +fa 10 +fa 11 +fa 12 +fa 13 +fa 14 +fa 15 +fa 16 +fa 17 +fa 18 +fa 19 +fa 20 +fa 21 +fa 22 +fa 23 +fa 24 +fa 25 +fa 26 +fa 27 +fa 28 +fa 29 +fa 30 +fa 31 +fa 32 +fa 33 +fa 34 +fa 35 +fa 36 +fa 37 +fa 38 +fa 39 +fa 40 +fa 41 +fa 42 +fa 43 +fa 44 +fa 45 +fa 46 +fa 47 +fa 48
vstmlv~1
'
lav.out_WM<-try(lavaan::sem(vstmCFA_WM,datacamcan,fixed.x=TRUE,meanstructure=FALSE),silent=TRUE)
summary(lav.out_WM)
vstmCFA_WM<-'
vstmlv=~VSTMcolour_K_ss2+VSTMcolour_K_ss3+VSTMcolour_K_ss4
vstmlv~fa 1 +fa 2 +fa 3 +fa 4 +fa 5 +fa 6 +fa 7 +fa 8 +fa 9 +fa 10 +fa 11 +fa 12 +fa 13 +fa 14 +fa 15 +fa 16 +fa 17 +fa 18 +fa 19 +fa 20 +fa 21 +fa 22 +fa 23 +fa 24 +fa 25 +fa 26 +fa 27 +fa 28 +fa 29 +fa 30 +fa 31 +fa 32 +fa 33 +fa 34 +fa 35 +fa 36 +fa 37 +fa 38 +fa 39 +fa 40 +fa 41 +fa 42 +fa 43 +fa 44 +fa 45 +fa 46 +fa 47 +fa 48
'
lav.out_WM<-try(lavaan::sem(vstmCFA_WM,datacamcan,fixed.x=TRUE,meanstructure=TRUE),silent=TRUE)
summary(lav.out_WM)
A <- extractMatrices(lav.out_WM)$A
A[A!=0]
A
reg.out <- multi_optim(lav.out_WM,max.try=1,type="lasso",lambda=0,#pars_pen=c(40:50),
step.ratio=FALSE,step=.01,full=TRUE,max.iter=150);summary(reg.out)
?multi_optim
reg.out <- multi_optim(lav.out_WM,max.try=1,type="lasso",lambda=0,optMethod="coord_desc",gradFun="ram",#pars_pen=c(40:50),
step.ratio=FALSE,step=.1,full=TRUE,max.iter=150);summary(reg.out)
reg.out <- multi_optim(lav.out_WM,max.try=1,type="lasso",lambda=0,optMethod="coord_desc",gradFun="ram",#pars_pen=c(40:50),
step.ratio=FALSE,step=1,full=TRUE,max.iter=150);summary(reg.out)
reg.out <- multi_optim(lav.out_WM,max.try=1,type="lasso",lambda=0,optMethod="coord_desc",gradFun="ram",#pars_pen=c(40:50),
step.ratio=FALSE,step=.5,full=TRUE,max.iter=150);summary(reg.out)
library(regsem)
reg.out <- multi_optim(lav.out_WM,max.try=1,type="lasso",lambda=0,optMethod="coord_desc",gradFun="ram",#pars_pen=c(40:50),
step.ratio=FALSE,step=.5,full=TRUE,max.iter=10);summary(reg.out)
reg.out <- multi_optim(lav.out_WM,max.try=1,type="none",lambda=0,optMethod="coord_desc",gradFun="ram",#pars_pen=c(40:50),
step.ratio=FALSE,step=.5,full=TRUE,max.iter=10);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="none",lambda=0,optMethod="coord_desc",gradFun="ram",#pars_pen=c(40:50),
step.ratio=FALSE,step=.5,full=TRUE,max.iter=10);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0,optMethod="coord_desc",gradFun="ram",#pars_pen=c(40:50),
step.ratio=FALSE,step=.5,full=TRUE,max.iter=10);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="enet",lambda=0,optMethod="coord_desc",gradFun="ram",#pars_pen=c(40:50),
step.ratio=FALSE,step=.5,full=TRUE,max.iter=10);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="scad",lambda=0,optMethod="coord_desc",gradFun="ram",#pars_pen=c(40:50),
step.ratio=FALSE,step=.5,full=TRUE,max.iter=10);summary(reg.out)
library(regsem)
?regsem
reg.out <- regsem(lav.out_WM,type="scad",lambda=0,optMethod="coord_desc",gradFun="ram",#pars_pen=c(40:50),
step.ratio=FALSE,step=.5,full=TRUE,max.iter=10);summary(reg.out)
library(regsem)
reg.out <- regsem(lav.out_WM,type="scad",lambda=0,optMethod="coord_desc",gradFun="ram",#pars_pen=c(40:50),
step.ratio=FALSE,step=.5,full=TRUE,max.iter=10);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="scad",lambda=0,optMethod="coord_desc",gradFun="numDeriv",#pars_pen=c(40:50),
step.ratio=FALSE,step=.5,full=TRUE,max.iter=10);summary(reg.out)
lav.out_WM<-try(lavaan::sem(vstmCFA_WM,datacamcan,fixed.x=FALSE,meanstructure=TRUE),silent=TRUE)
lav.out_WM<-try(lavaan::sem(vstmCFA_WM,datacamcan,fixed.x=TRUE,meanstructure=TRUE),silent=TRUE)
reg.out <- regsem(lav.out_WM,type="scad",lambda=0,optMethod="coord_desc",gradFun="numDeriv",#pars_pen=c(40:50),
step.ratio=FALSE,step=.01,full=TRUE,max.iter=2);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0,optMethod="coord_desc",gradFun="numDeriv",#pars_pen=c(40:50),
step.ratio=FALSE,step=.01,full=TRUE,max.iter=2);summary(reg.out)
library(regsem)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0,optMethod="coord_desc",gradFun="numDeriv",#pars_pen=c(40:50),
step.ratio=FALSE,step=.01,full=FALSE,max.iter=2);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0,optMethod="coord_desc",gradFun="numDeriv",#pars_pen=c(40:50),
step.ratio=TRUE,step=.01,full=FALSE,max.iter=2);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0,optMethod="coord_desc",gradFun="numDeriv",#pars_pen=c(40:50),
step.ratio=TRUE,step=1,full=FALSE,max.iter=2);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0,optMethod="coord_desc",gradFun="numDeriv",#pars_pen=c(40:50),
step.ratio=TRUE,step=.5,full=FALSE,max.iter=5);summary(reg.out)
library(regsem)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0,optMethod="coord_desc",gradFun="numDeriv",#pars_pen=c(40:50),
step.ratio=TRUE,step=.5,full=FALSE,max.iter=5);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0,optMethod="coord_desc",gradFun="numDeriv",#pars_pen=c(40:50),
step.ratio=TRUE,step=.5,full=FALSE,max.iter=30);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0,optMethod="coord_desc",gradFun="numDeriv",#pars_pen=c(40:50),
step.ratio=TRUE,step=.1,full=FALSE,max.iter=30);summary(reg.out)
library(regsem)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0,optMethod="coord_desc",gradFun="numDeriv",#pars_pen=c(40:50),
step.ratio=TRUE,step=.1,full=FALSE,max.iter=30);summary(reg.out)
extractMatrices(lav.out_WM)
library(regsem)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0,optMethod="coord_desc",gradFun="numDeriv",#pars_pen=c(40:50),
step.ratio=TRUE,step=.1,full=FALSE,max.iter=30);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="none",lambda=0,optMethod="coord_desc",gradFun="numDeriv",#pars_pen=c(40:50),
step.ratio=TRUE,step=.1,full=FALSE,max.iter=30);summary(reg.out)
lav.out_WM<-try(lavaan::sem(vstmCFA_WM,datacamcan,fixed.x=TRUE,meanstructure=FALSE),silent=TRUE)
summary(lav.out_WM)
reg.out <- regsem(lav.out_WM,type="none",lambda=0,optMethod="coord_desc",gradFun="numDeriv",#pars_pen=c(40:50),
step.ratio=TRUE,step=.1,full=FALSE,max.iter=30);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.01,optMethod="coord_desc",gradFun="ram",#pars_pen=c(40:50),
step.ratio=FALSE,step=.1,full=TRUE,max.iter=30);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.01,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=FALSE,step=.1,full=TRUE,max.iter=30);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.01,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=.1,full=FALSE,max.iter=30);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.01,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=FALSE,step=.1,full=FALSE,max.iter=30);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.01,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=1,full=FALSE,max.iter=30);summary(reg.out)
library(regsem)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.01,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=1,full=FALSE,max.iter=30);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.01,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=.1,full=FALSE,max.iter=30);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.01,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=.1,full=TRUE,max.iter=30);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.01,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=.5,full=TRUE,max.iter=30);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.01,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=.5,full=TRUE,max.iter=50);summary(reg.out)
reg.out <- multi_optim(lav.out_WM,type="lasso",max.try=10,lambda=0.01,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=.5,full=TRUE,max.iter=50);summary(reg.out)
reg.out <- multi_optim(lav.out_WM,type="lasso",max.try=10,lambda=0.01,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=.5,full=TRUE,max.iter=50,alpha.inc=TRUE);summary(reg.out)
reg.out <- multi_optim(lav.out_WM,type="lasso",max.try=10,lambda=0.0001,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=.5,full=TRUE,max.iter=50,alpha.inc=TRUE);summary(reg.out)
reg.out <- multi_optim(lav.out_WM,type="lasso",max.try=10,lambda=0.0001,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=.1,full=TRUE,max.iter=50,alpha.inc=FALSE);summary(reg.out)
reg.out <- multi_optim(lav.out_WM,type="lasso",max.try=10,lambda=0.0001,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=.1,full=TRUE,max.iter=50,momentum=TRUE);summary(reg.out)
reg.out <- multi_optim(lav.out_WM,type="lasso",max.try=10,lambda=0.0001,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=FALSE,step=.1,full=TRUE,max.iter=50,momentum=TRUE);summary(reg.out)
reg.out <- multi_optim(lav.out_WM,type="lasso",max.try=10,lambda=0.0001,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=FALSE,step=.01,full=TRUE,max.iter=50,momentum=TRUE);summary(reg.out)
reg.out <- multi_optim(lav.out_WM,type="lasso",max.try=10,lambda=0.0001,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=FALSE,step=.01,full=TRUE,max.iter=50,tol=1e-3,momentum=TRUE);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.0001,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=FALSE,step=.01,full=TRUE,max.iter=50,tol=1e-3,momentum=TRUE);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.0001,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=FALSE,step=.01,full=TRUE,max.iter=50,tol=1e-3);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.0001,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=FALSE,step=.01,full=TRUE,max.iter=100,tol=1e-4);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.0001,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=.01,full=FALSE,max.iter=100,tol=1e-4);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.0001,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=.01,full=TRUE,max.iter=100,tol=1e-4,solver=TRUE);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.01,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=.01,full=TRUE,max.iter=100,tol=1e-4,solver=TRUE);summary(reg.out)
reg.out <- regsem(lav.out_WM,type="lasso",lambda=0.001,optMethod="coord_desc",gradFun="ram",pars_pen=c(3:50),
step.ratio=TRUE,step=.01,full=TRUE,max.iter=100,tol=1e-4,solver=TRUE);summary(reg.out)
A
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=5,jump=0.001,mult.start=FALSE,max.iter=100,solver=TRUE,type="lasso",pars_pen=c(3:50))
reg.out1_WM
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=50,jump=0.001,mult.start=FALSE,max.iter=100,solver=TRUE,type="lasso",pars_pen=c(3:50))
reg.out1_WM
fitmeasures(lav.out_WM)
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=50,jump=0.001,mult.start=TRUE,max.iter=200,solver=TRUE,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=50,jump=0.001,mult.start=TRUE,max.iter=200,step=.01,solver=TRUE,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=50,jump=0.001,mult.start=TRUE,max.iter=200,momentum=TRUE,solver=TRUE,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=50,jump=0.001,mult.start=TRUE,max.iter=200,momentum=TRUE,solver=TRUE,tol=1e-4,,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=50,jump=0.001,mult.start=TRUE,max.iter=200,alpha.inc=TRUE,solver=TRUE,tol=1e-4,,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=50,jump=0.001,mult.start=TRUE,max.iter=200,alpha.inc=TRUE,solver=TRUE,tol=1e-3,,type="lasso",pars_pen=c(3:50))
reg.out1_WM
reg.out1_WM[,28]
reg.out1_WM[[1]][28,]
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=25,jump=0.002,mult.start=TRUE,max.iter=200,solver=TRUE,tol=1e-3,step=.01,type="lasso",pars_pen=c(3:50))
reg.out1_WM
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=0.002,mult.start=TRUE,max.iter=100,solver=TRUE,tol=1e-3,step=.01,type="lasso",pars_pen=c(3:50))
reg.out1_WM
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=0.002,mult.start=TRUE,max.iter=100,solver=TRUE,tol=1e-3,step=.01,type="enet",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=0.005,mult.start=TRUE,max.iter=100,solver=TRUE,tol=1e-3,step=.1,type="enet",pars_pen=c(3:50))
reg.out1_WM
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=0.002,mult.start=TRUE,max.iter=100,solver=TRUE,tol=1e-3,step=.01,type="enet",pars_pen=c(3:50))
reg.out1_WM
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=0.002,mult.start=TRUE,max.iter=100,solver=TRUE,tol=1e-3,step=.01,type="scad",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=0.002,mult.start=TRUE,max.iter=100,solver=TRUE,tol=1e-4,step=.01,type="lasso",pars_pen=c(3:50))
reg.out1_WM
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=20,jump=0.002,mult.start=TRUE,max.iter=100,solver=TRUE,tol=1e-4,step=.01,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=50,jump=0.001,mult.start=TRUE,max.iter=100,solver=TRUE,tol=1e-4,step=.01,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=50,jump=0.001,mult.start=TRUE,
max.iter=100,solver=TRUE,tol=1e-4,step=.01,type="lasso",pars_pen=c(3:50))
library(regsem)
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=50,jump=0.001,mult.start=TRUE,
max.iter=100,solver=TRUE,tol=1e-4,step=.01,type="lasso",pars_pen=c(3:50))
library(regsem)
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=23,jump=0.001,mult.start=TRUE,
max.iter=100,solver=TRUE,tol=1e-4,step=.1,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=23,jump=0.001,mult.start=TRUE,
max.iter=25,solver=TRUE,tol=1e-4,step=.1,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=23,jump=0.001,mult.start=TRUE,
max.iter=25,solver=TRUE,tol=1e-4,step=.1,type="lasso",pars_pen=c(3:50))
library(regsem)
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=23,jump=0.001,mult.start=TRUE,
max.iter=25,solver=TRUE,tol=1e-4,step=.1,type="lasso",pars_pen=c(3:50))
library(regsem)
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=23,jump=0.001,mult.start=TRUE,
max.iter=25,solver=TRUE,tol=1e-4,step=.1,type="lasso",pars_pen=c(3:50))
library(regsem)
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=23,jump=0.001,mult.start=TRUE,
max.iter=25,solver=TRUE,tol=1e-4,step=.1,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=23,jump=0.001,mult.start=TRUE,
max.iter=25,solver=TRUE,tol=1e-4,step=.5,type="lasso",pars_pen=c(3:50))
reg.out1_WM
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=50,jump=0.0005,mult.start=TRUE,
max.iter=25,solver=TRUE,tol=1e-4,step=.5,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=0.0005,mult.start=TRUE,
max.iter=25,solver=TRUE,tol=1e-4,step=.5,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.0005,mult.start=TRUE,
max.iter=25,solver=TRUE,tol=1e-4,step=.5,type="lasso",pars_pen=c(3:50))
reg.out1_WM
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.001,mult.start=TRUE,
max.iter=25,solver=TRUE,tol=1e-5,step=.1,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.001,mult.start=TRUE,
max.iter=25,solver=TRUE,tol=1e-5,step=.01,type="lasso",pars_pen=c(3:50))
?nlminb
library(regsem)
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.001,mult.start=TRUE,
max.iter=25,solver=TRUE,tol=1e-5,step=.01,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.001,mult.start=TRUE,
max.iter=25,solver=TRUE,tol=1e-5,alpha.inc=TRUE,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.001,mult.start=FALSE,
max.iter=25,solver=TRUE,tol=1e-5,alpha.inc=TRUE,type="lasso",pars_pen=c(3:50))
reg.out1_WM
library(regsem)
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.001,mult.start=FALSE,
max.iter=25,solver=TRUE,tol=1e-5,alpha.inc=TRUE,type="lasso",pars_pen=c(3:50))
warnings()
library(regsem)
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.001,mult.start=FALSE,
max.iter=25,solver=TRUE,tol=1e-5,alpha.inc=TRUE,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.01,mult.start=FALSE,
max.iter=50,solver=TRUE,tol=1e-5,alpha.inc=TRUE,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.01,mult.start=FALSE,
max.iter=150,solver=TRUE,tol=1e-5,alpha.inc=TRUE,type="lasso",pars_pen=c(3:50))
reg.out1_WM
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.005,mult.start=FALSE,
max.iter=150,solver=TRUE,tol=1e-5,alpha.inc=TRUE,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.005,mult.start=FALSE,
max.iter=150,solver=TRUE,tol=1e-3,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.004,mult.start=FALSE,
max.iter=150,solver=TRUE,tol=1e-3,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.004,mult.start=FALSE,
max.iter=50,solver=TRUE,tol=1e-3,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.004,mult.start=FALSE,
max.iter=50,solver=TRUE,tol=1e-2,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.002,mult.start=FALSE,
max.iter=50,solver=TRUE,tol=1e-2,type="lasso",pars_pen=c(3:50))
reg.out1_WM
reg.out1_WM[[1]]
plot_cv(reg.out1_WM)
plot_cv(reg.out1_WM,c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.006,mult.start=FALSE,
max.iter=50,solver=TRUE,tol=1e-2,type="lasso",pars_pen=c(3:50))
plot_cv(reg.out1_WM,c(3:50))
reg.out1_WM
library(regsem)
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.006,mult.start=FALSE,
max.iter=50,solver=TRUE,tol=1e-4,type="lasso",pars_pen=c(3:50))
library(regsem)
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=15,jump=0.006,mult.start=FALSE,
max.iter=50,solver=TRUE,tol=1e-4,type="lasso",pars_pen=c(3:50))
reg.out1_WM
plot_cv(reg.out1_WM,c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=30,jump=0.006,mult.start=FALSE,
max.iter=50,solver=TRUE,tol=1e-4,type="lasso",pars_pen=c(3:50))
reg.out1_WM
plot_cv(reg.out1_WM,c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=30,jump=0.006,mult.start=FALSE,
max.iter=150,solver=TRUE,tol=1e-4,type="lasso",pars_pen=c(3:50))
reg.out1_WM
plot_cv(reg.out1_WM,c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=30,jump=0.002,mult.start=FALSE,
max.iter=150,solver=TRUE,tol=1e-4,type="lasso",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=30,jump=0.002,mult.start=FALSE,
max.iter=150,solver=TRUE,tol=1e-4,type="scad",pars_pen=c(3:50))
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=8,jump=0.002,mult.start=FALSE,
max.iter=150,solver=TRUE,tol=1e-4,type="scad",pars_pen=c(3:50))
reg.out1_WM
Xs <- seq(-2,2,.01)
plot(Xs,abs(Xs),"l",xlab="X",ylab="P(x)",ylim=c(0,1.2),lwd=2)
# see breheny
library(DiceKriging)
SCAD(.1,.1)
out <- rep(NA,length(Xs))
for(i in 1:length(Xs)){
out[i] <- SCAD(Xs[i],.5)
}
lines(Xs,out,"l",lty=2,lwd=2)
mcp <- function(x,lambda){
x <- abs(x)
a <- 3.7
if(x <= a*lambda){
lambda*x - (x**2)/(2*a)
}else{
.5*a*(lambda**2)
}
}
out2 <- rep(NA,length(Xs))
for(i in 1:length(Xs)){
out2[i] <- mcp(Xs[i],.5)
}
lines(Xs,out2,"l",lty=3,lwd=2)
abline(a=0,b=0)
legend("bottomright", c("Lasso","SCAD","MCP"),lty=c(1,2,3), lwd=2,cex=.8)
install.packages("DiceKriging")
Xs <- seq(-2,2,.01)
plot(Xs,abs(Xs),"l",xlab="X",ylab="P(x)",ylim=c(0,1.2),lwd=2)
# see breheny
library(DiceKriging)
SCAD(.1,.1)
out <- rep(NA,length(Xs))
for(i in 1:length(Xs)){
out[i] <- SCAD(Xs[i],.5)
}
lines(Xs,out,"l",lty=2,lwd=2)
mcp <- function(x,lambda){
x <- abs(x)
a <- 3.7
if(x <= a*lambda){
lambda*x - (x**2)/(2*a)
}else{
.5*a*(lambda**2)
}
}
out2 <- rep(NA,length(Xs))
for(i in 1:length(Xs)){
out2[i] <- mcp(Xs[i],.5)
}
lines(Xs,out2,"l",lty=3,lwd=2)
abline(a=0,b=0)
legend("bottomright", c("Lasso","SCAD","MCP"),lty=c(1,2,3), lwd=2,cex=.8)
mod.out <- regsem(out, type="lasso", pars_pen=c(1:9),lambda=0.2)
library(regsem)
library(regsem)
library(regsem)
101000/12
3616-2781

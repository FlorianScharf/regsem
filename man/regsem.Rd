% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/regsem.R
\name{regsem}
\alias{regsem}
\title{The main function that ties together and runs the models.}
\usage{
regsem(model, lambda = 0, alpha = 0, type = "none", data = NULL,
  start.matrix = F, optMethod = "nlminb", gradFun = "timo",
  hessFun = "none", parallel = "no", Start = "default", rstarts = "no",
  subOpt = "nlminb", longMod = F, optNL = "NLOPT_LN_NEWUOA_BOUND",
  fac.type = "cfa", matrices = "extractMatrices", pars_pen = NULL,
  diff_par = NULL, LB = -Inf, UB = Inf, calc = "normal", tol = 1e-10,
  max.iter = 2000, missing = "listwise")
}
\arguments{
\item{model}{lavaan output object.}

\item{lambda}{penalty value.}

\item{alpha}{mixture for elastic net.}

\item{type}{penalty type.}

\item{data}{Optional dataframe. Only required for missing="fiml".}

\item{start.matrix}{matrix of starting values.}

\item{optMethod}{solver to use.}

\item{gradFun}{gradient function to use.}

\item{hessFun}{hessian function to use.}

\item{parallel}{whether to parallelize the processes?}

\item{Start}{type of starting values to use.}

\item{rstarts}{use random starts?}

\item{subOpt}{type of optimization to use in the optimx package.}

\item{longMod}{longitudinal model?}

\item{optNL}{type of optimization to use in the NLopt package.}

\item{fac.type}{using cfa or efa type of model.}

\item{matrices}{function to use for extracting RAM matrices.}

\item{pars_pen}{parameter indicators to penalize.}

\item{diff_par}{parameter values to deviate from.}

\item{LB}{lower bound vector.}

\item{UB}{upper bound vector}

\item{calc}{type of calc function to use with means or not.}

\item{tol}{absolute tolerance for convergence.}

\item{max.iter}{max iterations for optimization.}

\item{missing}{How to handle missing data. Current options are "listwise"
and "fiml".}
}
\description{
The main function that ties together and runs the models.
}
\examples{
library(lavaan)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
mod <- '
f =~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
'
outt = cfa(mod,HS)

fit1 <- regsem(outt,lambda=0.1,type="lasso",optMethod="nlminb",
               gradFun="timo")
}
\keyword{calc}
\keyword{optim}


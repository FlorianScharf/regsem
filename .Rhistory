"
run.list[[2]] = paste(paste("f1"," ~ "), reg.list2)
run.list[[3]] = "f1~~1*f1"
run.mod = " "
for(k in 1:length(run.list)){
run.mod = paste(run.mod,run.list[[k]],sep="\n")
}
dat <- simulateData(pop.mod,sample.nobs=150,seed=1,model.type="lavaan")
dat2 <- dat
dat2[,7:106] <- scale(dat[,7:106])
lav.out <- try(lavaan::sem(run.mod,dat2,fixed.x=TRUE),silent=TRUE)
#lav.out <- try(lavaan::sem(run.mod,dat2,fixed.x=FALSE),silent=TRUE)
summary(lav.out,fit=TRUE)
#run.mod2 <- gsub("x100",paste(round(coef(lav.out)[106],3),"*x100"),run.mod)
#lav.out2 <- try(lavaan::sem(run.mod2,dat2,fixed.x=TRUE),silent=TRUE)
mat <- extractMatrices(lav.out)
# options(max.print=10000000)
system.time(enet.sim <- cv_regsem(lav.out,n.lambda=1,jump=.01,tol=1e-4,type="enet",
pars_pen=c(7:106),max.iter=400,multi.iter=3,quasi=TRUE,hessFun="numDeriv",
fit.ret=c("BIC","rmsea","AIC","CAIC","EBIC.5","EBIC.25"),
fit.ret2="train",mult.start=TRUE))
library(regsem)
system.time(enet.sim <- cv_regsem(lav.out,n.lambda=1,jump=.01,tol=1e-4,type="enet",
pars_pen=c(7:106),max.iter=400,multi.iter=3,quasi=TRUE,hessFun="numDeriv",
fit.ret=c("BIC","rmsea","AIC","CAIC","EBIC.5","EBIC.25"),
fit.ret2="train",mult.start=TRUE))
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),quasi=TRUE,line.search=FALSE,hessFun="numDeriv")
out.cv
summary(fit.lds,standardized=TRUE,fit=TRUE)
library(regsem)
system.time(enet.sim <- cv_regsem(lav.out,n.lambda=1,jump=.01,tol=1e-4,type="enet",
pars_pen=c(7:106),max.iter=400,multi.iter=3,quasi=TRUE,hessFun="numDeriv",
fit.ret=c("BIC","rmsea","AIC","CAIC","EBIC.5","EBIC.25"),
fit.ret2="train",mult.start=TRUE))
enet.sim
#lav.out <- try(lavaan::sem(run.mod,dat2,fixed.x=FALSE),silent=TRUE)
summary(lav.out,fit=TRUE)
system.time(enet.sim <- cv_regsem(lav.out,n.lambda=5,jump=.01,tol=1e-4,type="enet",
pars_pen=c(7:106),max.iter=400,multi.iter=3,quasi=TRUE,hessFun="numDeriv",
fit.ret=c("BIC","rmsea","AIC","CAIC","EBIC.5","EBIC.25"),
fit.ret2="train",mult.start=TRUE))
plot(enet.sim)
enet.sim
system.time(enet.sim <- cv_regsem(lav.out,n.lambda=10,jump=.01,tol=1e-4,type="enet",
pars_pen=c(7:106),max.iter=400,multi.iter=3,quasi=TRUE,hessFun="numDeriv",
fit.ret=c("BIC","rmsea","AIC","CAIC","EBIC.5","EBIC.25"),
fit.ret2="train",mult.start=TRUE))
library(regsem)
system.time(enet.sim <- cv_regsem(lav.out,n.lambda=10,jump=.01,tol=1e-4,type="enet",
pars_pen=c(7:106),max.iter=400,multi.iter=3,quasi=TRUE,hessFun="numDeriv",
fit.ret=c("BIC","rmsea","AIC","CAIC","EBIC.5","EBIC.25"),
fit.ret2="train",mult.start=TRUE))
library(regsem)
system.time(enet.sim <- cv_regsem(lav.out,n.lambda=10,jump=.01,tol=1e-4,type="enet",
pars_pen=c(7:106),max.iter=400,multi.iter=3,quasi=TRUE,hessFun="numDeriv",
fit.ret=c("BIC","rmsea","AIC","CAIC","EBIC.5","EBIC.25"),
fit.ret2="train",mult.start=TRUE))
plot(enet.sim)
system.time(enet.sim <- cv_regsem(lav.out,n.lambda=10,jump=.01,tol=1e-4,type="lasso",
pars_pen=c(7:106),max.iter=400,multi.iter=3,quasi=TRUE,hessFun="numDeriv",
fit.ret=c("BIC","rmsea","AIC","CAIC","EBIC.5","EBIC.25"),
fit.ret2="train",mult.start=TRUE))
plot(enet.sim)
enet.sim
wisc <- read.table("/Users/Ross/Documents/Github/random_code/wisc4vpe.dat")
wisc <- read.table("C:/Users/rjacobuc/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
wisc <- read.table("C:/Users/jacobucc/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
names(wisc)<- c("V1","V2","V4","V6","P1","P2","P4", "P6", "Moeducat")
library(regsem)
lds_1 <- "
#latent variables
lV1 =~ 1*V1
lV2 =~ 1*V2
lV4 =~ 1*V4
lV6 =~ 1*V6
#autoregressions
lV2 ~ 1*lV1; lV4 ~ 1*lV2; lV6 ~ 1*lV4
#change - delta; d
dV1 =~ 1*lV2; dV2 =~ 1*lV4; dV3 =~ 1*lV6
#intercept and slope
inV =~ 1*lV1;
#slope =~ alpha*dV1 + alpha*dV2 + alpha*dV3
# match lgm
slope =~ 1*dV1 + 2*dV2 + 2*dV3
#slope =~ 1.17*dV1 + alpha1*dV2 + alpha2*dV3
#manifest means @0
V1 ~ 0*1; V2 ~0*1; V4 ~ 0*1; V6 ~ 0*1
#slope and intercept means
slope ~ 1;
inV ~ 1;
#Latent variances and covariance
slope ~~ slope;
inV ~~ inV;
slope ~~ inV;
#means and vars @0
lV1 ~ 0*1; lV2 ~0*1; lV4 ~ 0*1; lV6 ~ 0*1
dV1 ~ 0*1; dV2 ~0*1; dV3 ~ 0*1
lV1 ~~ 0*lV1; lV2 ~~ 0*lV2; lV4 ~~ 0*lV4; lV6 ~~ 0*lV6
dV1 ~~ 0*dV1; dV2 ~~ 0*dV2; dV3 ~~ 0*dV3
#auVo-proportions
dV1 ~ beta*lV1; dV2 ~ beta*lV2; dV3 ~ beta*lV4;
#residuals equal
V1 ~~ resid*V1; V2 ~~ resid*V2; V4 ~~ resid*V4; V6 ~~ resid*V6;
"
fit.lds <- lavaan(lds_1, data=wisc)
summary(fit.lds,standardized=TRUE,fit=TRUE)
# problem with mult.start=TRUE
#################################### check out gradient ###########################33333
#mats = extractMatrices(fit.lds)
#model = fit.lds
#mm = extractMatrices(model)$A[,"1"]
#SampMean <- model@SampleStats@mean[][[1]]
#ss = match(names(mm[mm > 0]),model@Data@ov$name)
#SampMean[-c(ss)] = 0
#SampCov <- model@SampleStats@cov[][[1]]
#SampCov2 <- SampCov + SampMean%*%t(SampMean)
# try changing size of SampCov
#SampCov3 = cbind(SampCov2,SampMean)
#SampCov = rbind(SampCov3,append(SampMean,1))
#ImpCov = RAMmult(mats$parameters,mats$A,mats$S,mats$F,mats$A_fixed,mats$A_est,mats$S_fixed,mats$S_est)
#round(rcpp_grad_ram(mats$parameters, ImpCov$ImpCov, SampCov, mats$A_est, mats$S_est,
#              mats$A, mats$S, mats$F, lambda=0, type2=0, pen_vec=0, diff_par=0),3)
#m3 = fitted(fit.lds)$mean
#cov3 = fitted(fit.lds)$cov
#cov3 + m3 %*% t(m3)
#inspect(fit.lds,what="gradient")
######################################################################################
#starts <- c(1,19.8,.2,1.5,19.4,3,12.8)
#out <- regsem(fit.lds,optMethod="nlminb",gradFun="ram",tol=1e-5,type="ridge",lambda=.1,step=.1,pars_pen=3)
#summary(out)
# tol=1e-3 gets us to .324
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),quasi=TRUE,line.search=FALSE,hessFun="numDeriv")
out.cv
plot(out.cv)
plot(out.cv,3)
out.cv$parameters
out.cv$pars_pen
out.cv$parameters[,NULL]
out.cv$parameters[,3]
library(regsem)
plot(out.cv)
plot(enet.sim)
library(regsem)
plot(out.cv)
library(regsem)
plot(out.cv)
library(regsem)
plot(out.cv)
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
out.cv
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
plot(out.cv)
plot(enet.sim)
enet.sim
?cv_regsem
?regsem
library(regsem)
system.time(enet.sim <- cv_regsem(lav.out,n.lambda=10,jump=.01,tol=1e-4,type="enet",alpha=0.2,
pars_pen=c(7:106),max.iter=400,multi.iter=3,quasi=TRUE,hessFun="numDeriv",
fit.ret=c("BIC","rmsea","AIC","CAIC","EBIC.5","EBIC.25"),
fit.ret2="train",mult.start=TRUE))
system.time(enet.sim <- cv_regsem(lav.out,n.lambda=10,jump=.01,tol=1e-6,type="enet",alpha=0.2,
pars_pen=c(7:106),max.iter=400,multi.iter=3,prerun=TRUE,
fit.ret=c("BIC","rmsea","AIC","CAIC","EBIC.5","EBIC.25"),
fit.ret2="train",mult.start=TRUE))
plot(enet.sim)
enet.sim
library(regsem)
setwd("C:/Users/RJacobucci/Documents/GitHub/mimic_regsem")
setwd("C:/Users/Ross/Documents/GitHub/mimic_regsem")
setwd("C:/Users/rjacobuc/Documents/GitHub/mimic_regsem")
library(lavaan)
library(qgraph)
library(semPlot)
library(psych)
library(regsem)
library(lmtest)
library(ggplot2)
library(reshape2)
library(semTools)
#Here one reads in the data - As I can't share it yet I created a dummy dataset with same means and covs.
#Parameter estimates are identical down to the third decimal so for now we can just use the dummy data (for final paper just rerun with the 'real' - only difference would be skewness and nonlinearities but those are negligible)
datacamcan<-read.csv('CamCAN_cogneuro_data_Ross2017-03-16.csv')  #Reads in real data
#datacamcan<-read.csv('schmamcandat2017-03-16.csv')
colnames(datacamcan)[2:49]<-print(paste('gm',1:48,sep=''))        #Unify grey matter labels for easier syntax
colnames(datacamcan)[50:97]<-print(paste('fa',1:48,sep=''))       #Unify grey matter labels for easier syntax
datacamcan$simpred1<-datacamcan$VSTMcolour_K_ss3+rnorm(708,.5,.5) #add dummy predictors for reference
datacamcan$simpred2<-datacamcan$VSTMcolour_K_ss3+rnorm(708,.5,.5) #add dummy predictors for reference
#Below the syntax to fit normal ML and regsem MIMIC models to predict a single LV (vstmlv) measured by three observables
#Syntax below is to use white matter (fa) and grey matter (gm) to predict a single LV.
#Total R^2 for FA predicting vstmlv is ~38% (versus 8% with noise), and ~27% for gm
#Most exciting would be to include both of course
# standardize variables
X = as.matrix(datacamcan[,100:102])
cov = as.matrix(datacamcan[,2:97])
data.std <- data.frame(scale(datacamcan[,c(2:97,100:102)]))
library(corrplot)
?corrplot
corrplot(cor(data.std,use="complete.obs"))
#############Predicting VSTM: White matter (48 ROIS)
vstmCFA_WM<-'
vstmlv=~VSTMcolour_K_ss2+VSTMcolour_K_ss3+VSTMcolour_K_ss4
vstmlv~fa 1 +fa 2 +fa 3 +fa 4 +fa 5 +fa 6 +fa 7 +fa 8 +fa 9 +fa 10 +fa 11 +fa 12 +fa 13 +fa 14 +fa 15 +fa 16 +fa 17 +fa 18 +fa 19 +fa 20 +fa 21 +fa 22 +fa 23 +fa 24 +fa 25 +fa 26 +fa 27 +fa 28 +fa 29 +fa 30 +fa 31 +fa 32 +fa 33 +fa 34 +fa 35 +fa 36 +fa 37 +fa 38 +fa 39 +fa 40 +fa 41 +fa 42 +fa 43 +fa 44 +fa 45 +fa 46 +fa 47 +fa 48 +
gm 1 +gm 2 +gm 3 +gm 4 +gm 5 +gm 6 +gm 7 +gm 8 +gm 9 +gm 10 +gm 11 +gm 12 +gm 13 +gm 14 +gm 15 +gm 16 +gm 17 +gm 18 +gm 19 +gm 20 +gm 21 +gm 22 +gm 23 +gm 24 +gm 25 +gm 26 +gm 27 +gm 28 +gm 29 +gm 30 +gm 31 +gm 32 +gm 33 +gm 34 +gm 35 +gm 36 +gm 37 +gm 38 +gm 39 +gm 40 +gm 41 +gm 42 +gm 43 +gm 44 +gm 45 +gm 46 +gm 47 +gm 48
'
fitvstm_WM <- cfa(vstmCFA_WM, data=data.std, estimator='mlr',missing='fiml')
summary(fitvstm_WM, fit.measures=TRUE, standardized=TRUE, rsquare=TRUE)
#regsem
lav.out_WM<-try(lavaan::sem(vstmCFA_WM,data.std,fixed.x=TRUE,meanstructure=FALSE),silent=TRUE)
A <- extractMatrices(lav.out_WM)$A
A[A!=0]
#cov.test= cov(data.test[,c(51:98,100:102)],use="complete.obs")
#tt = regsem(lav.out_WM)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=30,jump=.01,type="enet",alpha=0.2,pars_pen=c(3:50),prerun=TRUE)
reg.out1_WM
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=30,jump=.005,type="enet",alpha=0.2,pars_pen=c(3:50),prerun=TRUE)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=30,jump=.005,type="enet",alpha=0.2,pars_pen=c(3:50),prerun=TRUE,warm.start=F)
reg.out1_WM
plot(reg.out1_WM)
reg.out1_WM$parameters[30,]
library(rgenoud)
?genoud
library(regsem)
wisc <- read.table("/Users/Ross/Documents/Github/random_code/wisc4vpe.dat")
wisc <- read.table("C:/Users/rjacobuc/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
wisc <- read.table("C:/Users/jacobucc/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
names(wisc)<- c("V1","V2","V4","V6","P1","P2","P4", "P6", "Moeducat")
library(regsem)
lds_1 <- "
#latent variables
lV1 =~ 1*V1
lV2 =~ 1*V2
lV4 =~ 1*V4
lV6 =~ 1*V6
#autoregressions
lV2 ~ 1*lV1; lV4 ~ 1*lV2; lV6 ~ 1*lV4
#change - delta; d
dV1 =~ 1*lV2; dV2 =~ 1*lV4; dV3 =~ 1*lV6
#intercept and slope
inV =~ 1*lV1;
#slope =~ alpha*dV1 + alpha*dV2 + alpha*dV3
# match lgm
slope =~ 1*dV1 + 2*dV2 + 2*dV3
#slope =~ 1.17*dV1 + alpha1*dV2 + alpha2*dV3
#manifest means @0
V1 ~ 0*1; V2 ~0*1; V4 ~ 0*1; V6 ~ 0*1
#slope and intercept means
slope ~ 1;
inV ~ 1;
#Latent variances and covariance
slope ~~ slope;
inV ~~ inV;
slope ~~ inV;
#means and vars @0
lV1 ~ 0*1; lV2 ~0*1; lV4 ~ 0*1; lV6 ~ 0*1
dV1 ~ 0*1; dV2 ~0*1; dV3 ~ 0*1
lV1 ~~ 0*lV1; lV2 ~~ 0*lV2; lV4 ~~ 0*lV4; lV6 ~~ 0*lV6
dV1 ~~ 0*dV1; dV2 ~~ 0*dV2; dV3 ~~ 0*dV3
#auVo-proportions
dV1 ~ beta*lV1; dV2 ~ beta*lV2; dV3 ~ beta*lV4;
#residuals equal
V1 ~~ resid*V1; V2 ~~ resid*V2; V4 ~~ resid*V4; V6 ~~ resid*V6;
"
fit.lds <- lavaan(lds_1, data=wisc)
summary(fit.lds,standardized=TRUE,fit=TRUE)
# problem with mult.start=TRUE
#################################### check out gradient ###########################33333
#mats = extractMatrices(fit.lds)
#model = fit.lds
#mm = extractMatrices(model)$A[,"1"]
#SampMean <- model@SampleStats@mean[][[1]]
#ss = match(names(mm[mm > 0]),model@Data@ov$name)
#SampMean[-c(ss)] = 0
#SampCov <- model@SampleStats@cov[][[1]]
#SampCov2 <- SampCov + SampMean%*%t(SampMean)
# try changing size of SampCov
#SampCov3 = cbind(SampCov2,SampMean)
#SampCov = rbind(SampCov3,append(SampMean,1))
#ImpCov = RAMmult(mats$parameters,mats$A,mats$S,mats$F,mats$A_fixed,mats$A_est,mats$S_fixed,mats$S_est)
#round(rcpp_grad_ram(mats$parameters, ImpCov$ImpCov, SampCov, mats$A_est, mats$S_est,
#              mats$A, mats$S, mats$F, lambda=0, type2=0, pen_vec=0, diff_par=0),3)
#m3 = fitted(fit.lds)$mean
#cov3 = fitted(fit.lds)$cov
#cov3 + m3 %*% t(m3)
#inspect(fit.lds,what="gradient")
######################################################################################
#starts <- c(1,19.8,.2,1.5,19.4,3,12.8)
#out <- regsem(fit.lds,optMethod="nlminb",gradFun="ram",tol=1e-5,type="ridge",lambda=.1,step=.1,pars_pen=3)
#summary(out)
# tol=1e-3 gets us to .324
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
install.packages("hydroPSO")
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
library(regsem)
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
plot(out.cv)
out.cv
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=50,jump=.005,type="enet",alpha=0.1,pars_pen=c(3:50),prerun=TRUE,warm.start=F)
library(regsem)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=50,jump=.005,type="enet",alpha=0.1,pars_pen=c(3:50),prerun=TRUE,warm.start=F)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=30,jump=.005,type="enet",alpha=0.1,pars_pen=c(3:50),prerun=TRUE,warm.start=F)
plot(reg.out1_WM)
reg.out1_WM
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
out.cv
plot(out.cv)
out.cv
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
out.cv
plot(out.cv)
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
out.cv
plot(out.cv)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),optMethod="rsolnp")
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),optMethod="rsolnp")
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=FALSE,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),optMethod="rsolnp")
?solnp
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=FALSE,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),optMethod="rsolnp")
library(regsem)
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=FALSE,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),optMethod="rsolnp")
out.cv
plot(out.cv)
out.cv2 <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
out.cv2
plot(out.cv2)
library(regsem)
out.cv2 <- cv_regsem(fit.lds,n.lambda=10,mult.start=TRUE,mult.iter=5,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),prerun=TRUE)
out.cv2
out.cv <- cv_regsem(fit.lds,n.lambda=10,mult.start=FALSE,jump=.04,warm.start=TRUE,#solver=TRUE,
type="alasso", gradFun = "ram",pars_pen=c(3),optMethod="rsolnp")
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=5,jump=.005,type="enet",
alpha=0.1,pars_pen=c(3:50),,optMethod="rsolnp")
plot(reg.out1_WM)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=.01,type="enet",
alpha=0.1,pars_pen=c(3:50),optMethod="rsolnp")
plot(reg.out1_WM)
reg.out1_WM
reg.out1_WM$parameters[1:8,]
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=.01,type="enet",
alpha=0.1,pars_pen=c(3:50),prerun=TRUE)
reg.out1_WM
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=.01,type="enet",
alpha=0.1,pars_pen=c(3:50),prerun=TRUE,warm.start=F)
plot(reg.out1_WM)
reg.out1_WM
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=.01,type="enet",tol=1e-8,
alpha=0.1,pars_pen=c(3:50),prerun=TRUE,warm.start=F)
plot(reg.out1_WM)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=17,jump=.01,type="enet",
alpha=0.1,pars_pen=c(3:50),prerun=TRUE,warm.start=F)
plot(reg.out1_WM)
reg.out1_WM
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=17,jump=.01,type="lasso",
pars_pen=c(3:50),prerun=TRUE,warm.start=F)
plot(reg.out1_WM)
reg.out1_WM
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=17,jump=.01,type="alasso",
pars_pen=c(3:50),prerun=TRUE,warm.start=F)
plot(reg.out1_WM)
reg.out1_WM
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=17,jump=.001,type="alasso",
pars_pen=c(3:50),prerun=TRUE,warm.start=F)
plot(reg.out1_WM)
reg.out1_WM
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=17,jump=.001,type="alasso",
pars_pen=c(3:50),prerun=TRUE,warm.start=TRUE)
plot(reg.out1_WM)
reg.out1_WM
library(regsem)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=17,jump=.001,type="alasso",
pars_pen=c(3:50),prerun=TRUE,warm.start=TRUE)
plot(reg.out1_WM)
reg.out1_WM
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=17,jump=.001,type="alasso",
pars_pen=c(3:50),prerun=TRUE,warm.start=FALSE)
warnings()
plot(reg.out1_WM)
reg.out1_WM
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=17,jump=.001,type="enet",alpha=0.1,
pars_pen=c(3:50),prerun=TRUE,warm.start=FALSE)
plot(reg.out1_WM)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=17,jump=.005,type="enet",alpha=0.1,
pars_pen=c(3:50),prerun=TRUE,warm.start=FALSE)
plot(reg.out1_WM)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=30,jump=.005,type="enet",alpha=0.1,
pars_pen=c(3:50),prerun=TRUE,warm.start=FALSE)
0.59**2
plot(reg.out1_WM)
reg.out1_WM
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=30,jump=.005,type="enet",alpha=0.1,
pars_pen=c(3:50),prerun=TRUE,warm.start=FALSE,step=1)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=.005,type="enet",alpha=0.1,
pars_pen=c(3:50),prerun=TRUE,warm.start=FALSE,step=1)
plot(reg.out1_WM)
reg.out1_WM
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=.01,type="lasso",
pars_pen=c(3:50),prerun=TRUE,warm.start=FALSE,step=1)
plot(reg.out1_WM)
reg.out1_WM
warnings()
library(regsem)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=1,jump=.01,type="lasso",lambda.start=.1,
pars_pen=c(3:50),prerun=TRUE,warm.start=FALSE,step=1)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=1,jump=.01,type="lasso",lambda.start=.1,
pars_pen=c(3:50),prerun=TRUE,warm.start=FALSE,step=1)
library(regsem)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=1,jump=.01,type="lasso",lambda.start=.1,
pars_pen=c(3:50),prerun=TRUE,warm.start=FALSE,step=1)
reg.out1_WM
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=.01,type="lasso",
pars_pen=c(3:50),prerun=TRUE,warm.start=FALSE,step=1)
plot(reg.out1_WM)
library(regsem)
plot(reg.out1_WM)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=.05,type="lasso",
pars_pen=c(3:50),prerun=TRUE,warm.start=FALSE,step=1)
plot(reg.out1_WM)
library(regsem)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=1,jump=.05,type="lasso",lambda.start=.2,
pars_pen=c(3:50),prerun=TRUE,warm.start=FALSE,step=1)
library(regsem)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=.05,type="enet",
pars_pen=c(3:50))#prerun=TRUE,warm.start=FALSE,step=1)
# enet, alpha=0.5 has problems converging at higher than 15 lambdas at 0.075 jump
reg.out1_WM <- cv_regsem(lav.out_WM,n.lambda=10,jump=.05,type="enet",quasi=TRUE,
pars_pen=c(3:50))#prerun=TRUE,warm.start=FALSE,step=1)
reg.out1_WM
plot(reg.out1_WM)

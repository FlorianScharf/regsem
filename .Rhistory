system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
nobs=200
iv <- rbinom(nobs,1,0.5)
med1 <- 0.5*iv + rnorm(nobs)
med2 <- 0.2*iv + rnorm(nobs)
med3 <- 0*iv + rnorm(nobs)
med1 <- as.numeric(scale(med1));med2 <- as.numeric(scale(med2));med3 <- as.numeric(scale(med3))
h1 <- 1*med1 + rnorm(nobs);h2 <- 1*med1 + rnorm(nobs);h3 <- 1*med1 + rnorm(nobs);
g1 <- 1*med2 + rnorm(nobs);g2 <- 1*med2 + rnorm(nobs);g3 <- 1*med2 + rnorm(nobs);
k1 <- 1*med3 + rnorm(nobs);k2 <- 1*med3 + rnorm(nobs);k3 <- 1*med3 + rnorm(nobs);
dv <- 0.5*med1 + 0.2*med2 + 0*med3 + 0.5*iv + rnorm(nobs)
dat <- cbind(iv,h1,h2,h3,g1,g2,g3,k1,k2,k3,med1,med2,med3,dv)
#dat[,2:14] <- scale(dat[,2:14])
lav.mod <-"
med1 =~ h1 + h2 + h3
med2 =~ g1 + g2 + g3
med3 =~ k1 + k2 + k3
#med1~~1*med1;med2~~1*med2;med3~~1*med3
med1 ~ iv
med2 ~ iv
med3 ~ iv
dv ~ med1 + med2 + med3 + iv
"
lav.out <- sem(lav.mod,dat)
summary(lav.out)
extractMatrices(lav.out)["A"]
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
?.Call
library(regsem)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
?rcpp_quasi_calc
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
compileAttributes()
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
library(regsem)
regsem::rcpp_quasi_calc(diag(4),1:4,1:4,1:4,diag(4))
library(regsem)
regsem::rcpp_quasi_calc(diag(4),1:4,1:4,1:4,diag(4))
regsem::regsem_rcpp_quasi_calc(diag(4),1:4,1:4,1:4,diag(4))
regsem::rcpp_quasi_calc(diag(4),1:4,1:4,1:4,diag(4))
regsem::rcpp_quasi_calc(diag(4),1:4,1:4,1:4,diag(4))
regsem::regsem_rcpp_quasi_calc(diag(4),1:4,1:4,1:4,diag(4))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
regsem::rcpp_quasi_calc(diag(4),1:4,1:4,1:4,diag(4))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
library(regsem)
tools::package_native_routine_registration_skeleton("regsem")
tools::package_native_routine_registration_skeleton(".")
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
traceback()
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.02,step=1))
library(regsem)
library(regsem)
nobs=200
iv <- rbinom(nobs,1,0.5)
med1 <- 0.5*iv + rnorm(nobs)
med2 <- 0.2*iv + rnorm(nobs)
med3 <- 0*iv + rnorm(nobs)
med1 <- as.numeric(scale(med1));med2 <- as.numeric(scale(med2));med3 <- as.numeric(scale(med3))
h1 <- 1*med1 + rnorm(nobs);h2 <- 1*med1 + rnorm(nobs);h3 <- 1*med1 + rnorm(nobs);
g1 <- 1*med2 + rnorm(nobs);g2 <- 1*med2 + rnorm(nobs);g3 <- 1*med2 + rnorm(nobs);
k1 <- 1*med3 + rnorm(nobs);k2 <- 1*med3 + rnorm(nobs);k3 <- 1*med3 + rnorm(nobs);
dv <- 0.5*med1 + 0.2*med2 + 0*med3 + 0.5*iv + rnorm(nobs)
dat <- cbind(iv,h1,h2,h3,g1,g2,g3,k1,k2,k3,med1,med2,med3,dv)
#dat[,2:14] <- scale(dat[,2:14])
lav.mod <-"
med1 =~ h1 + h2 + h3
med2 =~ g1 + g2 + g3
med3 =~ k1 + k2 + k3
#med1~~1*med1;med2~~1*med2;med3~~1*med3
med1 ~ iv
med2 ~ iv
med3 ~ iv
dv ~ med1 + med2 + med3 + iv
"
lav.out <- sem(lav.mod,dat)
summary(lav.out)
extractMatrices(lav.out)["A"]
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=1,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
plot(cv.out)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
plot(cv.out)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
plot(cv.out)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
plot(cv.out)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=1,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=1,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=1,jump=0.1))
library(regsem)
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=1,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=5,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
plot(cv.out)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
system.time(cv.out <- cv_regsem(lav.out,type="enet",pars_pen=c(7:9,10:12),optMethod="coord_desc",
solver=FALSE,gradFun="ram",quasi=TRUE,hessFun="none",n.lambda=25,jump=0.1))
library(regsem)
wisc <- read.table("/Users/Ross/Documents/Github/random_code/wisc4vpe.dat")
wisc <- read.table("C:/Users/RJacobucci/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
wisc <- read.table("C:/Users/Ross/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
names(wisc)<- c("V1","V2","V4","V6","P1","P2","P4", "P6", "Moeducat")
library(regsem)
lds_1 <- "
#latent variables
lV1 =~ 1*V1
lV2 =~ 1*V2
lV4 =~ 1*V4
lV6 =~ 1*V6
#autoregressions
lV2 ~ 1*lV1; lV4 ~ 1*lV2; lV6 ~ 1*lV4
#change - delta; d
dV1 =~ 1*lV2; dV2 =~ 1*lV4; dV3 =~ 1*lV6
#intercept and slope
inV =~ 1*lV1;
#slope =~ alpha*dV1 + alpha*dV2 + alpha*dV3
# match lgm
slope =~ 1*dV1 + 2*dV2 + 2*dV3
#slope =~ 1.17*dV1 + alpha1*dV2 + alpha2*dV3
#manifest means @0
V1 ~ 0*1; V2 ~0*1; V4 ~ 0*1; V6 ~ 0*1
#slope and intercept means
slope ~ 1;
inV ~ 1;
#Latent variances and covariance
slope ~~ slope;
inV ~~ inV;
slope ~~ inV;
#means and vars @0
lV1 ~ 0*1; lV2 ~0*1; lV4 ~ 0*1; lV6 ~ 0*1
dV1 ~ 0*1; dV2 ~0*1; dV3 ~ 0*1
lV1 ~~ 0*lV1; lV2 ~~ 0*lV2; lV4 ~~ 0*lV4; lV6 ~~ 0*lV6
dV1 ~~ 0*dV1; dV2 ~~ 0*dV2; dV3 ~~ 0*dV3
#auVo-proportions
dV1 ~ beta*lV1; dV2 ~ beta*lV2; dV3 ~ beta*lV4;
#residuals equal
V1 ~~ resid*V1; V2 ~~ resid*V2; V4 ~~ resid*V4; V6 ~~ resid*V6;
"
fit.lds <- lavaan(lds_1, data=wisc)
summary(fit.lds,standardized=TRUE)
# problem with mult.start=TRUE
#################################### check out gradient ###########################33333
#mats = extractMatrices(fit.lds)
#model = fit.lds
#mm = extractMatrices(model)$A[,"1"]
#SampMean <- model@SampleStats@mean[][[1]]
#ss = match(names(mm[mm > 0]),model@Data@ov$name)
#SampMean[-c(ss)] = 0
#SampCov <- model@SampleStats@cov[][[1]]
#SampCov2 <- SampCov + SampMean%*%t(SampMean)
# try changing size of SampCov
#SampCov3 = cbind(SampCov2,SampMean)
#SampCov = rbind(SampCov3,append(SampMean,1))
#ImpCov = RAMmult(mats$parameters,mats$A,mats$S,mats$F,mats$A_fixed,mats$A_est,mats$S_fixed,mats$S_est)
#round(rcpp_grad_ram(mats$parameters, ImpCov$ImpCov, SampCov, mats$A_est, mats$S_est,
#              mats$A, mats$S, mats$F, lambda=0, type2=0, pen_vec=0, diff_par=0),3)
#m3 = fitted(fit.lds)$mean
#cov3 = fitted(fit.lds)$cov
#cov3 + m3 %*% t(m3)
#inspect(fit.lds,what="gradient")
######################################################################################
#starts <- c(1,19.8,.2,1.5,19.4,3,12.8)
#out <- regsem(fit.lds,optMethod="coord_desc",gradFun="ram",tol=1e-5,type="ridge",lambda=0.01,step=.1)
#summary(out)
out.cv <- cv_regsem(fit.lds,n.lambda=100,mult.start=FALSE,mult.iter=2,jump=.05,warm.start=TRUE,
type="lasso", gradFun = "ram",pars_pen=c(3),fit.ret=c("chisq","df","BIC"),
optMethod="coord_desc",quasi=FALSE)
plot(out.cv)
out.cv
data.1 = read.table('C:/Users\Ross/Google Drive/edm_book/ch1_intro/apexpos.dat')
data.1 = read.table('C:/Users/Ross/Google Drive/edm_book/ch1_intro/apexpos.dat')
data.1 = read.table('/Users/Ross/Google Drive/edm_book/ch1_intro/apexpos.dat')
data.1 = read.table('/Users/Ross/Google Drive/edm_book/ch1_intro/scripts/apexpos.dat')
names(data.1) = c('id', 'apexpos', 'fsiq7')
head(data.1)
# Sort Data
data.2 <- data.1[order(data.1$apexpos),]
attach(data.2)
## Plotting empirical data ##
plot(apexpos, fsiq7, ylab = 'Full Scale IQ', xlab = 'PHE Exposure')
## linear regression model ##
lm.1 = lm(fsiq7 ~ apexpos)
summary(lm.1)
#plot(apexpos, fitted(lm.1), ylab = 'Predicted Full Scale IQ', xlab = 'PHE Exposure')
#plot(apexpos, fsiq7, ylab = 'Full Scale IQ', xlab = 'PHE Exposure')
#abline(lm(fsiq7 ~ apexpos), col="red")
library(ggplot2)
plot.1 = ggplot(data.1, aes(x=apexpos, y=fsiq7)) + geom_point() +
stat_smooth(method='lm', formula = y ~ x, size = 1) +
xlab('PHE Exposure') + ylab('Age 7 Full Scale IQ')
print(plot.1)
## Regression Diagnostics on Linear Regression Model ##
library(car)
#Outlier Test
outlierTest(lm.1) # Bonferonni p-value for most extreme obs
#QQ Plot
qqPlot(lm.1, main="QQ Plot") #qq plot for studentized resid
# Cook?s D
cook = cooks.distance(lm.1)
plot(cook,ylab="Cooks distances")
# Plots
plot(apexpos, lm.1$res)
plot(lm.1$fitted, lm.1$res)
# Leverage Plot
leverage = hat(model.matrix(lm.1))
plot(leverage)
# quadratic regression model
apexpos2 = apexpos^2
lm.2 = lm(fsiq7 ~ apexpos + apexpos2)
summary(lm.2)
#plot(apexpos, fitted(lm.2))
#plot(apexpos, fsiq7, ylab = 'Full Scale IQ', xlab = 'PHE Exposure')
#Save model estimates for plotting curve
#b0 = lm.2$coefficients[1]
#b1 = lm.2$coefficients[2]
#b2 = lm.2$coefficients[3]
#curve(b0 + b1*x + b2*x^2, from = min(apexpos), to = max(apexpos), n = 100, col = "red", lwd = 2, ann = F, add = T)
plot.2 = ggplot(data.1, aes(x=apexpos, y=fsiq7)) + geom_point() +
stat_smooth(method='lm', formula = y ~ x + I(x^2), size = 1) +
xlab('PHE Exposure') + ylab('Age 7 Full Scale IQ')
print(plot.2)
# let's keep increasing the order
order = 20
r.square = matrix(NA,order,1)
adj.r.square = matrix(NA,order,1)
mse = matrix(NA,order,1)
for (i in 1:order) {
lm.poly <- lm(fsiq7 ~ poly(apexpos,i))
#     print(summary(lm.poly))
mypath = file.path("C:","R_Temp",paste("pred.poly.",i,".png", sep=""))
png(file = mypath)
myplot = ggplot(data.1, aes(x=apexpos, y=fsiq7)) + geom_point() +
stat_smooth(method='lm', formula = y ~ poly(x,i), size = 1) +
xlab('PHE Exposure') + ylab('Age 7 Full Scale IQ')
print(myplot)
dev.off()
r.square[i] = summary(lm.poly)$r.squared
adj.r.square[i] = summary(lm.poly)$adj.r.squared
mse[i] = mean(residuals(lm.poly)^2)
}
r.square
adj.r.square
mse
plot(r.square, ylab = 'R^2', xlab = 'Order of the Polynomial', ylim=c(0.5,1), xlim=c(1,20), type='l')
plot(adj.r.square, ylab = 'Adjusted R^2', xlab = 'Order of the Polynomial', ylim=c(0.5,1), xlim=c(1,20), type='l')
mypath = file.path("C:","R_Temp",paste("pred.poly.",i,".png", sep=""))
png(file = mypath)
for (i in 1:order) {
lm.poly <- lm(fsiq7 ~ poly(apexpos,i))
#     print(summary(lm.poly))
#mypath = file.path("C:","R_Temp",paste("pred.poly.",i,".png", sep=""))
#png(file = mypath)
myplot = ggplot(data.1, aes(x=apexpos, y=fsiq7)) + geom_point() +
stat_smooth(method='lm', formula = y ~ poly(x,i), size = 1) +
xlab('PHE Exposure') + ylab('Age 7 Full Scale IQ')
print(myplot)
dev.off()
r.square[i] = summary(lm.poly)$r.squared
adj.r.square[i] = summary(lm.poly)$adj.r.squared
mse[i] = mean(residuals(lm.poly)^2)
}
r.square
adj.r.square
mse
plot(r.square, ylab = 'R^2', xlab = 'Order of the Polynomial', ylim=c(0.5,1), xlim=c(1,20), type='l')
plot(adj.r.square, ylab = 'Adjusted R^2', xlab = 'Order of the Polynomial', ylim=c(0.5,1), xlim=c(1,20), type='l')
data.2<-data.1[sample(nrow(data.1)),]
K = 10
#Create 10 equally size folds
folds <- cut(seq(1,nrow(data.2)),breaks=K,labels=FALSE)
r.square = matrix(NA,K,order)
#Perform 10-fold cross validation
for(i in 1:K){
#Segement your data by fold using the which() function
testIndexes <- which(folds==i,arr.ind=TRUE)
testData <- data.2[testIndexes, ]
trainData <- data.2[-testIndexes, ]
#Use the test and train data partitions
for (j in 1:order){
fit.train = lm(fsiq7 ~ poly(apexpos,j), data = trainData)
fit.test = predict(fit.train, newdata=testData)
r.square[i,j] = cor(fit.test, testData$fsiq7, use='complete')^2
}
}
colMeans(r.square)
plot(colMeans(r.square), type='l')
# 10-fold CV leads to a fifth degree polynomial
myplot = ggplot(data.1, aes(x=apexpos, y=fsiq7)) + geom_point() +
stat_smooth(method='lm', formula = y ~ poly(x,5), size = 1) +
xlab('PHE Exposure') + ylab('Age 7 Full Scale IQ')
print(myplot)
lm.final = lm(fsiq7~poly(apexpos,5), data=data.1)
## Bring in Official Test Data ##
data.test = read.table('/Users/Ross/Google Drive/edm_book/ch1_intro/scripts/apexpos_test.dat')
names(data.test) = c('id', 'apexpos', 'fsiq7')
cor(data.test$fsiq7, predict(lm.final, newdata=data.test))^2

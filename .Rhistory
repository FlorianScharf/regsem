f3 =~ NA*x1 + x2 + x3 + 1*x7 + x8 + x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
lav.out <- cfa(fa,dat,meanstructure=TRUE)
cv.out <- cv_regsem(lav.out,n.lambda=35,jump=0.003,multi.start=TRUE,
type="lasso",parallel=F,#verbose=T,nlminb.control=control,
pars_pen=c(1:15))
coef.mat <- cv.out[[1]][,c(1:15)]
shrink.vals <- cv.out[[2]][,"lambda"]
min.bic <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"BIC"])
min.bic2 <- which(cv.out[[2]][,"BIC"]==min.bic)[1]
type1 <- sum(coef.mat[min.bic2,c(3:5,8:13)] > 0.001 | coef.mat[min.bic2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.bic2,c(1,6,14)] < 0.001 & coef.mat[min.bic2,c(1,6,14)] >-.001)
res.mat[count,"regsem_bic_type1"] <- type1
res.mat[count,"regsem_bic_type2"] <- type2
min.rmsea <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"rmsea"])
min.rmsea2 <- which(cv.out[[2]][,"rmsea"]==min.rmsea)[1]
type1 <- sum(coef.mat[min.rmsea2,c(3:5,8:13)] > 0.001 | coef.mat[min.rmsea2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.rmsea2,c(1,6,14)] < 0.001 & coef.mat[min.rmsea2,c(1,6,14)] >-.001)
res.mat[count,"regsem_rmsea_type1"] <- type1
res.mat[count,"regsem_rmsea_type2"] <- type2
res.mat[count,"conv"] <- sum(cv.out[[2]][,"conv"])
}
cv.out <- cv_regsem(lav.out,n.lambda=35,jump=0.003,multi.start=TRUE,fit.ret=c("rmsea","aic","bic"),
type="lasso",parallel=F,#verbose=T,nlminb.control=control,
pars_pen=c(1:15))
niter=200
#count=0
res.mat <- matrix(NA,niter,5)
colnames(res.mat) <- c("regsem_bic_type1","regsem_bic_type2",
"regsem_aic_type1","regsem_aic_type2",
"regsem_rmsea_type1","regsem_rmsea_type2","conv")
for(count in 1:niter){
#count = count + 1
population.model <- '
f1 =~ 1*x1 + 0.2*x2 + 1*x3
f2 =~ 1*x4 + 0.2*x5 + 1*x6
f3 =~ 1*x7 + 0.2*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
set.seed(count)
print(count)
dat <- simulateData(population.model,model.type="cfa",sample.nobs=80)
fa <-'
f1 =~ 1*x1 + x2 + x3 + x4 + x5 + x6
f2 =~ 1*x4 + x5 + x6 + x7 + x8 + x9
f3 =~ NA*x1 + x2 + x3 + 1*x7 + x8 + x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
lav.out <- cfa(fa,dat,meanstructure=TRUE)
cv.out <- cv_regsem(lav.out,n.lambda=35,jump=0.003,multi.start=TRUE,fit.ret=c("rmsea","aic","bic"),
type="lasso",parallel=F,#verbose=T,nlminb.control=control,
pars_pen=c(1:15))
coef.mat <- cv.out[[1]][,c(1:15)]
shrink.vals <- cv.out[[2]][,"lambda"]
min.bic <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"BIC"])
min.bic2 <- which(cv.out[[2]][,"BIC"]==min.bic)[1]
type1 <- sum(coef.mat[min.bic2,c(3:5,8:13)] > 0.001 | coef.mat[min.bic2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.bic2,c(1,6,14)] < 0.001 & coef.mat[min.bic2,c(1,6,14)] >-.001)
res.mat[count,"regsem_bic_type1"] <- type1
res.mat[count,"regsem_bic_type2"] <- type2
min.aic <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"AIC"])
min.aic2 <- which(cv.out[[2]][,"AIC"]==min.aic)[1]
type1 <- sum(coef.mat[min.aic2,c(3:5,8:13)] > 0.001 | coef.mat[min.aic2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.aic2,c(1,6,14)] < 0.001 & coef.mat[min.aic2,c(1,6,14)] >-.001)
res.mat[count,"regsem_aic_type1"] <- type1
res.mat[count,"regsem_aic_type2"] <- type2
min.rmsea <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"rmsea"])
min.rmsea2 <- which(cv.out[[2]][,"rmsea"]==min.rmsea)[1]
type1 <- sum(coef.mat[min.rmsea2,c(3:5,8:13)] > 0.001 | coef.mat[min.rmsea2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.rmsea2,c(1,6,14)] < 0.001 & coef.mat[min.rmsea2,c(1,6,14)] >-.001)
res.mat[count,"regsem_rmsea_type1"] <- type1
res.mat[count,"regsem_rmsea_type2"] <- type2
res.mat[count,"conv"] <- sum(cv.out[[2]][,"conv"])
}
niter=200
#count=0
res.mat <- matrix(NA,niter,7)
colnames(res.mat) <- c("regsem_bic_type1","regsem_bic_type2",
"regsem_aic_type1","regsem_aic_type2",
"regsem_rmsea_type1","regsem_rmsea_type2","conv")
for(count in 1:niter){
#count = count + 1
population.model <- '
f1 =~ 1*x1 + 0.2*x2 + 1*x3
f2 =~ 1*x4 + 0.2*x5 + 1*x6
f3 =~ 1*x7 + 0.2*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
set.seed(count)
print(count)
dat <- simulateData(population.model,model.type="cfa",sample.nobs=80)
fa <-'
f1 =~ 1*x1 + x2 + x3 + x4 + x5 + x6
f2 =~ 1*x4 + x5 + x6 + x7 + x8 + x9
f3 =~ NA*x1 + x2 + x3 + 1*x7 + x8 + x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
lav.out <- cfa(fa,dat,meanstructure=TRUE)
cv.out <- cv_regsem(lav.out,n.lambda=35,jump=0.003,multi.start=TRUE,fit.ret=c("rmsea","aic","bic"),
type="lasso",parallel=F,#verbose=T,nlminb.control=control,
pars_pen=c(1:15))
coef.mat <- cv.out[[1]][,c(1:15)]
shrink.vals <- cv.out[[2]][,"lambda"]
min.bic <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"BIC"])
min.bic2 <- which(cv.out[[2]][,"BIC"]==min.bic)[1]
type1 <- sum(coef.mat[min.bic2,c(3:5,8:13)] > 0.001 | coef.mat[min.bic2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.bic2,c(1,6,14)] < 0.001 & coef.mat[min.bic2,c(1,6,14)] >-.001)
res.mat[count,"regsem_bic_type1"] <- type1
res.mat[count,"regsem_bic_type2"] <- type2
min.aic <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"AIC"])
min.aic2 <- which(cv.out[[2]][,"AIC"]==min.aic)[1]
type1 <- sum(coef.mat[min.aic2,c(3:5,8:13)] > 0.001 | coef.mat[min.aic2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.aic2,c(1,6,14)] < 0.001 & coef.mat[min.aic2,c(1,6,14)] >-.001)
res.mat[count,"regsem_aic_type1"] <- type1
res.mat[count,"regsem_aic_type2"] <- type2
min.rmsea <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"rmsea"])
min.rmsea2 <- which(cv.out[[2]][,"rmsea"]==min.rmsea)[1]
type1 <- sum(coef.mat[min.rmsea2,c(3:5,8:13)] > 0.001 | coef.mat[min.rmsea2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.rmsea2,c(1,6,14)] < 0.001 & coef.mat[min.rmsea2,c(1,6,14)] >-.001)
res.mat[count,"regsem_rmsea_type1"] <- type1
res.mat[count,"regsem_rmsea_type2"] <- type2
res.mat[count,"conv"] <- sum(cv.out[[2]][,"conv"])
}
cv.out
cv.out <- cv_regsem(lav.out,n.lambda=35,jump=0.003,multi.start=TRUE,fit.ret=c("rmsea","AIC","BIC"),
type="lasso",parallel=F,#verbose=T,nlminb.control=control,
pars_pen=c(1:15))
cv.out
niter=200
#count=0
res.mat <- matrix(NA,niter,7)
colnames(res.mat) <- c("regsem_bic_type1","regsem_bic_type2",
"regsem_aic_type1","regsem_aic_type2",
"regsem_rmsea_type1","regsem_rmsea_type2","conv")
for(count in 1:niter){
#count = count + 1
population.model <- '
f1 =~ 1*x1 + 0.2*x2 + 1*x3
f2 =~ 1*x4 + 0.2*x5 + 1*x6
f3 =~ 1*x7 + 0.2*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
set.seed(count)
print(count)
dat <- simulateData(population.model,model.type="cfa",sample.nobs=80)
fa <-'
f1 =~ 1*x1 + x2 + x3 + x4 + x5 + x6
f2 =~ 1*x4 + x5 + x6 + x7 + x8 + x9
f3 =~ NA*x1 + x2 + x3 + 1*x7 + x8 + x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
lav.out <- cfa(fa,dat,meanstructure=TRUE)
cv.out <- cv_regsem(lav.out,n.lambda=35,jump=0.002,multi.start=TRUE,fit.ret=c("rmsea","AIC","BIC"),
type="lasso",parallel=F,#verbose=T,nlminb.control=control,
pars_pen=c(1:15))
coef.mat <- cv.out[[1]][,c(1:15)]
shrink.vals <- cv.out[[2]][,"lambda"]
min.bic <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"BIC"])
min.bic2 <- which(cv.out[[2]][,"BIC"]==min.bic)[1]
type1 <- sum(coef.mat[min.bic2,c(3:5,8:13)] > 0.001 | coef.mat[min.bic2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.bic2,c(1,6,14)] < 0.001 & coef.mat[min.bic2,c(1,6,14)] >-.001)
res.mat[count,"regsem_bic_type1"] <- type1
res.mat[count,"regsem_bic_type2"] <- type2
min.aic <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"AIC"])
min.aic2 <- which(cv.out[[2]][,"AIC"]==min.aic)[1]
type1 <- sum(coef.mat[min.aic2,c(3:5,8:13)] > 0.001 | coef.mat[min.aic2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.aic2,c(1,6,14)] < 0.001 & coef.mat[min.aic2,c(1,6,14)] >-.001)
res.mat[count,"regsem_aic_type1"] <- type1
res.mat[count,"regsem_aic_type2"] <- type2
min.rmsea <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"rmsea"])
min.rmsea2 <- which(cv.out[[2]][,"rmsea"]==min.rmsea)[1]
type1 <- sum(coef.mat[min.rmsea2,c(3:5,8:13)] > 0.001 | coef.mat[min.rmsea2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.rmsea2,c(1,6,14)] < 0.001 & coef.mat[min.rmsea2,c(1,6,14)] >-.001)
res.mat[count,"regsem_rmsea_type1"] <- type1
res.mat[count,"regsem_rmsea_type2"] <- type2
res.mat[count,"conv"] <- sum(cv.out[[2]][,"conv"])
}
colMeans(res.mat)
cv.out
niter=200
#count=0
res.mat <- matrix(NA,niter,7)
colnames(res.mat) <- c("regsem_bic_type1","regsem_bic_type2",
"regsem_aic_type1","regsem_aic_type2",
"regsem_rmsea_type1","regsem_rmsea_type2","conv")
for(count in 1:niter){
#count = count + 1
population.model <- '
f1 =~ 1*x1 + 0.2*x2 + 1*x3
f2 =~ 1*x4 + 0.2*x5 + 1*x6
f3 =~ 1*x7 + 0.2*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
set.seed(count)
print(count)
dat <- simulateData(population.model,model.type="cfa",sample.nobs=80)
fa <-'
f1 =~ 1*x1 + x2 + x3 + x4 + x5 + x6
f2 =~ 1*x4 + x5 + x6 + x7 + x8 + x9
f3 =~ NA*x1 + x2 + x3 + 1*x7 + x8 + x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
lav.out <- cfa(fa,dat,meanstructure=TRUE)
cv.out <- cv_regsem(lav.out,n.lambda=35,jump=0.004,multi.start=TRUE,fit.ret=c("rmsea","AIC","BIC"),
type="lasso",parallel=F,#verbose=T,nlminb.control=control,
pars_pen=c(1:15))
coef.mat <- cv.out[[1]][,c(1:15)]
shrink.vals <- cv.out[[2]][,"lambda"]
min.bic <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"BIC"])
min.bic2 <- which(cv.out[[2]][,"BIC"]==min.bic)[1]
type1 <- sum(coef.mat[min.bic2,c(3:5,8:13)] > 0.001 | coef.mat[min.bic2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.bic2,c(1,6,14)] < 0.001 & coef.mat[min.bic2,c(1,6,14)] >-.001)
res.mat[count,"regsem_bic_type1"] <- type1
res.mat[count,"regsem_bic_type2"] <- type2
min.aic <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"AIC"])
min.aic2 <- which(cv.out[[2]][,"AIC"]==min.aic)[1]
type1 <- sum(coef.mat[min.aic2,c(3:5,8:13)] > 0.001 | coef.mat[min.aic2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.aic2,c(1,6,14)] < 0.001 & coef.mat[min.aic2,c(1,6,14)] >-.001)
res.mat[count,"regsem_aic_type1"] <- type1
res.mat[count,"regsem_aic_type2"] <- type2
min.rmsea <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"rmsea"])
min.rmsea2 <- which(cv.out[[2]][,"rmsea"]==min.rmsea)[1]
type1 <- sum(coef.mat[min.rmsea2,c(3:5,8:13)] > 0.001 | coef.mat[min.rmsea2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.rmsea2,c(1,6,14)] < 0.001 & coef.mat[min.rmsea2,c(1,6,14)] >-.001)
res.mat[count,"regsem_rmsea_type1"] <- type1
res.mat[count,"regsem_rmsea_type2"] <- type2
res.mat[count,"conv"] <- sum(cv.out[[2]][,"conv"])
}
library(regsem)
colMeans(res.mat)
niter=200
#count=0
res.mat <- matrix(NA,niter,7)
colnames(res.mat) <- c("regsem_bic_type1","regsem_bic_type2",
"regsem_aic_type1","regsem_aic_type2",
"regsem_rmsea_type1","regsem_rmsea_type2","conv")
for(count in 1:niter){
#count = count + 1
population.model <- '
f1 =~ 1*x1 + 0.2*x2 + 1*x3
f2 =~ 1*x4 + 0.2*x5 + 1*x6
f3 =~ 1*x7 + 0.2*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
set.seed(count)
print(count)
dat <- simulateData(population.model,model.type="cfa",sample.nobs=80)
fa <-'
f1 =~ 1*x1 + x2 + x3 + x4 + x5 + x6
f2 =~ 1*x4 + x5 + x6 + x7 + x8 + x9
f3 =~ NA*x1 + x2 + x3 + 1*x7 + x8 + x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
lav.out <- cfa(fa,dat,meanstructure=TRUE)
cv.out <- cv_regsem(lav.out,n.lambda=35,jump=0.004,multi.start=TRUE,fit.ret=c("rmsea","AIC","BIC"),
type="lasso",parallel=F,#verbose=T,nlminb.control=control,
pars_pen=c(1:15))
coef.mat <- cv.out[[1]][,c(1:15)]
shrink.vals <- cv.out[[2]][,"lambda"]
min.bic <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"BIC"])
min.bic2 <- which(cv.out[[2]][,"BIC"]==min.bic)[1]
type1 <- sum(coef.mat[min.bic2,c(3:5,8:13)] > 0.001 | coef.mat[min.bic2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.bic2,c(1,6,14)] < 0.001 & coef.mat[min.bic2,c(1,6,14)] >-.001)
res.mat[count,"regsem_bic_type1"] <- type1
res.mat[count,"regsem_bic_type2"] <- type2
min.aic <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"AIC"])
min.aic2 <- which(cv.out[[2]][,"AIC"]==min.aic)[1]
type1 <- sum(coef.mat[min.aic2,c(3:5,8:13)] > 0.001 | coef.mat[min.aic2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.aic2,c(1,6,14)] < 0.001 & coef.mat[min.aic2,c(1,6,14)] >-.001)
res.mat[count,"regsem_aic_type1"] <- type1
res.mat[count,"regsem_aic_type2"] <- type2
min.rmsea <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"rmsea"])
min.rmsea2 <- which(cv.out[[2]][,"rmsea"]==min.rmsea)[1]
type1 <- sum(coef.mat[min.rmsea2,c(3:5,8:13)] > 0.001 | coef.mat[min.rmsea2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.rmsea2,c(1,6,14)] < 0.001 & coef.mat[min.rmsea2,c(1,6,14)] >-.001)
res.mat[count,"regsem_rmsea_type1"] <- type1
res.mat[count,"regsem_rmsea_type2"] <- type2
res.mat[count,"conv"] <- sum(cv.out[[2]][,"conv"])
}
niter=200
#count=0
res.mat <- matrix(NA,niter,7)
colnames(res.mat) <- c("regsem_bic_type1","regsem_bic_type2",
"regsem_aic_type1","regsem_aic_type2",
"regsem_rmsea_type1","regsem_rmsea_type2","conv")
for(count in 1:niter){
#count = count + 1
population.model <- '
f1 =~ 1*x1 + 0.2*x2 + 1*x3
f2 =~ 1*x4 + 0.2*x5 + 1*x6
f3 =~ 1*x7 + 0.2*x8 + 1*x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
set.seed(count)
print(count)
dat <- simulateData(population.model,model.type="cfa",sample.nobs=80)
fa <-'
f1 =~ 1*x1 + x2 + x3 + x4 + x5 + x6
f2 =~ 1*x4 + x5 + x6 + x7 + x8 + x9
f3 =~ NA*x1 + x2 + x3 + 1*x7 + x8 + x9
f1~~1*f1
f2~~1*f2
f3~~1*f3
f1~~0*f2
f2~~0*f3
f1~~0*f3
'
lav.out <- cfa(fa,dat,meanstructure=TRUE)
cv.out <- cv_regsem(lav.out,n.lambda=35,jump=0.004,multi.start=TRUE,fit.ret=c("rmsea","AIC","BIC"),
type="lasso",parallel=F,#verbose=T,nlminb.control=control,
pars_pen=c(1:15))
coef.mat <- cv.out[[1]][,c(1:15)]
shrink.vals <- cv.out[[2]][,"lambda"]
min.bic <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"BIC"])
min.bic2 <- which(cv.out[[2]][,"BIC"]==min.bic)[1]
type1 <- sum(coef.mat[min.bic2,c(3:5,8:13)] > 0.001 | coef.mat[min.bic2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.bic2,c(1,6,14)] < 0.001 & coef.mat[min.bic2,c(1,6,14)] >-.001)
res.mat[count,"regsem_bic_type1"] <- type1
res.mat[count,"regsem_bic_type2"] <- type2
min.aic <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"AIC"])
min.aic2 <- which(cv.out[[2]][,"AIC"]==min.aic)[1]
type1 <- sum(coef.mat[min.aic2,c(3:5,8:13)] > 0.001 | coef.mat[min.aic2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.aic2,c(1,6,14)] < 0.001 & coef.mat[min.aic2,c(1,6,14)] >-.001)
res.mat[count,"regsem_aic_type1"] <- type1
res.mat[count,"regsem_aic_type2"] <- type2
min.rmsea <- min(cv.out[[2]][cv.out[[2]][,"conv"]==0,"rmsea"])
min.rmsea2 <- which(cv.out[[2]][,"rmsea"]==min.rmsea)[1]
type1 <- sum(coef.mat[min.rmsea2,c(3:5,8:13)] > 0.001 | coef.mat[min.rmsea2,c(3:5,8:13)] < -.001)
type2 <- sum(coef.mat[min.rmsea2,c(1,6,14)] < 0.001 & coef.mat[min.rmsea2,c(1,6,14)] >-.001)
res.mat[count,"regsem_rmsea_type1"] <- type1
res.mat[count,"regsem_rmsea_type2"] <- type2
res.mat[count,"conv"] <- sum(cv.out[[2]][,"conv"])
}
colMeans(res.mat)
save.image("bsemLasso_sim1_samp80_regsem.Rdata")
library(regsem)
library(lavaan)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
mod <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f~~1*f
'
outt = cfa(mod,HS,meanstructure=FALSE)
system.time(cfa(mod,HS,meanstructure=TRUE))
summary(outt)
system.time(fit1 <- regsem(outt,lambda=0.17,type="lasso",
gradFun="ram",block=TRUE))
fit1$pars_pen
library(regsem)
summary(fit1)
library(regsem)
library(lavaan)
library(regsem)
N = 200
X <- rnorm(N)
M1 <- .3*X + rnorm(N)
M2 <- .3*X + rnorm(N)
M3 <- .3*X + rnorm(N)
M4 <- .3*X + rnorm(N)
M5 <- .3*X + rnorm(N)
M6 <- .3*X + rnorm(N)
M7 <- .3*X + rnorm(N)
M8 <- .3*X + rnorm(N)
M9 <- .3*X + rnorm(N)
M10 <- .3*X + rnorm(N)
M11 <- rnorm(N)
M12 <- rnorm(N)
M13 <- rnorm(N)
M14 <- rnorm(N)
M15 <- rnorm(N)
Y <- .3*M1 + .3*M2 + .3*M3 + .3*M4 + .3*M5 + .3*M6 +.3*M7 + .3*M8 + .3*M9 + .3*M10 + rnorm(N)
Data <- data.frame(X,Y,M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12,M13,M14,M15)
model <-
' # direct effect
Y ~ c*X
# mediator
M1 ~ a1*X
M2 ~ a2*X
M3 ~ a3*X
M4 ~ a4*X
M5 ~ a5*X
M6 ~ a6*X
M7 ~ a7*X
M8 ~ a8*X
M9 ~ a9*X
M10 ~ a10*X
M11 ~ a11*X
M12 ~ a12*X
M13 ~ a13*X
M14 ~ a14*X
M15 ~ a15*X
Y ~ b1*M1 + b2*M2 + b3*M3 + b4*M4 + b5*M5 + b6*M6 + b7*M7 + b8*M8 + b9*M9 + b10*M10 + b11*M11 + b12*M12 + b13*M13 + b14*M14 + b15*M15
# indirect effect (a*b)
a1b1 := a1*b1
a2b2 := a2*b2
a3b3 := a3*b3
a4b4 := a4*b4
a5b5 := a5*b5
a6b6 := a6*b6
a7b7 := a7*b7
a8b8 := a8*b8
a9b9 := a9*b9
a10b10 := a10*b10
a11b11 := a11*b11
a12b12 := a12*b12
a13b13 := a13*b13
a14b14 := a14*b14
a15b15 := a15*b15
# total effect
total := c + (a1*b1) + (a2*b2) + (a3*b3) + (a4*b4) + (a5*b5) +
(a6*b6) + (a7*b7) + (a8*b8) + (a9*b9) + (a10*b10) +
(a11*b11) + (a12*b12) + (a13*b13) + (a14*b14) + (a15*b15)
'
fit <- sem(model,data=Data,fixed.x=T)
summary(fit)
fitmeasures(fit)
library(regsem)
system.time(fit.cv <- cv_regsem(fit,type="lasso",pars_pen = c(2:31),jump=0.002,
n.lambda=5,fit.ret=c("chisq","BIC"),fit.ret2="train"))
fit.cv
library(regsem)
system.time(fit.cv <- cv_regsem(fit,type="lasso",pars_pen = c(2:31),jump=0.002,
n.lambda=5,fit.ret=c("chisq","BIC"),fit.ret2="train"))
fit.cv
max(fit.cv[[1]])
library(regsem)
plot(fit.cv)
library(regsem)
library(regsem)
plot(fit.cv)
plot.regsem(fit.cv)
library(regsem)
library(lavaan)
HS <- data.frame(scale(HolzingerSwineford1939[,7:15]))
mod <- '
f =~ NA*x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
f~~1*f
'
outt = cfa(mod,HS,meanstructure=FALSE)
system.time(cfa(mod,HS,meanstructure=TRUE))
summary(outt)
system.time(fit1 <- regsem(outt,lambda=0.17,type="lasso",
gradFun="ram",block=TRUE))
fit1
summary(fit1)
library(regsem)
system.time(fit1 <- regsem(outt,lambda=0.17,type="lasso",
gradFun="ram",block=TRUE))
summary(fit1)
library(regsem)
library(regsem)
